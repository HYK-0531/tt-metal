name: "[internal] Fabric unit tests impl"

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
      runner-label:
        required: true
        type: string
      timeout:
        required: false
        type: number
        default: 10
      build-artifact-name:
        required: true
        type: string
      docker-image:
        required: true
        type: string
      wheel-artifact-name:
        required: true
        type: string

jobs:
  fabric-tests:
    uses: ./.github/workflows/common-container-workflow.yml
    with:
      arch: ${{ matrix.arch }}
      runner-label: ${{ inputs.runner-label }}
      docker-image: ${{ inputs.docker-image }}
      timeout: ${{ inputs.timeout }}
      build-artifact-name: ${{ inputs.build-artifact-name }}
      wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      test-name: ${{ matrix.test-group.name }}
      test-command: ${{ matrix.test-group.cmd }}
    strategy:
      fail-fast: false
      matrix:
        arch: [ "wormhole_b0" ]
        test-group: [
          { name: "slow dispatch fabric unit tests", cmd: "./build/test/tt_metal/tt_fabric/fabric_unit_tests --gtest_filter='Fabric2D*Fixture.*'" },
          { name: "fast dispatch fabric unit tests", cmd: "TT_METAL_SLOW_DISPATCH_MODE=1 ./build/test/tt_metal/tt_fabric/fabric_unit_tests --gtest_filter='Fabric2D*Fixture.*'" },
        ]
    name: ${{ matrix.arch }} ${{ inputs.runner-label }} ${{ matrix.test-group.name }}

  async-write-sanity-tests:
    uses: ./.github/workflows/common-container-workflow.yml
    with:
      arch: ${{ matrix.arch }}
      runner-label: ${{ inputs.runner-label }}
      docker-image: ${{ inputs.docker-image }}
      timeout: ${{ inputs.timeout }}
      build-artifact-name: ${{ inputs.build-artifact-name }}
      wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      test-name: "Async Write Tests"
      test-command: |
        echo "LOG_FABRIC: Test: num_src_endpoints=${{ matrix.params.num_src_endpoints }}, benchmark='${{ matrix.params.benchmark }}', init_level='${{ matrix.params.init_level }}'"
        TT_METAL_SLOW_DISPATCH_MODE=1 ./build/test/tt_metal/perf_microbenchmark/routing/test_tt_fabric_sanity_${ARCH_NAME} \
          --fabric_command 1 --board_type n300 --data_kb_per_tx 10 --num_dest_endpoints 8 --num_links 16 \
          --num_src_endpoints ${{ matrix.params.num_src_endpoints }} ${{ matrix.params.benchmark }} ${{ matrix.params.init_level }}
    strategy:
      fail-fast: false
      matrix:
        arch: [ "wormhole_b0" ]
        params:
          - { num_src_endpoints: "20", benchmark: "", init_level: "" }
          - { num_src_endpoints: "8",  benchmark: "--benchmark", init_level: "" }
          - { num_src_endpoints: "20", benchmark: "", init_level: "--metal_fabric_init_level 1" }
          - { num_src_endpoints: "8",  benchmark: "--benchmark", init_level: "--metal_fabric_init_level 1" }
    name: ${{ matrix.arch }} ${{ inputs.runner-label }} Async Write Sanity Tests

  async-write-mcast-sanity-tests:
    uses: ./.github/workflows/common-container-workflow.yml
    with:
      arch: ${{ matrix.arch }}
      runner-label: ${{ inputs.runner-label }}
      docker-image: ${{ inputs.docker-image }}
      timeout: ${{ inputs.timeout }}
      build-artifact-name: ${{ inputs.build-artifact-name }}
      wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      test-name: "Async Write Mcast Tests"
      test-command: |
        echo "LOG_FABRIC: e_depth='${{ matrix.params.e_depth }}', w_depth='${{ matrix.params.w_depth }}', init_level='${{ matrix.params.init_level }}'"
        TT_METAL_SLOW_DISPATCH_MODE=1 ./build/test/tt_metal/perf_microbenchmark/routing/test_tt_fabric_sanity_${ARCH_NAME} \
          --fabric_command 1 --board_type n300 --data_kb_per_tx 10 --num_src_endpoints 20 --num_dest_endpoints 8 --num_links 16 \
          ${{ matrix.params.e_depth }} ${{ matrix.params.w_depth }} ${{ matrix.params.init_level }}
    strategy:
      fail-fast: false
      matrix:
        arch: [ "wormhole_b0" ]
        params:
          - { e_depth: "--e_depth 1", w_depth: "", init_level: "" }
          - { e_depth: "", w_depth: "--w_depth 1", init_level: "" }
          - { e_depth: "--e_depth 1", w_depth: "", init_level: "--metal_fabric_init_level 1" }
    name: ${{ matrix.arch }} ${{ inputs.runner-label }} Async Write Mcast Sanity Tests

  atomic-inc-sanity-tests:
    uses: ./.github/workflows/common-container-workflow.yml
    with:
      arch: ${{ matrix.arch }}
      runner-label: ${{ inputs.runner-label }}
      docker-image: ${{ inputs.docker-image }}
      timeout: ${{ inputs.timeout }}
      build-artifact-name: ${{ inputs.build-artifact-name }}
      wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      test-name: "Atomic Inc Tests"
      test-command: |
        echo "LOG_FABRIC: init_level='${{ matrix.params.init_level }}'"
        TT_METAL_SLOW_DISPATCH_MODE=1 ./build/test/tt_metal/perf_microbenchmark/routing/test_tt_fabric_sanity_${ARCH_NAME} \
          --fabric_command 64 --board_type n300 --data_kb_per_tx 10 --num_src_endpoints 20 --num_dest_endpoints 8 --num_links 16 \
          ${{ matrix.params.init_level }}
    strategy:
      fail-fast: false
      matrix:
        arch: [ "wormhole_b0" ]
        params:
          - { init_level: "" }
          - { init_level: "--metal_fabric_init_level 1" }
    name: ${{ matrix.arch }} ${{ inputs.runner-label }} Atomic Inc Sanity Tests

  async-write-atomic-inc-sanity-tests:
    uses: ./.github/workflows/common-container-workflow.yml
    with:
      arch: ${{ matrix.arch }}
      runner-label: ${{ inputs.runner-label }}
      docker-image: ${{ inputs.docker-image }}
      timeout: ${{ inputs.timeout }}
      build-artifact-name: ${{ inputs.build-artifact-name }}
      wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      test-name: "Async Write Atomic Inc Tests"
      test-command: |
        echo "LOG_FABRIC: init_level='${{ matrix.params.init_level }}'"
        TT_METAL_SLOW_DISPATCH_MODE=1 ./build/test/tt_metal/perf_microbenchmark/routing/test_tt_fabric_sanity_${ARCH_NAME} \
          --fabric_command 65 --board_type n300 --data_kb_per_tx 10 --num_src_endpoints 20 --num_dest_endpoints 8 --num_links 16 \
          ${{ matrix.params.init_level }}
    strategy:
      fail-fast: false
      matrix:
        arch: [ "wormhole_b0" ]
        params:
          - { init_level: "" }
          - { init_level: "--metal_fabric_init_level 1" }
    name: ${{ matrix.arch }} ${{ inputs.runner-label }} Async Write Atomic Inc Sanity Tests

  async-write-with-push-router-sanity-tests:
    uses: ./.github/workflows/common-container-workflow.yml
    with:
      arch: ${{ matrix.arch }}
      runner-label: ${{ inputs.runner-label }}
      docker-image: ${{ inputs.docker-image }}
      timeout: ${{ inputs.timeout }}
      build-artifact-name: ${{ inputs.build-artifact-name }}
      wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      test-name: "Async Write w/Push Router Tests"
      test-command: |
        echo "LOG_FABRIC: data_kb_per_tx='${{ matrix.params.data_kb_per_tx }}', endpoints='${{ matrix.params.endpoints }}', benchmark='${{ matrix.params.benchmark }}', init_level='${{ matrix.params.init_level }}'"
        TT_METAL_SLOW_DISPATCH_MODE=1 ./build/test/tt_metal/perf_microbenchmark/routing/test_tt_fabric_sanity_${ARCH_NAME} \
          --fabric_command 1 --board_type n300 --push_router \
          --data_kb_per_tx ${{ matrix.params.data_kb_per_tx }} ${{ matrix.params.endpoints }} ${{ matrix.params.benchmark }} ${{ matrix.params.init_level }}
    strategy:
      fail-fast: false
      matrix:
        arch: [ "wormhole_b0" ]
        params:
          - { data_kb_per_tx: "600", endpoints: "", benchmark: "", init_level: "" }
          - { data_kb_per_tx: "10",  endpoints: "--num_src_endpoints 8 --num_dest_endpoints 8 --num_links 16", benchmark: "--benchmark", init_level: "" }
          - { data_kb_per_tx: "600", endpoints: "", benchmark: "", init_level: "--metal_fabric_init_level 1" }
          - { data_kb_per_tx: "10",  endpoints: "--num_src_endpoints 8 --num_dest_endpoints 8 --num_links 16", benchmark: "--benchmark", init_level: "--metal_fabric_init_level 1" }
    name: ${{ matrix.arch }} ${{ inputs.runner-label }} Async Write with Push Router Tests

  async-write-mcast-with-push-router-sanity-tests:
    uses: ./.github/workflows/common-container-workflow.yml
    with:
      arch: ${{ matrix.arch }}
      runner-label: ${{ inputs.runner-label }}
      docker-image: ${{ inputs.docker-image }}
      timeout: ${{ inputs.timeout }}
      build-artifact-name: ${{ inputs.build-artifact-name }}
      wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      test-name: "Async Write Mcast w/Push Router Tests"
      test-command: |
        echo "LOG_FABRIC: e_depth='${{ matrix.params.e_depth }}', w_depth='${{ matrix.params.w_depth }}', init_level='${{ matrix.params.init_level }}'"
        TT_METAL_SLOW_DISPATCH_MODE=1 ./build/test/tt_metal/perf_microbenchmark/routing/test_tt_fabric_sanity_${ARCH_NAME} \
          --fabric_command 1 --board_type n300 --data_kb_per_tx 600 --num_links 16 --push_router \
          ${{ matrix.params.e_depth }} ${{ matrix.params.w_depth }} ${{ matrix.params.init_level }}
    strategy:
      fail-fast: false
      matrix:
        arch: [ "wormhole_b0" ]
        params:
          - { init_level: "", e_depth: "--e_depth 1", w_depth: "" }
          - { init_level: "", e_depth: "", w_depth: "--w_depth 1" }
          - { init_level: "--metal_fabric_init_level 1", e_depth: "--e_depth 1", w_depth: "" }
    name: ${{ matrix.arch }} ${{ inputs.runner-label }} Async Write Mcast with Push Router Tests

  atomic-inc-with-push-router-sanity-tests:
    uses: ./.github/workflows/common-container-workflow.yml
    with:
      arch: ${{ matrix.arch }}
      runner-label: ${{ inputs.runner-label }}
      docker-image: ${{ inputs.docker-image }}
      timeout: ${{ inputs.timeout }}
      build-artifact-name: ${{ inputs.build-artifact-name }}
      wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      test-name: "Atomic Inc w/Push Router Tests"
      test-command: |
        echo "LOG_FABRIC: data_kb_per_tx='${{ matrix.params.data_kb_per_tx }}', init_level='${{ matrix.params.init_level }}'"
        TT_METAL_SLOW_DISPATCH_MODE=1 ./build/test/tt_metal/perf_microbenchmark/routing/test_tt_fabric_sanity_${ARCH_NAME} \
          --fabric_command 64 --board_type n300 --push_router \
          --data_kb_per_tx ${{ matrix.params.data_kb_per_tx }} ${{ matrix.params.init_level }}
    strategy:
      fail-fast: false
      matrix:
        arch: [ "wormhole_b0" ]
        params:
          - { init_level: "", data_kb_per_tx: "600" }
          - { init_level: "--metal_fabric_init_level 1", data_kb_per_tx: "600" }
    name: ${{ matrix.arch }} ${{ inputs.runner-label }} Atomic Inc with Push Router Tests

  async-write-atomic-inc-with-push-router-sanity-tests:
    uses: ./.github/workflows/common-container-workflow.yml
    with:
      arch: ${{ matrix.arch }}
      runner-label: ${{ inputs.runner-label }}
      docker-image: ${{ inputs.docker-image }}
      timeout: ${{ inputs.timeout }}
      build-artifact-name: ${{ inputs.build-artifact-name }}
      wheel-artifact-name: ${{ inputs.wheel-artifact-name }}
      test-name: "Async Write Atomic Inc w/Push Router Tests"
      test-command: |
        echo "LOG_FABRIC: data_kb_per_tx='${{ matrix.params.data_kb_per_tx }}', init_level='${{ matrix.params.init_level }}'"
        TT_METAL_SLOW_DISPATCH_MODE=1 ./build/test/tt_metal/perf_microbenchmark/routing/test_tt_fabric_sanity_${ARCH_NAME} \
          --fabric_command 65 --board_type n300 --push_router \
          --data_kb_per_tx ${{ matrix.params.data_kb_per_tx }} ${{ matrix.params.init_level }}
    strategy:
      fail-fast: false
      matrix:
        arch: [ "wormhole_b0" ]
        params:
          - { init_level: "", data_kb_per_tx: "600" }
          - { init_level: "--metal_fabric_init_level 1", data_kb_per_tx: "600" }
    name: ${{ matrix.arch }} ${{ inputs.runner-label }} Async Write Atomic Inc with Push Router Tests
