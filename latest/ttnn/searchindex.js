Search.setIndex({"docnames": ["index", "resources/contributing", "resources/support", "tt_metal_models/get_performance", "tt_metal_models/get_started", "ttnn/about", "ttnn/adding_new_ttnn_operation", "ttnn/api", "ttnn/api/ttnn.Conv2dConfig", "ttnn/api/ttnn.Conv2dSliceConfig", "ttnn/api/ttnn.GetDefaultDevice", "ttnn/api/ttnn.SetDefaultDevice", "ttnn/api/ttnn.abs", "ttnn/api/ttnn.abs_bw", "ttnn/api/ttnn.acos", "ttnn/api/ttnn.acos_bw", "ttnn/api/ttnn.acosh", "ttnn/api/ttnn.acosh_bw", "ttnn/api/ttnn.add", "ttnn/api/ttnn.add_bw", "ttnn/api/ttnn.addalpha", "ttnn/api/ttnn.addalpha_bw", "ttnn/api/ttnn.addcdiv", "ttnn/api/ttnn.addcdiv_bw", "ttnn/api/ttnn.addcmul", "ttnn/api/ttnn.addcmul_bw", "ttnn/api/ttnn.all_gather", "ttnn/api/ttnn.alt_complex_rotate90", "ttnn/api/ttnn.angle", "ttnn/api/ttnn.angle_bw", "ttnn/api/ttnn.arange", "ttnn/api/ttnn.argmax", "ttnn/api/ttnn.as_tensor", "ttnn/api/ttnn.asin", "ttnn/api/ttnn.asin_bw", "ttnn/api/ttnn.asinh", "ttnn/api/ttnn.asinh_bw", "ttnn/api/ttnn.assign_bw", "ttnn/api/ttnn.atan", "ttnn/api/ttnn.atan2", "ttnn/api/ttnn.atan2_bw", "ttnn/api/ttnn.atan_bw", "ttnn/api/ttnn.atanh", "ttnn/api/ttnn.atanh_bw", "ttnn/api/ttnn.batch_norm", "ttnn/api/ttnn.bias_gelu_bw", "ttnn/api/ttnn.bitwise_and", "ttnn/api/ttnn.bitwise_left_shift", "ttnn/api/ttnn.bitwise_not", "ttnn/api/ttnn.bitwise_or", "ttnn/api/ttnn.bitwise_right_shift", "ttnn/api/ttnn.bitwise_xor", "ttnn/api/ttnn.cbrt", "ttnn/api/ttnn.ceil", "ttnn/api/ttnn.ceil_bw", "ttnn/api/ttnn.celu", "ttnn/api/ttnn.celu_bw", "ttnn/api/ttnn.clamp", "ttnn/api/ttnn.clamp_bw", "ttnn/api/ttnn.clip", "ttnn/api/ttnn.clip_bw", "ttnn/api/ttnn.clone", "ttnn/api/ttnn.close_device", "ttnn/api/ttnn.concat", "ttnn/api/ttnn.concat_bw", "ttnn/api/ttnn.conj", "ttnn/api/ttnn.conj_bw", "ttnn/api/ttnn.conv1d", "ttnn/api/ttnn.conv2d", "ttnn/api/ttnn.conv_transpose2d", "ttnn/api/ttnn.cos", "ttnn/api/ttnn.cos_bw", "ttnn/api/ttnn.cosh", "ttnn/api/ttnn.cosh_bw", "ttnn/api/ttnn.create_sharded_memory_config", "ttnn/api/ttnn.deallocate", "ttnn/api/ttnn.deg2rad", "ttnn/api/ttnn.deg2rad_bw", "ttnn/api/ttnn.digamma", "ttnn/api/ttnn.digamma_bw", "ttnn/api/ttnn.div", "ttnn/api/ttnn.div_bw", "ttnn/api/ttnn.div_no_nan", "ttnn/api/ttnn.div_no_nan_bw", "ttnn/api/ttnn.downsample", "ttnn/api/ttnn.dump_tensor", "ttnn/api/ttnn.elu", "ttnn/api/ttnn.elu_bw", "ttnn/api/ttnn.embedding", "ttnn/api/ttnn.embedding_bw", "ttnn/api/ttnn.empty", "ttnn/api/ttnn.empty_like", "ttnn/api/ttnn.eq", "ttnn/api/ttnn.eq_", "ttnn/api/ttnn.eqz", "ttnn/api/ttnn.erf", "ttnn/api/ttnn.erf_bw", "ttnn/api/ttnn.erfc", "ttnn/api/ttnn.erfc_bw", "ttnn/api/ttnn.erfinv", "ttnn/api/ttnn.erfinv_bw", "ttnn/api/ttnn.exp", "ttnn/api/ttnn.exp2", "ttnn/api/ttnn.exp2_bw", "ttnn/api/ttnn.exp_bw", "ttnn/api/ttnn.experimental.all_reduce", "ttnn/api/ttnn.experimental.conv3d", "ttnn/api/ttnn.experimental.cumprod", "ttnn/api/ttnn.experimental.cumsum", "ttnn/api/ttnn.experimental.dropout", "ttnn/api/ttnn.experimental.gelu_bw", "ttnn/api/ttnn.experimental.rotary_embedding", "ttnn/api/ttnn.experimental.sort", "ttnn/api/ttnn.expm1", "ttnn/api/ttnn.expm1_bw", "ttnn/api/ttnn.fill", "ttnn/api/ttnn.fill_bw", "ttnn/api/ttnn.fill_ones_rm", "ttnn/api/ttnn.fill_rm", "ttnn/api/ttnn.fill_zero_bw", "ttnn/api/ttnn.floor", "ttnn/api/ttnn.floor_bw", "ttnn/api/ttnn.floor_div", "ttnn/api/ttnn.fmod", "ttnn/api/ttnn.fmod_bw", "ttnn/api/ttnn.format_input_tensor", "ttnn/api/ttnn.format_output_tensor", "ttnn/api/ttnn.frac", "ttnn/api/ttnn.frac_bw", "ttnn/api/ttnn.from_device", "ttnn/api/ttnn.from_torch", "ttnn/api/ttnn.full", "ttnn/api/ttnn.full_like", "ttnn/api/ttnn.gcd", "ttnn/api/ttnn.ge", "ttnn/api/ttnn.ge_", "ttnn/api/ttnn.geglu", "ttnn/api/ttnn.gelu", "ttnn/api/ttnn.gelu_bw", "ttnn/api/ttnn.gez", "ttnn/api/ttnn.global_avg_pool2d", "ttnn/api/ttnn.glu", "ttnn/api/ttnn.group_norm", "ttnn/api/ttnn.gt", "ttnn/api/ttnn.gt_", "ttnn/api/ttnn.gtz", "ttnn/api/ttnn.hardshrink", "ttnn/api/ttnn.hardshrink_bw", "ttnn/api/ttnn.hardsigmoid", "ttnn/api/ttnn.hardsigmoid_bw", "ttnn/api/ttnn.hardswish", "ttnn/api/ttnn.hardswish_bw", "ttnn/api/ttnn.hardtanh", "ttnn/api/ttnn.hardtanh_bw", "ttnn/api/ttnn.heaviside", "ttnn/api/ttnn.hypot", "ttnn/api/ttnn.hypot_bw", "ttnn/api/ttnn.i0", "ttnn/api/ttnn.i0_bw", "ttnn/api/ttnn.identity", "ttnn/api/ttnn.imag", "ttnn/api/ttnn.imag_bw", "ttnn/api/ttnn.indexed_fill", "ttnn/api/ttnn.is_imag", "ttnn/api/ttnn.is_real", "ttnn/api/ttnn.isclose", "ttnn/api/ttnn.isfinite", "ttnn/api/ttnn.isinf", "ttnn/api/ttnn.isnan", "ttnn/api/ttnn.isneginf", "ttnn/api/ttnn.isposinf", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_", "ttnn/api/ttnn.kv_cache.update_cache_for_token_", "ttnn/api/ttnn.l1_loss", "ttnn/api/ttnn.layer_norm", "ttnn/api/ttnn.lcm", "ttnn/api/ttnn.ldexp", "ttnn/api/ttnn.ldexp_bw", "ttnn/api/ttnn.le", "ttnn/api/ttnn.le_", "ttnn/api/ttnn.leaky_relu", "ttnn/api/ttnn.leaky_relu_bw", "ttnn/api/ttnn.lerp", "ttnn/api/ttnn.lerp_bw", "ttnn/api/ttnn.lez", "ttnn/api/ttnn.lgamma", "ttnn/api/ttnn.lgamma_bw", "ttnn/api/ttnn.linear", "ttnn/api/ttnn.load_tensor", "ttnn/api/ttnn.log", "ttnn/api/ttnn.log10", "ttnn/api/ttnn.log10_bw", "ttnn/api/ttnn.log1p", "ttnn/api/ttnn.log1p_bw", "ttnn/api/ttnn.log2", "ttnn/api/ttnn.log2_bw", "ttnn/api/ttnn.log_bw", "ttnn/api/ttnn.log_sigmoid", "ttnn/api/ttnn.log_sigmoid_bw", "ttnn/api/ttnn.logaddexp", "ttnn/api/ttnn.logaddexp2", "ttnn/api/ttnn.logaddexp2_bw", "ttnn/api/ttnn.logaddexp_bw", "ttnn/api/ttnn.logical_and", "ttnn/api/ttnn.logical_and_", "ttnn/api/ttnn.logical_not", "ttnn/api/ttnn.logical_not_", "ttnn/api/ttnn.logical_or", "ttnn/api/ttnn.logical_or_", "ttnn/api/ttnn.logical_xor", "ttnn/api/ttnn.logical_xor_", "ttnn/api/ttnn.logit", "ttnn/api/ttnn.logit_bw", "ttnn/api/ttnn.logiteps_bw", "ttnn/api/ttnn.lt", "ttnn/api/ttnn.lt_", "ttnn/api/ttnn.ltz", "ttnn/api/ttnn.mac", "ttnn/api/ttnn.manage_device", "ttnn/api/ttnn.matmul", "ttnn/api/ttnn.max", "ttnn/api/ttnn.max_bw", "ttnn/api/ttnn.max_pool2d", "ttnn/api/ttnn.maximum", "ttnn/api/ttnn.mean", "ttnn/api/ttnn.min", "ttnn/api/ttnn.min_bw", "ttnn/api/ttnn.minimum", "ttnn/api/ttnn.mish", "ttnn/api/ttnn.model_preprocessing.preprocess_model", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters", "ttnn/api/ttnn.moreh_sum", "ttnn/api/ttnn.mse_loss", "ttnn/api/ttnn.mul_bw", "ttnn/api/ttnn.multigammaln", "ttnn/api/ttnn.multigammaln_bw", "ttnn/api/ttnn.multiply", "ttnn/api/ttnn.ne", "ttnn/api/ttnn.ne_", "ttnn/api/ttnn.neg", "ttnn/api/ttnn.neg_bw", "ttnn/api/ttnn.nextafter", "ttnn/api/ttnn.nez", "ttnn/api/ttnn.nonzero", "ttnn/api/ttnn.normalize_global", "ttnn/api/ttnn.normalize_hw", "ttnn/api/ttnn.ones", "ttnn/api/ttnn.ones_like", "ttnn/api/ttnn.open_device", "ttnn/api/ttnn.outer", "ttnn/api/ttnn.pad", "ttnn/api/ttnn.pad_to_tile_shape", "ttnn/api/ttnn.permute", "ttnn/api/ttnn.polar", "ttnn/api/ttnn.polar_bw", "ttnn/api/ttnn.polygamma", "ttnn/api/ttnn.polygamma_bw", "ttnn/api/ttnn.polyval", "ttnn/api/ttnn.pow", "ttnn/api/ttnn.pow_bw", "ttnn/api/ttnn.prelu", "ttnn/api/ttnn.prepare_conv_bias", "ttnn/api/ttnn.prepare_conv_transpose2d_bias", "ttnn/api/ttnn.prepare_conv_transpose2d_weights", "ttnn/api/ttnn.prepare_conv_weights", "ttnn/api/ttnn.prod", "ttnn/api/ttnn.prod_bw", "ttnn/api/ttnn.rad2deg", "ttnn/api/ttnn.rad2deg_bw", "ttnn/api/ttnn.rdiv", "ttnn/api/ttnn.rdiv_bw", "ttnn/api/ttnn.real", "ttnn/api/ttnn.real_bw", "ttnn/api/ttnn.reallocate", "ttnn/api/ttnn.reciprocal", "ttnn/api/ttnn.reciprocal_bw", "ttnn/api/ttnn.reduce_scatter", "ttnn/api/ttnn.register_post_operation_hook", "ttnn/api/ttnn.register_pre_operation_hook", "ttnn/api/ttnn.reglu", "ttnn/api/ttnn.relu", "ttnn/api/ttnn.relu6", "ttnn/api/ttnn.relu6_bw", "ttnn/api/ttnn.relu_bw", "ttnn/api/ttnn.relu_max", "ttnn/api/ttnn.relu_min", "ttnn/api/ttnn.remainder", "ttnn/api/ttnn.remainder_bw", "ttnn/api/ttnn.repeat", "ttnn/api/ttnn.repeat_bw", "ttnn/api/ttnn.repeat_interleave", "ttnn/api/ttnn.reshape", "ttnn/api/ttnn.rms_norm", "ttnn/api/ttnn.round", "ttnn/api/ttnn.round_bw", "ttnn/api/ttnn.rpow", "ttnn/api/ttnn.rpow_bw", "ttnn/api/ttnn.rsqrt", "ttnn/api/ttnn.rsqrt_bw", "ttnn/api/ttnn.rsub", "ttnn/api/ttnn.rsub_bw", "ttnn/api/ttnn.scatter", "ttnn/api/ttnn.selu", "ttnn/api/ttnn.selu_bw", "ttnn/api/ttnn.set_printoptions", "ttnn/api/ttnn.sigmoid", "ttnn/api/ttnn.sigmoid_accurate", "ttnn/api/ttnn.sigmoid_bw", "ttnn/api/ttnn.sign", "ttnn/api/ttnn.sign_bw", "ttnn/api/ttnn.signbit", "ttnn/api/ttnn.silu", "ttnn/api/ttnn.silu_bw", "ttnn/api/ttnn.sin", "ttnn/api/ttnn.sin_bw", "ttnn/api/ttnn.sinh", "ttnn/api/ttnn.sinh_bw", "ttnn/api/ttnn.slice", "ttnn/api/ttnn.softmax", "ttnn/api/ttnn.softplus", "ttnn/api/ttnn.softplus_bw", "ttnn/api/ttnn.softshrink", "ttnn/api/ttnn.softshrink_bw", "ttnn/api/ttnn.softsign", "ttnn/api/ttnn.softsign_bw", "ttnn/api/ttnn.sqrt", "ttnn/api/ttnn.sqrt_bw", "ttnn/api/ttnn.square", "ttnn/api/ttnn.square_bw", "ttnn/api/ttnn.squared_difference", "ttnn/api/ttnn.squared_difference_bw", "ttnn/api/ttnn.std", "ttnn/api/ttnn.sub_bw", "ttnn/api/ttnn.subalpha", "ttnn/api/ttnn.subalpha_bw", "ttnn/api/ttnn.subtract", "ttnn/api/ttnn.sum", "ttnn/api/ttnn.swiglu", "ttnn/api/ttnn.swish", "ttnn/api/ttnn.synchronize_device", "ttnn/api/ttnn.tan", "ttnn/api/ttnn.tan_bw", "ttnn/api/ttnn.tanh", "ttnn/api/ttnn.tanh_bw", "ttnn/api/ttnn.tanhshrink", "ttnn/api/ttnn.tanhshrink_bw", "ttnn/api/ttnn.threshold", "ttnn/api/ttnn.threshold_bw", "ttnn/api/ttnn.tilize", "ttnn/api/ttnn.tilize_with_val_padding", "ttnn/api/ttnn.to_device", "ttnn/api/ttnn.to_layout", "ttnn/api/ttnn.to_memory_config", "ttnn/api/ttnn.to_torch", "ttnn/api/ttnn.topk", "ttnn/api/ttnn.transformer.attention_softmax", "ttnn/api/ttnn.transformer.attention_softmax_", "ttnn/api/ttnn.transformer.concatenate_heads", "ttnn/api/ttnn.transformer.scaled_dot_product_attention", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads", "ttnn/api/ttnn.tril", "ttnn/api/ttnn.triu", "ttnn/api/ttnn.trunc", "ttnn/api/ttnn.trunc_bw", "ttnn/api/ttnn.unary_chain", "ttnn/api/ttnn.untilize", "ttnn/api/ttnn.untilize_with_unpadding", "ttnn/api/ttnn.upsample", "ttnn/api/ttnn.var", "ttnn/api/ttnn.where", "ttnn/api/ttnn.where_bw", "ttnn/api/ttnn.xlogy", "ttnn/api/ttnn.xlogy_bw", "ttnn/api/ttnn.zeros", "ttnn/api/ttnn.zeros_like", "ttnn/converting_torch_model_to_ttnn", "ttnn/demos", "ttnn/get_started", "ttnn/installing", "ttnn/onboarding", "ttnn/profiling_ttnn_operations", "ttnn/tensor", "ttnn/tutorials", "ttnn/tutorials/graphing_torch_dit", "ttnn/tutorials/matmul", "ttnn/tutorials/multihead-attention", "ttnn/tutorials/profiling", "ttnn/tutorials/resnet-basic-block", "ttnn/tutorials/tensor_and_add_operation", "ttnn/tutorials/ttnn-tracer", "ttnn/tutorials/ttnn_tutorials/001", "ttnn/tutorials/ttnn_tutorials/002", "ttnn/tutorials/ttnn_tutorials/003", "ttnn/tutorials/ttnn_tutorials/004", "ttnn/tutorials/ttnn_tutorials/005", "ttnn/tutorials/ttnn_tutorials/006", "ttnn/tutorials/ttnn_tutorials/007", "ttnn/usage"], "filenames": ["index.rst", "resources/contributing.rst", "resources/support.rst", "tt_metal_models/get_performance.rst", "tt_metal_models/get_started.rst", "ttnn/about.rst", "ttnn/adding_new_ttnn_operation.rst", "ttnn/api.rst", "ttnn/api/ttnn.Conv2dConfig.rst", "ttnn/api/ttnn.Conv2dSliceConfig.rst", "ttnn/api/ttnn.GetDefaultDevice.rst", "ttnn/api/ttnn.SetDefaultDevice.rst", "ttnn/api/ttnn.abs.rst", "ttnn/api/ttnn.abs_bw.rst", "ttnn/api/ttnn.acos.rst", "ttnn/api/ttnn.acos_bw.rst", "ttnn/api/ttnn.acosh.rst", "ttnn/api/ttnn.acosh_bw.rst", "ttnn/api/ttnn.add.rst", "ttnn/api/ttnn.add_bw.rst", "ttnn/api/ttnn.addalpha.rst", "ttnn/api/ttnn.addalpha_bw.rst", "ttnn/api/ttnn.addcdiv.rst", "ttnn/api/ttnn.addcdiv_bw.rst", "ttnn/api/ttnn.addcmul.rst", "ttnn/api/ttnn.addcmul_bw.rst", "ttnn/api/ttnn.all_gather.rst", "ttnn/api/ttnn.alt_complex_rotate90.rst", "ttnn/api/ttnn.angle.rst", "ttnn/api/ttnn.angle_bw.rst", "ttnn/api/ttnn.arange.rst", "ttnn/api/ttnn.argmax.rst", "ttnn/api/ttnn.as_tensor.rst", "ttnn/api/ttnn.asin.rst", "ttnn/api/ttnn.asin_bw.rst", "ttnn/api/ttnn.asinh.rst", "ttnn/api/ttnn.asinh_bw.rst", "ttnn/api/ttnn.assign_bw.rst", "ttnn/api/ttnn.atan.rst", "ttnn/api/ttnn.atan2.rst", "ttnn/api/ttnn.atan2_bw.rst", "ttnn/api/ttnn.atan_bw.rst", "ttnn/api/ttnn.atanh.rst", "ttnn/api/ttnn.atanh_bw.rst", "ttnn/api/ttnn.batch_norm.rst", "ttnn/api/ttnn.bias_gelu_bw.rst", "ttnn/api/ttnn.bitwise_and.rst", "ttnn/api/ttnn.bitwise_left_shift.rst", "ttnn/api/ttnn.bitwise_not.rst", "ttnn/api/ttnn.bitwise_or.rst", "ttnn/api/ttnn.bitwise_right_shift.rst", "ttnn/api/ttnn.bitwise_xor.rst", "ttnn/api/ttnn.cbrt.rst", "ttnn/api/ttnn.ceil.rst", "ttnn/api/ttnn.ceil_bw.rst", "ttnn/api/ttnn.celu.rst", "ttnn/api/ttnn.celu_bw.rst", "ttnn/api/ttnn.clamp.rst", "ttnn/api/ttnn.clamp_bw.rst", "ttnn/api/ttnn.clip.rst", "ttnn/api/ttnn.clip_bw.rst", "ttnn/api/ttnn.clone.rst", "ttnn/api/ttnn.close_device.rst", "ttnn/api/ttnn.concat.rst", "ttnn/api/ttnn.concat_bw.rst", "ttnn/api/ttnn.conj.rst", "ttnn/api/ttnn.conj_bw.rst", "ttnn/api/ttnn.conv1d.rst", "ttnn/api/ttnn.conv2d.rst", "ttnn/api/ttnn.conv_transpose2d.rst", "ttnn/api/ttnn.cos.rst", "ttnn/api/ttnn.cos_bw.rst", "ttnn/api/ttnn.cosh.rst", "ttnn/api/ttnn.cosh_bw.rst", "ttnn/api/ttnn.create_sharded_memory_config.rst", "ttnn/api/ttnn.deallocate.rst", "ttnn/api/ttnn.deg2rad.rst", "ttnn/api/ttnn.deg2rad_bw.rst", "ttnn/api/ttnn.digamma.rst", "ttnn/api/ttnn.digamma_bw.rst", "ttnn/api/ttnn.div.rst", "ttnn/api/ttnn.div_bw.rst", "ttnn/api/ttnn.div_no_nan.rst", "ttnn/api/ttnn.div_no_nan_bw.rst", "ttnn/api/ttnn.downsample.rst", "ttnn/api/ttnn.dump_tensor.rst", "ttnn/api/ttnn.elu.rst", "ttnn/api/ttnn.elu_bw.rst", "ttnn/api/ttnn.embedding.rst", "ttnn/api/ttnn.embedding_bw.rst", "ttnn/api/ttnn.empty.rst", "ttnn/api/ttnn.empty_like.rst", "ttnn/api/ttnn.eq.rst", "ttnn/api/ttnn.eq_.rst", "ttnn/api/ttnn.eqz.rst", "ttnn/api/ttnn.erf.rst", "ttnn/api/ttnn.erf_bw.rst", "ttnn/api/ttnn.erfc.rst", "ttnn/api/ttnn.erfc_bw.rst", "ttnn/api/ttnn.erfinv.rst", "ttnn/api/ttnn.erfinv_bw.rst", "ttnn/api/ttnn.exp.rst", "ttnn/api/ttnn.exp2.rst", "ttnn/api/ttnn.exp2_bw.rst", "ttnn/api/ttnn.exp_bw.rst", "ttnn/api/ttnn.experimental.all_reduce.rst", "ttnn/api/ttnn.experimental.conv3d.rst", "ttnn/api/ttnn.experimental.cumprod.rst", "ttnn/api/ttnn.experimental.cumsum.rst", "ttnn/api/ttnn.experimental.dropout.rst", "ttnn/api/ttnn.experimental.gelu_bw.rst", "ttnn/api/ttnn.experimental.rotary_embedding.rst", "ttnn/api/ttnn.experimental.sort.rst", "ttnn/api/ttnn.expm1.rst", "ttnn/api/ttnn.expm1_bw.rst", "ttnn/api/ttnn.fill.rst", "ttnn/api/ttnn.fill_bw.rst", "ttnn/api/ttnn.fill_ones_rm.rst", "ttnn/api/ttnn.fill_rm.rst", "ttnn/api/ttnn.fill_zero_bw.rst", "ttnn/api/ttnn.floor.rst", "ttnn/api/ttnn.floor_bw.rst", "ttnn/api/ttnn.floor_div.rst", "ttnn/api/ttnn.fmod.rst", "ttnn/api/ttnn.fmod_bw.rst", "ttnn/api/ttnn.format_input_tensor.rst", "ttnn/api/ttnn.format_output_tensor.rst", "ttnn/api/ttnn.frac.rst", "ttnn/api/ttnn.frac_bw.rst", "ttnn/api/ttnn.from_device.rst", "ttnn/api/ttnn.from_torch.rst", "ttnn/api/ttnn.full.rst", "ttnn/api/ttnn.full_like.rst", "ttnn/api/ttnn.gcd.rst", "ttnn/api/ttnn.ge.rst", "ttnn/api/ttnn.ge_.rst", "ttnn/api/ttnn.geglu.rst", "ttnn/api/ttnn.gelu.rst", "ttnn/api/ttnn.gelu_bw.rst", "ttnn/api/ttnn.gez.rst", "ttnn/api/ttnn.global_avg_pool2d.rst", "ttnn/api/ttnn.glu.rst", "ttnn/api/ttnn.group_norm.rst", "ttnn/api/ttnn.gt.rst", "ttnn/api/ttnn.gt_.rst", "ttnn/api/ttnn.gtz.rst", "ttnn/api/ttnn.hardshrink.rst", "ttnn/api/ttnn.hardshrink_bw.rst", "ttnn/api/ttnn.hardsigmoid.rst", "ttnn/api/ttnn.hardsigmoid_bw.rst", "ttnn/api/ttnn.hardswish.rst", "ttnn/api/ttnn.hardswish_bw.rst", "ttnn/api/ttnn.hardtanh.rst", "ttnn/api/ttnn.hardtanh_bw.rst", "ttnn/api/ttnn.heaviside.rst", "ttnn/api/ttnn.hypot.rst", "ttnn/api/ttnn.hypot_bw.rst", "ttnn/api/ttnn.i0.rst", "ttnn/api/ttnn.i0_bw.rst", "ttnn/api/ttnn.identity.rst", "ttnn/api/ttnn.imag.rst", "ttnn/api/ttnn.imag_bw.rst", "ttnn/api/ttnn.indexed_fill.rst", "ttnn/api/ttnn.is_imag.rst", "ttnn/api/ttnn.is_real.rst", "ttnn/api/ttnn.isclose.rst", "ttnn/api/ttnn.isfinite.rst", "ttnn/api/ttnn.isinf.rst", "ttnn/api/ttnn.isnan.rst", "ttnn/api/ttnn.isneginf.rst", "ttnn/api/ttnn.isposinf.rst", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_.rst", "ttnn/api/ttnn.kv_cache.update_cache_for_token_.rst", "ttnn/api/ttnn.l1_loss.rst", "ttnn/api/ttnn.layer_norm.rst", "ttnn/api/ttnn.lcm.rst", "ttnn/api/ttnn.ldexp.rst", "ttnn/api/ttnn.ldexp_bw.rst", "ttnn/api/ttnn.le.rst", "ttnn/api/ttnn.le_.rst", "ttnn/api/ttnn.leaky_relu.rst", "ttnn/api/ttnn.leaky_relu_bw.rst", "ttnn/api/ttnn.lerp.rst", "ttnn/api/ttnn.lerp_bw.rst", "ttnn/api/ttnn.lez.rst", "ttnn/api/ttnn.lgamma.rst", "ttnn/api/ttnn.lgamma_bw.rst", "ttnn/api/ttnn.linear.rst", "ttnn/api/ttnn.load_tensor.rst", "ttnn/api/ttnn.log.rst", "ttnn/api/ttnn.log10.rst", "ttnn/api/ttnn.log10_bw.rst", "ttnn/api/ttnn.log1p.rst", "ttnn/api/ttnn.log1p_bw.rst", "ttnn/api/ttnn.log2.rst", "ttnn/api/ttnn.log2_bw.rst", "ttnn/api/ttnn.log_bw.rst", "ttnn/api/ttnn.log_sigmoid.rst", "ttnn/api/ttnn.log_sigmoid_bw.rst", "ttnn/api/ttnn.logaddexp.rst", "ttnn/api/ttnn.logaddexp2.rst", "ttnn/api/ttnn.logaddexp2_bw.rst", "ttnn/api/ttnn.logaddexp_bw.rst", "ttnn/api/ttnn.logical_and.rst", "ttnn/api/ttnn.logical_and_.rst", "ttnn/api/ttnn.logical_not.rst", "ttnn/api/ttnn.logical_not_.rst", "ttnn/api/ttnn.logical_or.rst", "ttnn/api/ttnn.logical_or_.rst", "ttnn/api/ttnn.logical_xor.rst", "ttnn/api/ttnn.logical_xor_.rst", "ttnn/api/ttnn.logit.rst", "ttnn/api/ttnn.logit_bw.rst", "ttnn/api/ttnn.logiteps_bw.rst", "ttnn/api/ttnn.lt.rst", "ttnn/api/ttnn.lt_.rst", "ttnn/api/ttnn.ltz.rst", "ttnn/api/ttnn.mac.rst", "ttnn/api/ttnn.manage_device.rst", "ttnn/api/ttnn.matmul.rst", "ttnn/api/ttnn.max.rst", "ttnn/api/ttnn.max_bw.rst", "ttnn/api/ttnn.max_pool2d.rst", "ttnn/api/ttnn.maximum.rst", "ttnn/api/ttnn.mean.rst", "ttnn/api/ttnn.min.rst", "ttnn/api/ttnn.min_bw.rst", "ttnn/api/ttnn.minimum.rst", "ttnn/api/ttnn.mish.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters.rst", "ttnn/api/ttnn.moreh_sum.rst", "ttnn/api/ttnn.mse_loss.rst", "ttnn/api/ttnn.mul_bw.rst", "ttnn/api/ttnn.multigammaln.rst", "ttnn/api/ttnn.multigammaln_bw.rst", "ttnn/api/ttnn.multiply.rst", "ttnn/api/ttnn.ne.rst", "ttnn/api/ttnn.ne_.rst", "ttnn/api/ttnn.neg.rst", "ttnn/api/ttnn.neg_bw.rst", "ttnn/api/ttnn.nextafter.rst", "ttnn/api/ttnn.nez.rst", "ttnn/api/ttnn.nonzero.rst", "ttnn/api/ttnn.normalize_global.rst", "ttnn/api/ttnn.normalize_hw.rst", "ttnn/api/ttnn.ones.rst", "ttnn/api/ttnn.ones_like.rst", "ttnn/api/ttnn.open_device.rst", "ttnn/api/ttnn.outer.rst", "ttnn/api/ttnn.pad.rst", "ttnn/api/ttnn.pad_to_tile_shape.rst", "ttnn/api/ttnn.permute.rst", "ttnn/api/ttnn.polar.rst", "ttnn/api/ttnn.polar_bw.rst", "ttnn/api/ttnn.polygamma.rst", "ttnn/api/ttnn.polygamma_bw.rst", "ttnn/api/ttnn.polyval.rst", "ttnn/api/ttnn.pow.rst", "ttnn/api/ttnn.pow_bw.rst", "ttnn/api/ttnn.prelu.rst", "ttnn/api/ttnn.prepare_conv_bias.rst", "ttnn/api/ttnn.prepare_conv_transpose2d_bias.rst", "ttnn/api/ttnn.prepare_conv_transpose2d_weights.rst", "ttnn/api/ttnn.prepare_conv_weights.rst", "ttnn/api/ttnn.prod.rst", "ttnn/api/ttnn.prod_bw.rst", "ttnn/api/ttnn.rad2deg.rst", "ttnn/api/ttnn.rad2deg_bw.rst", "ttnn/api/ttnn.rdiv.rst", "ttnn/api/ttnn.rdiv_bw.rst", "ttnn/api/ttnn.real.rst", "ttnn/api/ttnn.real_bw.rst", "ttnn/api/ttnn.reallocate.rst", "ttnn/api/ttnn.reciprocal.rst", "ttnn/api/ttnn.reciprocal_bw.rst", "ttnn/api/ttnn.reduce_scatter.rst", "ttnn/api/ttnn.register_post_operation_hook.rst", "ttnn/api/ttnn.register_pre_operation_hook.rst", "ttnn/api/ttnn.reglu.rst", "ttnn/api/ttnn.relu.rst", "ttnn/api/ttnn.relu6.rst", "ttnn/api/ttnn.relu6_bw.rst", "ttnn/api/ttnn.relu_bw.rst", "ttnn/api/ttnn.relu_max.rst", "ttnn/api/ttnn.relu_min.rst", "ttnn/api/ttnn.remainder.rst", "ttnn/api/ttnn.remainder_bw.rst", "ttnn/api/ttnn.repeat.rst", "ttnn/api/ttnn.repeat_bw.rst", "ttnn/api/ttnn.repeat_interleave.rst", "ttnn/api/ttnn.reshape.rst", "ttnn/api/ttnn.rms_norm.rst", "ttnn/api/ttnn.round.rst", "ttnn/api/ttnn.round_bw.rst", "ttnn/api/ttnn.rpow.rst", "ttnn/api/ttnn.rpow_bw.rst", "ttnn/api/ttnn.rsqrt.rst", "ttnn/api/ttnn.rsqrt_bw.rst", "ttnn/api/ttnn.rsub.rst", "ttnn/api/ttnn.rsub_bw.rst", "ttnn/api/ttnn.scatter.rst", "ttnn/api/ttnn.selu.rst", "ttnn/api/ttnn.selu_bw.rst", "ttnn/api/ttnn.set_printoptions.rst", "ttnn/api/ttnn.sigmoid.rst", "ttnn/api/ttnn.sigmoid_accurate.rst", "ttnn/api/ttnn.sigmoid_bw.rst", "ttnn/api/ttnn.sign.rst", "ttnn/api/ttnn.sign_bw.rst", "ttnn/api/ttnn.signbit.rst", "ttnn/api/ttnn.silu.rst", "ttnn/api/ttnn.silu_bw.rst", "ttnn/api/ttnn.sin.rst", "ttnn/api/ttnn.sin_bw.rst", "ttnn/api/ttnn.sinh.rst", "ttnn/api/ttnn.sinh_bw.rst", "ttnn/api/ttnn.slice.rst", "ttnn/api/ttnn.softmax.rst", "ttnn/api/ttnn.softplus.rst", "ttnn/api/ttnn.softplus_bw.rst", "ttnn/api/ttnn.softshrink.rst", "ttnn/api/ttnn.softshrink_bw.rst", "ttnn/api/ttnn.softsign.rst", "ttnn/api/ttnn.softsign_bw.rst", "ttnn/api/ttnn.sqrt.rst", "ttnn/api/ttnn.sqrt_bw.rst", "ttnn/api/ttnn.square.rst", "ttnn/api/ttnn.square_bw.rst", "ttnn/api/ttnn.squared_difference.rst", "ttnn/api/ttnn.squared_difference_bw.rst", "ttnn/api/ttnn.std.rst", "ttnn/api/ttnn.sub_bw.rst", "ttnn/api/ttnn.subalpha.rst", "ttnn/api/ttnn.subalpha_bw.rst", "ttnn/api/ttnn.subtract.rst", "ttnn/api/ttnn.sum.rst", "ttnn/api/ttnn.swiglu.rst", "ttnn/api/ttnn.swish.rst", "ttnn/api/ttnn.synchronize_device.rst", "ttnn/api/ttnn.tan.rst", "ttnn/api/ttnn.tan_bw.rst", "ttnn/api/ttnn.tanh.rst", "ttnn/api/ttnn.tanh_bw.rst", "ttnn/api/ttnn.tanhshrink.rst", "ttnn/api/ttnn.tanhshrink_bw.rst", "ttnn/api/ttnn.threshold.rst", "ttnn/api/ttnn.threshold_bw.rst", "ttnn/api/ttnn.tilize.rst", "ttnn/api/ttnn.tilize_with_val_padding.rst", "ttnn/api/ttnn.to_device.rst", "ttnn/api/ttnn.to_layout.rst", "ttnn/api/ttnn.to_memory_config.rst", "ttnn/api/ttnn.to_torch.rst", "ttnn/api/ttnn.topk.rst", "ttnn/api/ttnn.transformer.attention_softmax.rst", "ttnn/api/ttnn.transformer.attention_softmax_.rst", "ttnn/api/ttnn.transformer.concatenate_heads.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode.rst", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads.rst", "ttnn/api/ttnn.tril.rst", "ttnn/api/ttnn.triu.rst", "ttnn/api/ttnn.trunc.rst", "ttnn/api/ttnn.trunc_bw.rst", "ttnn/api/ttnn.unary_chain.rst", "ttnn/api/ttnn.untilize.rst", "ttnn/api/ttnn.untilize_with_unpadding.rst", "ttnn/api/ttnn.upsample.rst", "ttnn/api/ttnn.var.rst", "ttnn/api/ttnn.where.rst", "ttnn/api/ttnn.where_bw.rst", "ttnn/api/ttnn.xlogy.rst", "ttnn/api/ttnn.xlogy_bw.rst", "ttnn/api/ttnn.zeros.rst", "ttnn/api/ttnn.zeros_like.rst", "ttnn/converting_torch_model_to_ttnn.rst", "ttnn/demos.rst", "ttnn/get_started.rst", "ttnn/installing.md", "ttnn/onboarding.rst", "ttnn/profiling_ttnn_operations.rst", "ttnn/tensor.rst", "ttnn/tutorials.rst", "ttnn/tutorials/graphing_torch_dit.rst", "ttnn/tutorials/matmul.rst", "ttnn/tutorials/multihead-attention.rst", "ttnn/tutorials/profiling.rst", "ttnn/tutorials/resnet-basic-block.rst", "ttnn/tutorials/tensor_and_add_operation.rst", "ttnn/tutorials/ttnn-tracer.rst", "ttnn/tutorials/ttnn_tutorials/001.ipynb", "ttnn/tutorials/ttnn_tutorials/002.ipynb", "ttnn/tutorials/ttnn_tutorials/003.ipynb", "ttnn/tutorials/ttnn_tutorials/004.ipynb", "ttnn/tutorials/ttnn_tutorials/005.ipynb", "ttnn/tutorials/ttnn_tutorials/006.ipynb", "ttnn/tutorials/ttnn_tutorials/007.ipynb", "ttnn/usage.rst"], "titles": ["Welcome to TT-NN documentation!", "Contributing as a developer", "Support", "Performance", "Getting Started", "What is TT-NN?", "Adding New TT-NN Operation", "APIs", "ttnn.Conv2dConfig", "ttnn.Conv2dSliceConfig", "ttnn.GetDefaultDevice", "ttnn.SetDefaultDevice", "ttnn.abs", "ttnn.abs_bw", "ttnn.acos", "ttnn.acos_bw", "ttnn.acosh", "ttnn.acosh_bw", "ttnn.add", "ttnn.add_bw", "ttnn.addalpha", "ttnn.addalpha_bw", "ttnn.addcdiv", "ttnn.addcdiv_bw", "ttnn.addcmul", "ttnn.addcmul_bw", "ttnn.all_gather", "ttnn.alt_complex_rotate90", "ttnn.angle", "ttnn.angle_bw", "ttnn.arange", "ttnn.argmax", "ttnn.as_tensor", "ttnn.asin", "ttnn.asin_bw", "ttnn.asinh", "ttnn.asinh_bw", "ttnn.assign_bw", "ttnn.atan", "ttnn.atan2", "ttnn.atan2_bw", "ttnn.atan_bw", "ttnn.atanh", "ttnn.atanh_bw", "ttnn.batch_norm", "ttnn.bias_gelu_bw", "ttnn.bitwise_and", "ttnn.bitwise_left_shift", "ttnn.bitwise_not", "ttnn.bitwise_or", "ttnn.bitwise_right_shift", "ttnn.bitwise_xor", "ttnn.cbrt", "ttnn.ceil", "ttnn.ceil_bw", "ttnn.celu", "ttnn.celu_bw", "ttnn.clamp", "ttnn.clamp_bw", "ttnn.clip", "ttnn.clip_bw", "ttnn.clone", "ttnn.close_device", "ttnn.concat", "ttnn.concat_bw", "ttnn.conj", "ttnn.conj_bw", "ttnn.conv1d", "ttnn.conv2d", "ttnn.conv_transpose2d", "ttnn.cos", "ttnn.cos_bw", "ttnn.cosh", "ttnn.cosh_bw", "ttnn.create_sharded_memory_config", "ttnn.deallocate", "ttnn.deg2rad", "ttnn.deg2rad_bw", "ttnn.digamma", "ttnn.digamma_bw", "ttnn.div", "ttnn.div_bw", "ttnn.div_no_nan", "ttnn.div_no_nan_bw", "ttnn.downsample", "ttnn.dump_tensor", "ttnn.elu", "ttnn.elu_bw", "ttnn.embedding", "ttnn.embedding_bw", "ttnn.empty", "ttnn.empty_like", "ttnn.eq", "ttnn.eq_", "ttnn.eqz", "ttnn.erf", "ttnn.erf_bw", "ttnn.erfc", "ttnn.erfc_bw", "ttnn.erfinv", "ttnn.erfinv_bw", "ttnn.exp", "ttnn.exp2", "ttnn.exp2_bw", "ttnn.exp_bw", "ttnn.experimental.all_reduce", "ttnn.experimental.conv3d", "ttnn.experimental.cumprod", "ttnn.experimental.cumsum", "ttnn.experimental.dropout", "ttnn.experimental.gelu_bw", "ttnn.experimental.rotary_embedding", "ttnn.experimental.sort", "ttnn.expm1", "ttnn.expm1_bw", "ttnn.fill", "ttnn.fill_bw", "ttnn.fill_ones_rm", "ttnn.fill_rm", "ttnn.fill_zero_bw", "ttnn.floor", "ttnn.floor_bw", "ttnn.floor_div", "ttnn.fmod", "ttnn.fmod_bw", "ttnn.format_input_tensor", "ttnn.format_output_tensor", "ttnn.frac", "ttnn.frac_bw", "ttnn.from_device", "ttnn.from_torch", "ttnn.full", "ttnn.full_like", "ttnn.gcd", "ttnn.ge", "ttnn.ge_", "ttnn.geglu", "ttnn.gelu", "ttnn.gelu_bw", "ttnn.gez", "ttnn.global_avg_pool2d", "ttnn.glu", "ttnn.group_norm", "ttnn.gt", "ttnn.gt_", "ttnn.gtz", "ttnn.hardshrink", "ttnn.hardshrink_bw", "ttnn.hardsigmoid", "ttnn.hardsigmoid_bw", "ttnn.hardswish", "ttnn.hardswish_bw", "ttnn.hardtanh", "ttnn.hardtanh_bw", "ttnn.heaviside", "ttnn.hypot", "ttnn.hypot_bw", "ttnn.i0", "ttnn.i0_bw", "ttnn.identity", "ttnn.imag", "ttnn.imag_bw", "ttnn.indexed_fill", "ttnn.is_imag", "ttnn.is_real", "ttnn.isclose", "ttnn.isfinite", "ttnn.isinf", "ttnn.isnan", "ttnn.isneginf", "ttnn.isposinf", "ttnn.kv_cache.fill_cache_for_user_", "ttnn.kv_cache.update_cache_for_token_", "ttnn.l1_loss", "ttnn.layer_norm", "ttnn.lcm", "ttnn.ldexp", "ttnn.ldexp_bw", "ttnn.le", "ttnn.le_", "ttnn.leaky_relu", "ttnn.leaky_relu_bw", "ttnn.lerp", "ttnn.lerp_bw", "ttnn.lez", "ttnn.lgamma", "ttnn.lgamma_bw", "ttnn.linear", "ttnn.load_tensor", "ttnn.log", "ttnn.log10", "ttnn.log10_bw", "ttnn.log1p", "ttnn.log1p_bw", "ttnn.log2", "ttnn.log2_bw", "ttnn.log_bw", "ttnn.log_sigmoid", "ttnn.log_sigmoid_bw", "ttnn.logaddexp", "ttnn.logaddexp2", "ttnn.logaddexp2_bw", "ttnn.logaddexp_bw", "ttnn.logical_and", "ttnn.logical_and_", "ttnn.logical_not", "ttnn.logical_not_", "ttnn.logical_or", "ttnn.logical_or_", "ttnn.logical_xor", "ttnn.logical_xor_", "ttnn.logit", "ttnn.logit_bw", "ttnn.logiteps_bw", "ttnn.lt", "ttnn.lt_", "ttnn.ltz", "ttnn.mac", "ttnn.manage_device", "ttnn.matmul", "ttnn.max", "ttnn.max_bw", "ttnn.max_pool2d", "ttnn.maximum", "ttnn.mean", "ttnn.min", "ttnn.min_bw", "ttnn.minimum", "ttnn.mish", "ttnn.model_preprocessing.preprocess_model", "ttnn.model_preprocessing.preprocess_model_parameters", "ttnn.moreh_sum", "ttnn.mse_loss", "ttnn.mul_bw", "ttnn.multigammaln", "ttnn.multigammaln_bw", "ttnn.multiply", "ttnn.ne", "ttnn.ne_", "ttnn.neg", "ttnn.neg_bw", "ttnn.nextafter", "ttnn.nez", "ttnn.nonzero", "ttnn.normalize_global", "ttnn.normalize_hw", "ttnn.ones", "ttnn.ones_like", "ttnn.open_device", "ttnn.outer", "ttnn.pad", "ttnn.pad_to_tile_shape", "ttnn.permute", "ttnn.polar", "ttnn.polar_bw", "ttnn.polygamma", "ttnn.polygamma_bw", "ttnn.polyval", "ttnn.pow", "ttnn.pow_bw", "ttnn.prelu", "ttnn.prepare_conv_bias", "ttnn.prepare_conv_transpose2d_bias", "ttnn.prepare_conv_transpose2d_weights", "ttnn.prepare_conv_weights", "ttnn.prod", "ttnn.prod_bw", "ttnn.rad2deg", "ttnn.rad2deg_bw", "ttnn.rdiv", "ttnn.rdiv_bw", "ttnn.real", "ttnn.real_bw", "ttnn.reallocate", "ttnn.reciprocal", "ttnn.reciprocal_bw", "ttnn.reduce_scatter", "ttnn.register_post_operation_hook", "ttnn.register_pre_operation_hook", "ttnn.reglu", "ttnn.relu", "ttnn.relu6", "ttnn.relu6_bw", "ttnn.relu_bw", "ttnn.relu_max", "ttnn.relu_min", "ttnn.remainder", "ttnn.remainder_bw", "ttnn.repeat", "ttnn.repeat_bw", "ttnn.repeat_interleave", "ttnn.reshape", "ttnn.rms_norm", "ttnn.round", "ttnn.round_bw", "ttnn.rpow", "ttnn.rpow_bw", "ttnn.rsqrt", "ttnn.rsqrt_bw", "ttnn.rsub", "ttnn.rsub_bw", "ttnn.scatter", "ttnn.selu", "ttnn.selu_bw", "ttnn.set_printoptions", "ttnn.sigmoid", "ttnn.sigmoid_accurate", "ttnn.sigmoid_bw", "ttnn.sign", "ttnn.sign_bw", "ttnn.signbit", "ttnn.silu", "ttnn.silu_bw", "ttnn.sin", "ttnn.sin_bw", "ttnn.sinh", "ttnn.sinh_bw", "ttnn.slice", "ttnn.softmax", "ttnn.softplus", "ttnn.softplus_bw", "ttnn.softshrink", "ttnn.softshrink_bw", "ttnn.softsign", "ttnn.softsign_bw", "ttnn.sqrt", "ttnn.sqrt_bw", "ttnn.square", "ttnn.square_bw", "ttnn.squared_difference", "ttnn.squared_difference_bw", "ttnn.std", "ttnn.sub_bw", "ttnn.subalpha", "ttnn.subalpha_bw", "ttnn.subtract", "ttnn.sum", "ttnn.swiglu", "ttnn.swish", "ttnn.synchronize_device", "ttnn.tan", "ttnn.tan_bw", "ttnn.tanh", "ttnn.tanh_bw", "ttnn.tanhshrink", "ttnn.tanhshrink_bw", "ttnn.threshold", "ttnn.threshold_bw", "ttnn.tilize", "ttnn.tilize_with_val_padding", "ttnn.to_device", "ttnn.to_layout", "ttnn.to_memory_config", "ttnn.to_torch", "ttnn.topk", "ttnn.transformer.attention_softmax", "ttnn.transformer.attention_softmax_", "ttnn.transformer.concatenate_heads", "ttnn.transformer.scaled_dot_product_attention", "ttnn.transformer.scaled_dot_product_attention_decode", "ttnn.transformer.split_query_key_value_and_split_heads", "ttnn.tril", "ttnn.triu", "ttnn.trunc", "ttnn.trunc_bw", "ttnn.unary_chain", "ttnn.untilize", "ttnn.untilize_with_unpadding", "ttnn.upsample", "ttnn.var", "ttnn.where", "ttnn.where_bw", "ttnn.xlogy", "ttnn.xlogy_bw", "ttnn.zeros", "ttnn.zeros_like", "Converting PyTorch Model to TT-NN", "Building and Uplifting Demos", "Getting Started", "Install", "Onboarding New Functionality", "Profiling TT-NN Operations", "Tensor", "Tutorials", "Graphing Torch DiT_XL_2 With TTNN", "Matmul Operation", "Multi-Head Attention", "ttnn Profiling", "Resnet Basic Block", "Tensor and Add Operation", "ttnn Tracer", "Tensor and Add Operation", "Matrix Multiplication", "Multi-Head Attention", "Tracing ttnn operations and torch modules/functions", "Profiling ttnn operations", "Resnet Block", "Build a graph of a pytorch based model", "Using TT-NN"], "terms": {"what": [0, 377, 381, 397], "i": [0, 3, 4, 8, 9, 10, 11, 16, 19, 21, 31, 35, 40, 42, 44, 45, 48, 62, 63, 64, 69, 74, 80, 81, 84, 88, 89, 92, 105, 107, 108, 111, 112, 115, 117, 118, 125, 126, 128, 130, 134, 136, 140, 141, 143, 156, 158, 163, 164, 177, 178, 183, 187, 190, 194, 201, 202, 203, 214, 218, 219, 221, 222, 226, 229, 230, 233, 235, 237, 248, 250, 251, 253, 255, 257, 258, 260, 265, 266, 269, 274, 276, 277, 278, 279, 284, 285, 290, 291, 295, 300, 317, 318, 330, 332, 334, 337, 339, 340, 341, 351, 353, 354, 355, 356, 358, 359, 360, 368, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398], "get": [0, 8, 10, 305, 357, 376, 379, 383, 388, 391, 392, 393, 394, 395], "start": [0, 30, 182, 317, 376, 379, 381, 393, 395], "1": [0, 3, 8, 9, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 71, 73, 77, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 268, 269, 270, 271, 272, 274, 275, 276, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 312, 314, 316, 317, 318, 319, 320, 321, 322, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343, 345, 346, 347, 351, 358, 359, 360, 363, 364, 369, 370, 371, 372, 373, 374, 375, 380, 382, 391, 392, 393, 394, 395, 396, 397], "instal": [0, 3, 377, 381, 383, 395, 397], "build": [0, 383, 384, 387, 395], "2": [0, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 165, 166, 167, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 247, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 265, 267, 268, 269, 270, 272, 274, 275, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 353, 358, 360, 361, 362, 363, 364, 365, 369, 370, 371, 372, 373, 374, 375, 382, 383, 384, 391, 392, 393, 394, 395, 396], "explor": 0, "our": [0, 3, 4, 377, 380, 382, 391], "demo": [0, 4, 379, 381, 394], "3": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 250, 252, 254, 255, 256, 257, 258, 259, 260, 267, 268, 269, 270, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 353, 360, 361, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 382, 391, 392, 393, 394, 395, 396, 397], "tutori": [0, 384, 387, 388, 393, 397], "multi": [0, 26, 32, 84, 85, 105, 276, 368, 382, 383, 391], "head": [0, 355, 356, 357, 358, 360, 379, 383], "attent": [0, 355, 356, 358, 359, 360, 383], "simpl": [0, 379, 395, 397], "4": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 226, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 266, 267, 268, 269, 270, 274, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 361, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 382, 391, 392, 393, 394, 395, 396, 397], "optim": [0, 8, 382, 383, 386, 391], "where": [0, 2, 3, 4, 30, 69, 74, 90, 91, 125, 126, 187, 219, 243, 260, 351, 371, 377, 381, 382, 397], "To": [0, 3, 8, 380, 391, 392, 398], "go": [0, 391], "from": [0, 2, 3, 4, 6, 8, 30, 32, 62, 63, 67, 68, 69, 89, 130, 171, 172, 188, 261, 262, 263, 264, 299, 300, 335, 367, 376, 377, 381, 382, 383, 384, 388, 391, 393, 394, 395], "here": [0, 2, 6, 379, 392, 397], "prerequisit": 0, "set": [0, 3, 4, 8, 11, 63, 69, 117, 219, 235, 252, 261, 262, 265, 304, 339, 354, 357, 360, 376, 381, 383, 391, 394, 395, 396, 397, 398], "up": [0, 5, 118, 354, 381, 383, 392, 397], "hardwar": [0, 2, 6, 248, 376, 377, 378, 382, 391, 398], "driver": [0, 391, 392, 393, 394, 395, 396], "firmwar": 0, "system": [0, 16, 35, 42, 115, 136, 141, 269, 279, 284, 285, 295, 337, 381], "level": [0, 381], "depend": [0, 261, 262, 263, 264, 351, 377, 381, 382, 383, 395], "kmd": 0, "updat": [0, 44, 172, 377, 380, 398], "devic": [0, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 383, 385, 386, 389, 394, 395, 396, 397], "flash": [0, 359], "manag": [0, 218, 277, 278, 377], "interfac": 0, "smi": 0, "option": [0, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 381, 397, 398], "card": 0, "configur": [0, 3, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 383, 385, 386, 394], "topologi": [0, 26, 105, 276], "metalium": [0, 3, 4, 6], "There": [0, 6, 219, 376, 382], "ar": [0, 3, 4, 8, 9, 11, 19, 26, 39, 47, 50, 61, 63, 81, 105, 108, 118, 187, 219, 222, 243, 252, 258, 276, 277, 278, 295, 317, 339, 354, 360, 368, 376, 377, 378, 381, 382, 383, 384, 387, 388, 391, 392, 393, 398], "three": 0, "sourc": [0, 3, 4, 5, 171, 383, 387], "step": [0, 30, 317, 377, 380, 391, 397], "clone": [0, 159, 360, 383, 384, 391, 392, 393, 394], "repositori": [0, 1, 378], "invok": [0, 6], "script": [0, 3, 4, 377, 381], "docker": 0, "releas": [0, 75], "imag": [0, 69, 163, 253, 377, 381, 382, 397], "wheel": [0, 395], "download": [0, 383, 384, 394, 395], "latest": [0, 381], "For": [0, 6, 8, 13, 23, 32, 45, 68, 81, 108, 112, 124, 130, 138, 156, 183, 191, 193, 195, 196, 198, 201, 202, 212, 213, 219, 259, 266, 270, 275, 287, 320, 326, 360, 373, 376, 377, 380, 381, 382], "user": [0, 4, 6, 159, 187, 219, 229, 230, 248, 349, 377, 378, 380, 391, 392, 393, 394, 395, 396, 397], "onli": [0, 6, 8, 9, 19, 21, 22, 24, 26, 31, 40, 45, 57, 58, 59, 60, 63, 64, 74, 80, 81, 85, 89, 118, 130, 134, 136, 141, 143, 156, 177, 178, 182, 183, 190, 194, 201, 202, 203, 214, 217, 219, 221, 226, 233, 250, 255, 263, 264, 274, 276, 279, 287, 300, 330, 332, 334, 337, 339, 359, 360, 370, 373, 376, 377, 381, 382, 383, 384, 387, 388, 396, 398], "environ": [0, 3, 4, 8, 378, 393, 394, 395, 397, 398], "you": [0, 1, 2, 3, 4, 6, 319, 377, 378, 381, 383, 394, 397, 398], "all": [0, 6, 8, 26, 31, 105, 140, 219, 229, 230, 250, 257, 265, 266, 276, 339, 376, 377, 380, 381, 382, 391, 393, 395], "verifi": [0, 380], "your": [0, 377, 378, 381, 383], "try": [0, 8, 377, 391, 395], "execut": [0, 3, 8, 277, 278, 377, 381, 392, 393, 395, 398], "program": [0, 3, 5, 6, 26, 187, 219, 276, 355, 356, 381, 383, 385, 386, 391, 394, 395, 396], "exampl": [0, 108, 112, 129, 252, 265, 290, 339, 350, 377, 378, 380, 381, 382, 391, 397], "interest": 0, "contribut": [0, 2, 378], "us": [0, 3, 4, 5, 6, 8, 9, 10, 11, 26, 32, 45, 63, 67, 68, 69, 74, 81, 88, 89, 91, 95, 97, 101, 105, 109, 110, 111, 112, 118, 130, 132, 137, 138, 156, 159, 187, 219, 222, 229, 230, 247, 248, 250, 261, 262, 269, 270, 276, 277, 278, 289, 297, 304, 305, 318, 319, 348, 349, 351, 352, 353, 354, 359, 360, 366, 367, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390, 395, 397], "basic": [0, 378, 379, 383], "convert": [0, 5, 6, 8, 32, 61, 130, 229, 230, 261, 262, 263, 264, 352, 353, 383, 386, 389, 392], "torch": [0, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 360, 361, 362, 363, 364, 365, 369, 370, 371, 372, 373, 375, 376, 382, 383, 385, 386, 388, 389, 390, 395, 397], "tensor": [0, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 383, 385, 393, 394, 396, 397], "run": [0, 5, 6, 26, 44, 105, 130, 229, 276, 277, 278, 377, 378, 379, 380, 381, 383, 386, 388, 391, 392, 395], "an": [0, 2, 3, 5, 6, 26, 63, 67, 68, 69, 88, 105, 106, 118, 119, 123, 140, 218, 219, 253, 260, 265, 276, 286, 350, 353, 377, 378, 379, 380, 381, 382, 391, 393, 397], "oper": [0, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 380, 382, 383, 387, 390, 392, 393], "__getitem__": 0, "slice": [0, 9], "enabl": [0, 3, 5, 8, 380, 381, 383, 385, 386, 391, 394, 395, 396, 397], "cach": [0, 3, 5, 32, 62, 111, 171, 172, 229, 230, 381, 382, 383, 385, 386, 391, 394, 395, 396, 397], "5": [0, 30, 44, 55, 58, 60, 74, 78, 88, 90, 108, 112, 132, 146, 147, 148, 150, 165, 211, 234, 260, 270, 321, 322, 379, 391, 392, 393, 394, 395, 396, 397], "debug": [0, 5, 6, 380, 391, 392, 393, 394, 396], "intermedi": 0, "6": [0, 30, 112, 234, 293, 382, 391, 392, 393, 394, 395, 396, 397], "trace": [0, 5, 248, 383, 388, 390, 397], "graph": [0, 5, 229, 383, 388, 394], "7": [0, 88, 131, 293, 391, 392, 393, 394, 395, 396, 397], "tt_lib": [0, 117, 118, 350], "8": [0, 26, 30, 74, 88, 105, 152, 250, 276, 381, 382, 391, 392, 393, 394, 395, 396, 397], "log": [0, 8, 198, 372, 381, 392, 394, 395], "9": [0, 57, 59, 72, 88, 90, 315, 379, 391, 392, 393, 394, 395, 396, 397], "support": [0, 1, 5, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 127, 128, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 226, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 249, 250, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 274, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 359, 361, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 382, 391, 396], "python": [0, 4, 5, 379, 380, 381, 395, 397], "10": [0, 30, 75, 88, 129, 140, 158, 187, 219, 255, 273, 346, 350, 351, 352, 379, 391, 392, 393, 394, 395, 397], "chang": [0, 8, 291, 348, 349, 366, 367, 391, 395], "string": [0, 8, 45, 80, 138, 229, 230, 269, 270, 304], "represent": [0, 319, 382], "11": [0, 90, 391, 392, 393, 394, 395, 396], "visual": [0, 5, 394, 396, 397], "web": 0, "browser": [0, 383], "12": [0, 64, 142, 174, 250, 292, 376, 379, 391, 392, 393, 395, 396, 397], "regist": [0, 5, 6, 277, 278], "pre": [0, 6, 222, 278, 379, 383, 384, 386, 395], "post": [0, 277, 381], "hook": [0, 277, 278, 395], "13": [0, 391, 392, 393, 395, 397], "queri": [0, 360, 393], "14": [0, 3, 64, 391, 392, 393, 395], "fall": [0, 177], "back": [0, 6, 357, 381, 391], "15": [0, 379, 393, 395], "captur": [0, 397], "c": [0, 5, 9, 44, 67, 68, 69, 84, 106, 117, 118, 222, 305, 368, 381, 382, 391, 392, 393, 394, 395, 396], "function": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 383, 390, 391], "buffer": [0, 6, 8, 26, 75, 105, 248, 276, 381, 382], "alloc": [0, 6, 30, 90, 91, 131, 132, 246, 247, 374, 375, 382, 391, 392, 393, 394, 395, 396], "etc": [0, 5, 6], "shape": [0, 30, 44, 63, 69, 74, 90, 91, 107, 108, 115, 125, 126, 131, 132, 140, 187, 219, 222, 243, 246, 247, 250, 251, 252, 265, 288, 289, 290, 291, 317, 349, 357, 360, 367, 374, 375, 376, 381, 391, 392, 393, 396, 397], "layout": [0, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 223, 226, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 381, 383, 385, 389, 393, 396, 398], "data": [0, 5, 8, 18, 30, 31, 32, 61, 84, 88, 89, 90, 91, 92, 117, 118, 130, 131, 132, 133, 134, 140, 143, 175, 176, 178, 187, 199, 200, 203, 207, 209, 214, 219, 223, 227, 236, 237, 246, 247, 269, 299, 329, 335, 348, 349, 351, 352, 353, 354, 366, 367, 368, 374, 375, 376, 381, 383, 389, 395, 398], "type": [0, 5, 6, 8, 9, 18, 30, 31, 32, 45, 61, 67, 68, 69, 81, 88, 89, 90, 91, 92, 106, 107, 108, 117, 118, 125, 130, 131, 132, 133, 134, 138, 140, 143, 175, 176, 178, 187, 199, 200, 203, 207, 209, 214, 219, 223, 227, 236, 237, 246, 247, 248, 252, 261, 262, 263, 264, 269, 273, 291, 299, 318, 329, 335, 339, 348, 349, 351, 352, 353, 354, 366, 367, 374, 375, 376, 381, 383, 389, 395, 397], "limit": [0, 13, 23, 45, 81, 124, 138, 156, 187, 191, 193, 195, 196, 198, 201, 202, 212, 213, 259, 266, 270, 275, 287, 320, 326, 373, 377], "bfloat8_b": [0, 8, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 27, 33, 36, 37, 38, 39, 40, 41, 45, 53, 55, 64, 70, 71, 72, 76, 77, 78, 79, 81, 83, 86, 92, 93, 94, 95, 97, 99, 101, 102, 103, 104, 113, 114, 115, 120, 124, 127, 128, 130, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 166, 167, 168, 169, 170, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 221, 226, 228, 233, 236, 237, 238, 239, 240, 241, 242, 257, 258, 259, 260, 266, 267, 268, 270, 274, 275, 279, 280, 281, 283, 284, 287, 293, 296, 297, 298, 299, 300, 302, 303, 306, 307, 308, 311, 312, 313, 314, 315, 320, 321, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 340, 341, 342, 344, 345, 353, 361, 362, 363, 365, 370, 371, 373, 376, 381, 393], "storag": [0, 8, 383, 389], "shard": [0, 8, 19, 63, 74, 187, 219, 222, 261, 262, 263, 264, 350, 352, 360], "memori": [0, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 391, 393], "config": [0, 8, 26, 65, 88, 89, 105, 106, 125, 126, 219, 253, 261, 262, 276, 291, 317, 355, 356, 357, 376, 379, 383, 385, 391, 393, 394, 395, 396, 398], "api": [0, 6, 358, 376, 378, 379, 380, 393, 398], "rank": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 127, 128, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 223, 226, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 249, 250, 254, 255, 256, 257, 258, 259, 260, 266, 267, 268, 269, 270, 274, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 353, 361, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 382], "to_rank": [0, 382], "open_devic": [0, 11, 62, 75, 88, 89, 129, 188, 273, 339, 350, 351, 352, 391, 392, 393, 394, 398], "close_devic": [0, 391, 392, 393, 394, 396, 398], "manage_devic": [0, 398], "synchronize_devic": 0, "setdefaultdevic": 0, "getdefaultdevic": 0, "format_input_tensor": 0, "format_output_tensor": 0, "pad_to_tile_shap": 0, "create_sharded_memory_config": [0, 382], "core": [0, 6, 8, 74, 187, 219, 248, 351, 352, 366, 376, 381, 382, 392, 393, 395], "as_tensor": [0, 391, 392, 393, 394, 396], "from_torch": [0, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 361, 362, 363, 364, 365, 369, 370, 371, 372, 373, 375, 376, 391, 392, 393, 394, 396, 398], "to_torch": [0, 6, 250, 376, 391, 392, 393, 394, 396, 398], "to_devic": [0, 26, 28, 29, 65, 66, 75, 83, 88, 129, 160, 161, 162, 163, 164, 173, 187, 219, 220, 222, 224, 225, 232, 243, 252, 253, 254, 256, 271, 272, 273, 296, 318, 331, 336, 351, 352, 369, 391, 392, 393, 394, 396], "from_devic": [0, 391, 392, 393, 394, 395, 396], "to_layout": [0, 75, 130, 353, 382, 391, 392, 393], "dump_tensor": [0, 391, 392, 393, 394, 396], "load_tensor": [0, 391, 392, 393, 394, 395, 396], "dealloc": [0, 8, 273, 382, 391, 392, 393, 394, 396, 398], "realloc": [0, 391, 392, 393, 394, 396], "to_memory_config": [0, 382, 396], "creation": [0, 30, 90, 91, 130, 131, 132, 246, 247, 374, 375], "arang": [0, 391, 392, 393, 394], "empti": [0, 6, 8, 397, 398], "empty_lik": 0, "zero": [0, 63, 67, 68, 69, 80, 109, 119, 132, 218, 243, 252, 261, 262, 263, 264, 274, 317, 318, 382, 394, 398], "zeros_lik": [0, 107], "ones": [0, 85, 125], "ones_lik": 0, "full": [0, 377, 381, 398], "full_lik": 0, "matrix": [0, 5, 8, 88, 187, 219, 379, 382, 383, 385, 391, 398], "multipl": [0, 5, 6, 8, 61, 75, 118, 131, 136, 141, 175, 219, 229, 246, 261, 262, 263, 264, 279, 337, 351, 374, 381, 383, 385], "matmul": [0, 187, 383, 391, 392, 393, 394, 395], "linear": [0, 26, 105, 276, 319, 376, 391, 392, 393, 394], "pointwis": 0, "unari": [0, 6, 12, 14, 16, 27, 33, 35, 38, 42, 48, 52, 53, 55, 57, 59, 70, 72, 76, 78, 86, 94, 95, 97, 99, 101, 102, 113, 115, 120, 127, 136, 137, 139, 141, 145, 146, 148, 150, 152, 154, 157, 159, 166, 167, 168, 169, 170, 180, 184, 185, 189, 190, 192, 194, 197, 205, 206, 211, 216, 228, 234, 239, 242, 244, 245, 255, 267, 269, 270, 274, 279, 280, 281, 284, 285, 293, 295, 297, 302, 305, 306, 308, 310, 311, 313, 315, 319, 321, 323, 325, 327, 337, 338, 340, 342, 344, 346, 361, 362, 363, 365], "ab": [0, 13], "aco": [0, 15], "acosh": [0, 17], "asin": [0, 34], "asinh": [0, 36], "atan": [0, 41], "atanh": [0, 43], "bitwise_not": 0, "bitwise_left_shift": 0, "bitwise_right_shift": 0, "cbrt": 0, "ceil": [0, 54, 222], "celu": [0, 56, 391, 392, 393, 394], "clamp": [0, 58], "clip": [0, 60, 391, 392, 393, 394], "co": 0, "cosh": [0, 73], "deg2rad": [0, 77], "digamma": [0, 79], "experiment": [0, 4, 8, 377, 395], "dropout": 0, "gelu_bw": 0, "elu": [0, 87], "eqz": 0, "erf": [0, 96], "erfc": [0, 98], "erfinv": [0, 100], "exp": [0, 365, 394, 398], "exp2": [0, 103], "expm1": [0, 114], "fill": [0, 116, 118, 119, 131, 132, 246, 247, 288, 317, 374, 375, 381], "floor": [0, 80, 81, 121, 122, 269, 270], "frac": [0, 39, 80, 128], "geglu": [0, 391, 392, 393, 394], "gelu": [0, 8, 110, 136, 138, 376], "glu": [0, 391, 392, 393, 394], "gez": 0, "gtz": 0, "hardshrink": [0, 147, 181, 391, 392, 393, 394], "hardsigmoid": [0, 149], "hardswish": [0, 151], "hardtanh": [0, 153], "heavisid": 0, "i0": [0, 158], "ident": [0, 108, 396], "isfinit": 0, "isinf": 0, "isnan": 0, "isneginf": 0, "isposinf": 0, "leaky_relu": [0, 181], "lez": 0, "lgamma": [0, 186], "log10": [0, 191], "log1p": [0, 193], "log2": [0, 195], "log_sigmoid": 0, "logical_not": [0, 206], "logical_not_": 0, "logit": [0, 212, 391, 392, 393, 394], "ltz": 0, "mish": [0, 8], "multigammaln": 0, "neg": [0, 240, 259], "nez": 0, "normalize_glob": 0, "normalize_hw": 0, "polygamma": [0, 256, 391, 392, 393, 394], "prelu": 0, "rad2deg": [0, 268], "rdiv": [0, 270], "reciproc": [0, 275, 298, 382], "reglu": [0, 391, 392, 393, 394], "relu": [0, 8, 18, 180, 236, 279, 283, 284, 285, 319, 335, 365, 396], "relu_max": 0, "relu_min": 0, "relu6": [0, 282], "remaind": [0, 287], "round": [0, 37, 80, 81, 269, 270, 294, 354, 382], "rsqrt": 0, "selu": [0, 303], "sigmoid": [0, 8, 198, 307], "sigmoid_accur": 0, "sign": [0, 309], "signbit": 0, "silu": [0, 8, 312, 337, 398], "sin": [0, 314], "sinh": [0, 316], "softmax": [0, 355, 356, 393], "softplu": [0, 8, 320], "softshrink": [0, 322, 391, 392, 393, 394], "softsign": [0, 324], "sqrt": [0, 8, 155], "squar": [0, 8, 232, 298, 326, 328, 329, 355, 356, 382], "swiglu": [0, 391, 392, 393, 394], "swish": 0, "tan": [0, 341], "tanh": [0, 8, 45, 110, 138, 343], "tanhshrink": [0, 345], "threshold": [0, 319, 320, 347, 391, 392, 393, 394], "tril": 0, "triu": 0, "trunc": [0, 80, 81, 269, 270], "unary_chain": 0, "clamp_bw": 0, "clip_bw": 0, "hardtanh_bw": 0, "threshold_bw": 0, "softplus_bw": 0, "rdiv_bw": 0, "pow_bw": 0, "exp_bw": 0, "tanh_bw": 0, "sqrt_bw": 0, "multigammaln_bw": 0, "lgamma_bw": 0, "fill_bw": 0, "hardsigmoid_bw": 0, "cos_bw": 0, "acosh_bw": 0, "acos_bw": 0, "atan_bw": 0, "rad2deg_bw": 0, "frac_bw": 0, "trunc_bw": 0, "log_sigmoid_bw": 0, "fill_zero_bw": 0, "i0_bw": 0, "tan_bw": 0, "sigmoid_bw": 0, "rsqrt_bw": 0, "neg_bw": 0, "relu_bw": 0, "logit_bw": 0, "hardshrink_bw": 0, "softshrink_bw": 0, "leaky_relu_bw": 0, "elu_bw": 0, "celu_bw": 0, "rpow_bw": 0, "floor_bw": 0, "round_bw": 0, "log_bw": 0, "relu6_bw": 0, "abs_bw": 0, "silu_bw": 0, "selu_bw": 0, "square_bw": 0, "prod_bw": 0, "hardswish_bw": 0, "tanhshrink_bw": 0, "atanh_bw": 0, "asin_bw": 0, "asinh_bw": 0, "sin_bw": 0, "sinh_bw": 0, "log10_bw": 0, "log1p_bw": 0, "erfc_bw": 0, "ceil_bw": 0, "softsign_bw": 0, "cosh_bw": 0, "logiteps_bw": 0, "log2_bw": 0, "sign_bw": 0, "div_no_nan_bw": 0, "exp2_bw": 0, "expm1_bw": 0, "reciprocal_bw": 0, "digamma_bw": 0, "erfinv_bw": 0, "erf_bw": 0, "deg2rad_bw": 0, "polygamma_bw": 0, "repeat_bw": 0, "real": [0, 164, 253, 272, 377], "angl": [0, 29], "is_imag": 0, "is_real": 0, "polar_bw": 0, "imag_bw": 0, "real_bw": 0, "angle_bw": 0, "conj_bw": 0, "conj": [0, 66], "polar": [0, 254], "alt_complex_rotate90": 0, "binari": [0, 18, 20, 39, 46, 47, 49, 50, 51, 80, 82, 92, 93, 122, 123, 133, 134, 135, 143, 144, 155, 165, 175, 176, 178, 179, 199, 200, 203, 204, 207, 208, 209, 210, 214, 215, 223, 227, 236, 237, 238, 241, 249, 257, 258, 260, 286, 299, 301, 329, 333, 335, 372], "add": [0, 19, 250, 355, 356, 377, 379, 380, 383, 393, 395, 396, 398], "addalpha": [0, 21], "subalpha": [0, 334], "multipli": [0, 8, 20, 22, 24, 187, 219, 233, 333, 368, 383, 385, 398], "subtract": [0, 3, 299, 300, 332, 360, 398], "div": 0, "div_no_nan": [0, 83], "floor_div": 0, "fmod": [0, 124], "gcd": 0, "lcm": 0, "logical_and_": 0, "logical_or_": 0, "logical_xor_": 0, "rpow": [0, 296], "rsub": 0, "ldexp": [0, 177], "logical_and": 0, "logical_or": 0, "logical_xor": [0, 391, 392, 393, 394], "bitwise_and": [0, 47, 50], "bitwise_or": 0, "bitwise_xor": 0, "logaddexp": [0, 202], "logaddexp2": [0, 201], "hypot": [0, 156, 391, 392, 393, 394], "xlogi": [0, 373, 391, 392, 393, 394], "squared_differ": [0, 330], "gt": [0, 391, 392, 393, 394, 395, 396, 397], "gt_": 0, "lt_": 0, "ge_": 0, "le_": 0, "eq_": 0, "ne_": 0, "ge": 0, "lt": [0, 391, 392, 393, 394, 395, 396, 397], "le": 0, "eq": 0, "ne": 0, "isclos": [0, 391, 392, 393, 394], "nextaft": [0, 391, 392, 393, 394], "maximum": [0, 8, 31, 57, 58, 59, 60, 153, 221, 222, 391, 392, 393, 394], "minimum": [0, 6, 57, 58, 59, 60, 153, 226, 382, 391, 392, 393, 394], "outer": 0, "pow": 0, "polyv": [0, 391, 392, 393, 394], "scatter": [0, 276], "atan2": [0, 40, 391, 392, 393, 394], "add_bw": 0, "assign_bw": 0, "atan2_bw": 0, "bias_gelu_bw": 0, "div_bw": 0, "embedding_bw": 0, "fmod_bw": 0, "remainder_bw": 0, "addalpha_bw": 0, "subalpha_bw": 0, "xlogy_bw": 0, "hypot_bw": 0, "ldexp_bw": 0, "logaddexp_bw": 0, "logaddexp2_bw": 0, "mul_bw": 0, "sub_bw": 0, "squared_difference_bw": 0, "concat_bw": 0, "rsub_bw": 0, "min_bw": 0, "max_bw": 0, "ternari": [0, 22, 24, 182, 217, 370], "addcdiv": [0, 23, 391, 392, 393, 394], "addcmul": [0, 25, 391, 392, 393, 394], "mac": [0, 391, 392, 393, 394], "lerp": [0, 183, 391, 392, 393, 394], "addcmul_bw": 0, "addcdiv_bw": 0, "where_bw": 0, "lerp_bw": 0, "loss": [0, 173, 232], "l1_loss": [0, 391, 392, 393, 394], "mse_loss": [0, 391, 392, 393, 394], "reduct": [0, 5, 8, 31, 173, 220, 224, 225, 232, 265, 331, 336, 354, 369], "cumprod": 0, "max": [0, 57, 58, 59, 60, 152, 153, 222, 284, 395, 397], "mean": [0, 8, 44, 173, 232, 382], "min": [0, 57, 58, 59, 60, 152, 153, 284, 285, 397], "std": [0, 6, 252, 304, 354, 396], "sum": [0, 108, 231], "var": 0, "argmax": 0, "prod": [0, 74, 266], "topk": 0, "sort": [0, 354], "cumsum": 0, "movement": 0, "concat": [0, 64, 380], "nonzero": 0, "pad": [0, 61, 67, 68, 69, 88, 118, 125, 126, 130, 222, 251, 252, 261, 262, 263, 264, 291, 317, 349, 351, 382, 391, 396], "permut": [0, 222, 360, 393, 396], "reshap": [0, 8, 222, 360, 391, 392, 393, 394, 395, 396], "repeat": [0, 5, 289, 290], "repeat_interleav": 0, "tiliz": [0, 32, 44, 392, 393], "tilize_with_val_pad": 0, "fill_rm": [0, 117], "fill_ones_rm": 0, "until": [0, 107, 353, 367], "untilize_with_unpad": 0, "indexed_fil": 0, "normal": [0, 44, 142, 159, 174, 292, 318, 395, 397], "group_norm": 0, "layer_norm": 0, "rms_norm": 0, "batch_norm": 0, "moreh": [0, 231], "moreh_sum": 0, "transform": [0, 5, 187, 253, 376, 393, 394, 395], "split_query_key_value_and_split_head": [0, 393], "concatenate_head": [0, 393], "attention_softmax": 0, "attention_softmax_": [0, 393], "rotary_embed": 0, "scaled_dot_product_attent": 0, "scaled_dot_product_attention_decod": 0, "ccl": [0, 5, 26, 276], "all_gath": [0, 391, 392, 393, 394], "reduce_scatt": 0, "all_reduc": 0, "embed": [0, 89, 111, 391], "convolut": [0, 5, 63, 67, 68, 69, 106, 222, 261, 262, 263, 264, 396], "conv1d": [0, 8, 396], "conv2d": [0, 8, 9, 69, 261, 262, 263, 264, 391, 392, 393, 394, 396], "conv3d": 0, "conv_transpose2d": [0, 8], "prepare_conv_weight": 0, "prepare_conv_bia": 0, "prepare_conv_transpose2d_weight": 0, "prepare_conv_transpose2d_bia": 0, "conv2dconfig": [0, 67, 68, 69, 261, 262, 263, 264, 396], "act_block_h_overrid": [0, 8, 396], "act_block_w_div": [0, 8], "activ": [0, 4, 8, 18, 92, 133, 134, 143, 153, 175, 176, 178, 187, 199, 200, 203, 207, 209, 214, 219, 223, 227, 236, 237, 299, 329, 335, 376, 379, 383, 386, 396], "always_preprocess_weight": [0, 8], "core_grid": [0, 8, 74, 142, 187, 219, 376, 392, 393], "deallocate_activ": [0, 8, 396], "dtype": [0, 6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 361, 362, 363, 364, 365, 369, 370, 371, 372, 373, 374, 375, 376, 382, 391, 392, 393, 394, 396, 398], "enable_act_double_buff": [0, 8], "enable_kernel_stride_fold": [0, 8], "enable_split_read": [0, 8], "enable_subblock_pad": [0, 8], "enable_weights_double_buff": [0, 8], "in_plac": [0, 8, 222], "output_layout": [0, 8, 142], "override_sharding_config": [0, 8], "preprocess_weights_on_devic": [0, 8], "reallocate_halo_output": [0, 8], "reshard_if_not_optim": [0, 8], "shard_layout": [0, 8, 396], "transpose_shard": [0, 8], "weights_dtyp": [0, 8, 261, 262, 396], "conv2dsliceconfig": 0, "slicetypeenum": [0, 9], "sliceheight": [0, 9], "slicewidth": [0, 9], "name": [0, 3, 6, 9, 32, 85, 188, 229, 230, 358, 376, 380, 381, 395, 396, 397, 398], "valu": [0, 8, 9, 20, 21, 22, 23, 24, 25, 30, 31, 44, 55, 56, 57, 58, 59, 60, 63, 65, 78, 83, 87, 90, 91, 108, 112, 115, 117, 118, 125, 130, 131, 132, 140, 146, 147, 148, 150, 152, 153, 154, 162, 163, 164, 165, 171, 172, 181, 185, 213, 220, 222, 224, 225, 235, 246, 247, 248, 250, 252, 255, 258, 259, 269, 284, 285, 291, 295, 296, 302, 317, 319, 320, 321, 322, 331, 333, 334, 336, 346, 347, 349, 354, 360, 361, 362, 369, 374, 375, 377, 382, 383, 385, 389, 393, 398], "num_slic": [0, 9], "slice_typ": [0, 9], "pool": [0, 84, 140, 222, 368], "global_avg_pool2d": 0, "max_pool2d": 0, "vision": 0, "upsampl": 0, "downsampl": [0, 396], "kv": 0, "kv_cach": 0, "fill_cache_for_user_": 0, "update_cache_for_token_": 0, "convers": [0, 77, 268, 351, 391], "model_preprocess": [0, 376, 393, 394, 395, 396], "preprocess_model": [0, 394, 395, 396], "preprocess_model_paramet": [0, 376, 394, 396], "report": [0, 68, 219, 377, 391, 392, 393, 394, 395, 396, 398], "set_printopt": [0, 398], "register_pre_operation_hook": [0, 398], "register_post_operation_hook": [0, 398], "creat": [0, 4, 6, 8, 30, 61, 74, 90, 91, 108, 112, 115, 131, 132, 246, 247, 374, 375, 380, 382, 383, 388, 389, 393, 397], "host": [0, 8, 32, 67, 68, 129, 250, 317, 339, 351, 379, 381, 382, 383, 389, 392, 393, 394, 395, 396], "borrow": [0, 382, 383, 389], "v": [0, 8, 32, 118, 359, 379, 383, 389], "own": [0, 8, 382, 383, 389], "open": [0, 5, 218, 248, 383, 389, 392, 393, 394, 395, 396, 397, 398], "initi": [0, 91, 229, 230, 376, 383, 385, 386, 389, 394, 395, 396], "b": [0, 6, 111, 290, 358, 359, 383, 385, 389], "random": [0, 252, 383, 385, 389], "inspect": [0, 383, 385, 389], "output": [0, 3, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 381, 382, 383, 385, 386, 389, 394, 398], "attribut": [0, 6, 376, 381, 382, 383, 389, 395], "close": [0, 62, 218, 379, 383, 385, 386, 389, 394, 395, 396], "result": [0, 3, 30, 32, 44, 118, 130, 132, 159, 187, 219, 222, 247, 261, 262, 263, 264, 265, 269, 274, 375, 381, 382, 383, 385], "more": [0, 1, 5, 6, 13, 23, 45, 68, 81, 124, 138, 156, 191, 193, 195, 196, 198, 201, 202, 212, 213, 259, 266, 270, 274, 275, 287, 320, 326, 373, 378, 379, 381, 382, 383, 385, 393, 395, 397], "perform": [0, 8, 13, 15, 16, 17, 19, 21, 23, 25, 26, 28, 29, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 64, 66, 71, 72, 73, 76, 77, 78, 79, 81, 83, 87, 93, 96, 98, 100, 103, 104, 105, 114, 116, 119, 121, 123, 124, 127, 128, 135, 136, 138, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 160, 161, 177, 179, 181, 183, 185, 186, 191, 193, 195, 196, 198, 201, 202, 206, 211, 212, 213, 215, 218, 219, 221, 222, 226, 233, 234, 235, 238, 240, 244, 245, 250, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 276, 279, 282, 283, 286, 287, 289, 294, 295, 296, 298, 300, 302, 303, 305, 307, 309, 312, 314, 315, 316, 317, 320, 321, 322, 323, 324, 326, 328, 330, 332, 334, 337, 338, 341, 343, 345, 346, 347, 361, 362, 364, 371, 373, 376, 377, 378, 379, 380, 381, 383, 385, 393], "write": [0, 1, 3, 6, 74, 187, 219, 376, 382, 383, 386, 395], "weight": [0, 8, 44, 67, 68, 69, 88, 89, 106, 142, 174, 182, 187, 260, 261, 262, 263, 264, 292, 376, 383, 386, 394, 395, 396], "first": [0, 3, 130, 136, 141, 187, 219, 243, 250, 279, 337, 376, 379, 381, 383, 386, 392, 398], "iter": [0, 383, 386], "subsequ": [0, 383, 386, 392, 398], "version": [0, 9, 229, 230, 359, 379, 381, 383, 386, 388, 391, 392, 394, 395], "process": [0, 63, 108, 261, 262, 381, 383, 386, 395], "paramet": [0, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 383, 386, 388, 394], "check": [0, 2, 6, 219, 377, 379, 383, 386, 395], "match": [0, 8, 61, 219, 229, 230, 291, 382, 383, 386, 391, 392, 394, 395, 396], "origin": [0, 112, 229, 230, 251, 265, 377, 380, 383, 386, 391], "implement": [0, 3, 8, 67, 107, 219, 250, 358, 359, 360, 376, 380, 381, 383, 386, 388], "tracer": [0, 383, 394, 396, 397, 398], "modul": [0, 6, 69, 229, 230, 376, 378, 383, 388, 390, 391, 392, 393, 397], "written": [0, 6, 171, 172, 187, 219, 383, 390, 393], "profil": [0, 3, 159, 304, 379, 383, 398], "resnet": [0, 381, 383, 395], "block": [0, 8, 67, 68, 69, 74, 218, 219, 222, 261, 262, 263, 264, 274, 382, 383], "torchvis": [0, 383, 388, 395, 397], "preprocess": [0, 6, 8, 32, 67, 68, 69, 229, 230, 261, 262, 263, 264, 382, 383, 388], "displai": [0, 379, 383, 384, 388], "pass": [0, 6, 8, 67, 68, 110, 111, 118, 277, 278, 360, 376, 380, 383, 388, 391, 394, 395], "constructor": [0, 383, 388], "dit_xl_2": [0, 383, 397], "With": [0, 108, 383], "pytorch": [0, 3, 5, 8, 31, 67, 68, 69, 112, 219, 261, 262, 263, 264, 354, 358, 360, 383, 384, 395], "base": [0, 3, 4, 6, 8, 9, 44, 63, 74, 219, 251, 379, 382, 383, 384, 393], "librari": [0, 5, 383, 384], "http": [0, 26, 276, 378, 379, 383, 384, 395], "github": [0, 2, 26, 276, 378, 379, 383, 384], "com": [0, 26, 276, 378, 379, 383, 384], "facebookresearch": [0, 383, 384], "dit": [0, 383, 384], "git": [0, 229, 230, 379, 383, 384, 395], "xl": [0, 383, 384], "sampl": [0, 383, 384], "train": [0, 44, 383, 384], "onboard": 0, "new": [0, 91, 132, 247, 288, 291, 375, 377, 381, 391, 394], "rewrit": 0, "switch": [0, 250, 319], "ad": [0, 67, 68, 69, 187, 261, 262, 263, 264, 380, 391], "faq": 0, "need": [0, 1, 2, 9, 187, 219, 377, 381, 382, 391, 392, 393, 398], "bind": [0, 395], "golden": [0, 376, 398], "perf": [0, 391, 392, 393, 394, 395, 396], "header": [0, 3], "profile_thi": [0, 395], "descript": [0, 117, 118, 380], "uplift": 0, "file": [0, 2, 4, 6, 32, 85, 188, 377, 379, 381, 395, 397, 398], "bug": 0, "featur": [0, 5, 8, 380, 387, 398], "propos": [0, 380], "request": [0, 351, 380, 395, 397], "troubleshoot": [0, 377], "tip": 0, "commun": 0, "develop": [0, 4, 5, 8, 378, 379, 380, 381, 395], "index": [0, 171, 172, 354, 359, 381, 395, 397], "search": 0, "page": [0, 379, 383], "If": [1, 2, 6, 8, 9, 31, 61, 67, 68, 69, 74, 108, 112, 187, 219, 229, 230, 248, 250, 252, 265, 266, 317, 318, 339, 353, 354, 359, 360, 378, 379, 380, 381, 394, 398], "would": [1, 8, 380, 381, 382], "like": [1, 119, 319, 376, 382, 391, 398], "thi": [1, 3, 4, 6, 8, 9, 10, 11, 31, 44, 61, 63, 67, 68, 69, 89, 108, 110, 111, 112, 115, 125, 126, 140, 159, 177, 222, 251, 261, 262, 263, 264, 265, 284, 285, 319, 358, 376, 377, 379, 380, 381, 382, 383, 384, 387, 388, 391, 392, 393, 397, 398], "project": [1, 2, 4, 5, 378], "pleas": [1, 2, 219, 377, 378, 380, 383, 398], "review": [1, 378, 380], "standard": [1, 2, 285, 377, 378], "gain": 1, "access": [1, 2, 5, 379, 397], "read": [1, 74, 378, 382], "section": [1, 2, 377, 382], "detail": [1, 6, 13, 23, 45, 81, 124, 138, 156, 191, 193, 195, 196, 198, 201, 202, 212, 213, 259, 266, 270, 275, 287, 320, 326, 373, 378, 397, 398], "contact": 1, "u": [1, 380], "have": [2, 3, 4, 6, 31, 75, 89, 108, 126, 182, 219, 261, 262, 265, 269, 348, 349, 354, 366, 367, 377, 379, 381, 382, 383, 391, 397], "formal": 2, "permiss": 2, "cloud": 2, "issu": [2, 8, 219, 319, 377, 380, 381, 391, 392, 393, 394, 395, 396], "can": [2, 3, 4, 5, 6, 8, 9, 30, 45, 57, 58, 59, 60, 67, 68, 69, 80, 81, 91, 132, 138, 219, 247, 250, 261, 262, 263, 264, 269, 270, 277, 278, 319, 339, 375, 376, 379, 381, 382, 383, 391, 392, 393, 394, 396, 397, 398], "out": [2, 6, 8, 107, 109, 112, 285, 317, 354, 379, 391, 393, 396], "relev": [2, 377], "ever": 2, "help": [2, 380, 383], "we": [2, 3, 4, 126, 130, 219, 353, 377, 379, 380, 382, 384, 387, 388, 391, 392, 397, 398], "offici": 2, "discord": 2, "channel": [2, 8, 26, 44, 67, 68, 69, 84, 105, 117, 118, 140, 222, 261, 262, 263, 264, 276, 368, 381], "repres": [2, 5, 381, 382, 391], "both": [2, 8, 19, 67, 68, 69, 108, 219, 258, 261, 262, 263, 264, 376, 377, 381, 382, 391, 396], "tenstorr": [2, 6, 8, 26, 276, 376, 377, 378, 379, 383, 391, 392, 397, 398], "metal": [2, 5, 26, 276, 378, 379, 383, 391, 392, 393, 394, 395, 396, 397], "join": [2, 395], "discuss": [2, 377], "board": 2, "member": [2, 9], "bounc": 2, "idea": [2, 377], "off": [2, 284, 293, 376, 382], "each": [2, 3, 9, 44, 63, 118, 140, 222, 250, 288, 290, 317, 381, 382], "other": [2, 6, 8, 219, 376, 377, 378, 382, 384, 387, 388, 398], "refer": [2, 3, 5, 13, 23, 45, 68, 75, 81, 91, 115, 124, 138, 156, 191, 193, 195, 196, 198, 201, 202, 212, 213, 219, 235, 259, 266, 270, 275, 287, 320, 326, 373, 380, 382, 398], "code": [2, 6, 31, 112, 277, 278, 354, 360, 378, 379, 380, 381, 391, 395, 398], "conduct": 2, "when": [2, 6, 8, 9, 10, 11, 44, 63, 67, 68, 69, 74, 81, 111, 156, 203, 218, 219, 229, 252, 258, 265, 270, 351, 354, 377, 380, 382, 391, 393, 394, 396, 398], "interact": 2, "ensur": [3, 4, 61, 112, 339, 377, 379, 382], "tt": [3, 4, 11, 26, 276, 339, 348, 349, 366, 367, 368, 383, 384, 387, 388, 391, 392, 393, 394, 395, 396, 397], "requir": [3, 6, 19, 21, 37, 44, 64, 74, 81, 117, 118, 131, 229, 230, 233, 246, 300, 332, 334, 371, 374, 377, 379, 381, 387, 395, 397], "model": [3, 5, 229, 230, 377, 380, 381, 383, 384, 386, 390, 391, 392, 395, 396], "follow": [3, 6, 8, 69, 112, 118, 219, 291, 376, 378, 379, 380, 381, 382, 383, 397, 398], "instruct": [3, 4, 377, 378, 379, 383, 398], "readi": [3, 4, 360, 377], "come": [3, 381], "typic": [3, 140, 382], "found": [3, 6, 376, 383, 395, 397], "under": [3, 8, 377, 380, 381, 383, 398], "your_model": 3, "perf_model": 3, "py": [3, 6, 376, 377, 381, 394, 395, 398], "pytest": [3, 4, 376, 377, 381, 395, 398], "test": [3, 4, 6, 376, 377, 380, 381, 393, 395, 398], "python_api_test": 3, "perf_your_model": 3, "csv": [3, 381, 395], "perf_your_model_d": 3, "contain": [3, 4, 6, 8, 30, 88, 108, 222, 274, 382, 391], "tabl": [3, 379, 395], "two": [3, 61, 63, 136, 141, 219, 279, 291, 337, 351, 360, 376, 382], "row": [3, 8, 54, 106, 116, 118, 119, 121, 128, 243, 294, 309, 364, 381, 382, 391, 392, 395], "batch": [3, 44, 67, 68, 69, 84, 117, 118, 162, 187, 219, 222, 261, 262, 263, 264, 359, 381], "sec": 3, "second": [3, 130, 136, 141, 187, 219, 250, 260, 279, 291, 337, 381, 393, 395, 398], "compil": [3, 392, 395, 398], "time": [3, 107, 165, 229, 288, 377, 381, 392, 393, 395, 398], "infer": [3, 44, 377, 381, 395], "g": [3, 69, 219, 379, 381, 382], "throughput": 3, "inf": [3, 228, 234], "cpu": [3, 379, 381, 395, 397], "vit": 3, "patch16": 3, "30": [3, 64, 90, 395], "51": [3, 394], "16": [3, 317, 382, 393, 395, 397], "05": [3, 44, 397], "46": [3, 395], "0": [3, 6, 8, 9, 11, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 57, 58, 59, 60, 62, 63, 64, 65, 69, 70, 75, 78, 80, 81, 86, 88, 89, 90, 91, 92, 94, 95, 97, 99, 101, 102, 104, 107, 108, 109, 110, 113, 115, 116, 117, 118, 120, 125, 129, 130, 131, 132, 133, 134, 137, 138, 139, 143, 145, 146, 147, 148, 150, 154, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 175, 176, 178, 180, 181, 182, 184, 185, 188, 189, 190, 192, 194, 197, 199, 200, 203, 205, 207, 209, 211, 213, 214, 216, 218, 222, 223, 227, 228, 232, 233, 236, 237, 239, 240, 242, 243, 246, 247, 248, 250, 252, 253, 257, 258, 259, 265, 266, 269, 270, 271, 273, 274, 276, 280, 281, 284, 285, 290, 291, 293, 297, 298, 299, 300, 305, 306, 308, 310, 311, 312, 313, 317, 318, 319, 321, 322, 325, 326, 327, 329, 332, 333, 334, 335, 339, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 363, 365, 366, 367, 370, 371, 374, 375, 376, 379, 381, 382, 391, 392, 393, 394, 395, 396, 397, 398], "0623": 3, "29": [3, 395], "4960": 3, "includ": [3, 5, 6, 61, 377, 382], "without": [3, 8, 91, 379], "ani": [3, 8, 117, 118, 250, 377, 395], "abovement": 3, "grayskul": [3, 6, 32, 376, 379, 383, 384, 387, 388, 393, 394, 398], "It": [3, 5, 6, 8, 9, 67, 68, 69, 229, 230, 353, 391], "sinc": [3, 159], "dure": [3, 63, 130, 165, 353, 382], "do": [3, 377, 393], "pai": 3, "suggest": 3, "calcul": [3, 9, 74, 107, 269, 381], "comput": [3, 5, 6, 20, 22, 24, 39, 61, 67, 68, 69, 80, 82, 106, 108, 122, 133, 140, 142, 155, 165, 174, 175, 176, 182, 187, 199, 200, 203, 204, 207, 208, 209, 210, 217, 219, 223, 227, 241, 249, 257, 261, 262, 263, 264, 265, 292, 301, 318, 329, 333, 355, 356, 359, 360, 370, 372, 381, 391, 392], "": [3, 4, 6, 8, 61, 67, 68, 69, 107, 229, 230, 358, 359, 377, 379, 382, 391, 392, 393, 397], "also": [3, 6, 8, 67, 68, 69, 108, 235, 377, 381, 397], "maintain": [3, 380], "run_perform": [3, 377], "sh": [3, 4, 377, 379, 381, 395], "facilit": 3, "easi": [3, 391], "wai": [3, 5, 229, 230, 376, 379, 391], "attempt": [3, 395], "fastest": 3, "command": [3, 12, 14, 18, 19, 21, 27, 31, 33, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 63, 64, 70, 80, 81, 86, 88, 89, 92, 94, 95, 97, 99, 101, 102, 104, 107, 109, 110, 113, 115, 116, 117, 118, 120, 130, 131, 132, 133, 134, 137, 138, 139, 143, 145, 154, 157, 159, 162, 166, 167, 168, 169, 170, 173, 175, 176, 178, 180, 184, 189, 190, 192, 194, 197, 199, 200, 203, 205, 207, 209, 214, 216, 223, 227, 228, 232, 233, 236, 237, 239, 240, 242, 243, 247, 250, 252, 258, 259, 269, 274, 280, 281, 284, 285, 291, 293, 297, 298, 299, 300, 305, 306, 308, 310, 311, 312, 313, 319, 325, 326, 327, 329, 332, 334, 335, 339, 340, 342, 343, 344, 348, 349, 353, 354, 358, 359, 363, 365, 366, 367, 370, 371, 375, 379, 381, 398], "merg": [3, 380], "built": [4, 5, 273, 379, 395, 397], "now": [4, 112, 130, 353, 368, 382, 391, 393], "root": [4, 298, 326, 355, 356], "provid": [4, 26, 31, 44, 107, 115, 187, 219, 229, 230, 265, 266, 276, 318, 339, 342, 349, 354, 377, 380, 381, 382, 391, 393, 398], "virtual": [4, 379], "which": [4, 8, 47, 50, 74, 107, 108, 112, 131, 132, 187, 219, 222, 229, 230, 246, 247, 269, 317, 318, 358, 359, 374, 375, 376, 381, 382], "ll": 4, "work": [4, 219, 317, 376, 377, 383, 384, 387, 388, 398], "python_env": [4, 379, 394, 395, 397], "bin": [4, 85, 188, 379, 395], "python_env_dir": 4, "variabl": [4, 6, 379, 394, 396, 398], "create_venv": [4, 379], "control": [4, 8, 391], "pythonpath": [4, 379, 397], "common": [4, 133, 175, 377], "practic": 4, "export": [4, 379, 398], "pwd": [4, 379], "folder": [4, 377, 381, 395], "split": [4, 63, 136, 141, 279, 337, 360, 382], "them": [4, 360, 379, 381, 391], "sub": [4, 339, 366], "In": [4, 6, 109, 219, 291, 351, 356, 376, 381, 382, 391, 397], "find": [4, 379, 391, 392, 393, 394, 395, 396], "prepar": [4, 8, 377, 395], "readm": [4, 377, 379, 395, 397], "md": [4, 26, 276, 377, 379], "give": [4, 381], "how": [4, 6, 9, 377, 381, 382, 392, 393, 398], "progress": [4, 397], "yet": 4, "mani": [4, 6, 376, 392, 397], "part": [4, 136, 141, 279, 337, 377, 381, 393], "entir": [4, 140, 339], "path_to_test_fil": 4, "test_in_fil": 4, "neural": 5, "network": 5, "design": 5, "feel": 5, "familiar": 5, "experienc": 5, "kei": [5, 360, 376, 382, 391, 393, 395], "than": [5, 8, 9, 63, 78, 117, 118, 134, 135, 143, 144, 178, 179, 185, 214, 215, 235, 265, 354, 379, 381, 393, 398], "200": 5, "fuse": [5, 8, 376, 393], "A": [5, 6, 8, 30, 131, 132, 219, 246, 247, 319, 359, 374, 375, 377, 379, 380, 382], "differ": [5, 8, 69, 219, 305, 329, 354, 382, 391, 398], "distribut": [5, 74, 85, 187, 219, 382], "The": [5, 6, 8, 9, 10, 11, 26, 27, 30, 32, 61, 62, 67, 68, 69, 75, 84, 85, 86, 88, 89, 90, 91, 105, 110, 112, 115, 118, 130, 131, 132, 140, 154, 180, 187, 218, 219, 222, 235, 246, 247, 248, 251, 261, 262, 263, 264, 276, 277, 278, 284, 285, 288, 339, 350, 353, 354, 358, 359, 368, 374, 375, 376, 377, 378, 380, 381, 382, 391, 392, 397, 398], "abil": 5, "custom": [5, 6, 277, 278, 393], "nativ": 5, "mesh": [5, 26, 130, 276, 351, 353, 379], "tool": [5, 379, 381, 395], "util": [5, 379, 382, 391, 392, 397], "significantli": [5, 8, 392], "speed": [5, 392], "load": [5, 188, 394, 395, 397], "comparison": [5, 165, 380], "mode": [5, 37, 44, 45, 81, 95, 97, 101, 137, 138, 173, 222, 232, 270, 297, 305, 391, 392, 393, 394, 395, 396], "long": [5, 380], "sequenc": [5, 6, 358, 359], "against": [5, 377, 398], "known": [5, 69], "document": [6, 377, 380, 395], "meant": 6, "contributor": 6, "Not": [6, 238, 376, 398], "mai": [6, 8, 75, 81, 156, 177, 219, 270, 274, 350, 354, 376, 382, 398], "wormhol": [6, 32, 376, 379, 383, 398], "take": [6, 265, 357, 377, 378, 382, 391], "one": [6, 57, 58, 59, 60, 265, 378], "input": [6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 377, 381, 382, 392, 393, 396, 397, 398], "produc": [6, 274, 377, 391, 392], "call": [6, 8, 107, 130, 277, 278, 353, 380, 381, 382, 391, 393, 395, 398], "optiona": 6, "composit": 6, "struct": 6, "specifi": [6, 8, 30, 61, 85, 90, 91, 108, 112, 131, 132, 187, 219, 229, 230, 246, 247, 250, 251, 252, 265, 288, 339, 349, 358, 359, 374, 375, 376, 392, 393], "simpli": [6, 351, 391], "defin": [6, 32, 380, 382], "method": [6, 273, 379, 395], "ttnn": [6, 379, 380, 382, 383, 386, 388, 389, 392, 397, 398], "register_oper": 6, "exist": [6, 248, 395, 397], "bind_registered_oper": 6, "auto": 6, "attach": [6, 229, 230, 395], "attach_golden_funct": 6, "let": [6, 382, 391, 393], "just": [6, 261, 262, 263, 264, 393, 397], "copi": [6, 61, 129, 159, 350, 391], "order": [6, 74, 112, 219, 256, 300, 354, 381, 382, 383, 391, 393, 398], "directori": [6, 383, 397], "structur": [6, 8, 9, 376], "shown": [6, 382], "below": [6, 107, 219, 377, 381, 382, 383], "cpp": 6, "categori": 6, "operation_nam": 6, "_device_oper": 6, "hpp": 6, "program_factory_0": 6, "_program_factori": 6, "factori": 6, "But": 6, "concret": [6, 219], "example_device_oper": 6, "spdx": [6, 398], "filecopyrighttext": [6, 398], "2023": [6, 395, 397], "inc": [6, 398], "licens": [6, 398], "identifi": [6, 395, 398], "apach": [6, 398], "pragma": 6, "onc": [6, 261, 262, 263, 264, 379, 392], "variant": 6, "device_oper": 6, "decor": [6, 380, 391, 392, 393, 394, 395, 396], "namespac": [6, 397], "exampledeviceoper": 6, "store": [6, 8, 44, 381, 382, 391], "aren": [6, 10], "t": [6, 10, 105, 159, 219, 229, 230, 276, 381, 391, 393, 395], "operation_attributes_t": 6, "bool": [6, 19, 21, 31, 32, 37, 44, 64, 67, 68, 69, 74, 75, 80, 81, 95, 97, 101, 137, 142, 165, 173, 187, 219, 222, 229, 230, 232, 233, 250, 263, 264, 265, 297, 300, 305, 332, 334, 348, 349, 354, 355, 356, 358, 359, 360, 366, 367, 371], "int": [6, 12, 14, 18, 19, 21, 26, 27, 30, 31, 33, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 63, 64, 67, 68, 69, 70, 74, 80, 81, 86, 88, 89, 90, 92, 94, 95, 97, 99, 101, 102, 104, 105, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 120, 126, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 145, 154, 157, 159, 162, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 180, 184, 187, 189, 190, 192, 194, 197, 199, 200, 203, 205, 207, 209, 214, 216, 218, 219, 222, 223, 227, 228, 232, 233, 236, 237, 239, 240, 242, 243, 247, 248, 250, 251, 252, 255, 258, 259, 261, 262, 263, 264, 265, 266, 269, 274, 276, 279, 280, 281, 284, 285, 289, 293, 297, 299, 300, 305, 306, 308, 310, 311, 312, 313, 317, 318, 319, 325, 326, 327, 329, 332, 334, 335, 337, 339, 340, 342, 343, 344, 348, 349, 353, 354, 355, 356, 358, 359, 360, 363, 365, 366, 367, 368, 370, 371, 375, 382, 396, 397], "some_other_attribut": 6, "argument": [6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 391, 394, 396], "don": [6, 219, 391], "thei": [6, 8, 9, 219, 377, 392, 393], "tensor_args_t": 6, "const": [6, 304], "input_tensor": [6, 12, 13, 14, 15, 16, 17, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 81, 83, 84, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 125, 127, 128, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 174, 179, 180, 181, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 205, 206, 211, 212, 213, 215, 216, 222, 228, 234, 235, 238, 239, 240, 242, 243, 244, 245, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 375, 394, 396, 398], "howev": [6, 8, 250, 391], "show": [6, 219, 382, 392, 393], "els": [6, 80, 394, 396, 397], "done": [6, 8, 377, 379, 381, 391, 395], "io_tensor": 6, "optional_output_tensor": [6, 187, 219], "vector": [6, 219, 257, 305], "vector_of_tensor": 6, "tupl": [6, 67, 68, 69, 74, 250, 261, 262, 263, 264, 354, 360], "tuple_of_tensor": 6, "vector_of_optional_tensor": 6, "some_crazy_tuple_of_tensor": 6, "return": [6, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 393, 394, 395, 396, 397], "spec": [6, 74], "singl": [6, 359, 376, 380, 381, 382, 391], "tensorspec": 6, "spec_return_value_t": 6, "tensor_return_value_t": 6, "note": [6, 8, 66, 107, 161, 219, 246, 247, 272, 291, 354, 379, 381, 382, 391, 393, 397, 398], "should": [6, 8, 69, 136, 141, 159, 165, 182, 219, 222, 243, 250, 258, 279, 337, 351, 377, 380, 381, 391, 392, 393, 394, 396], "same": [6, 8, 18, 20, 22, 24, 39, 46, 47, 49, 50, 51, 67, 68, 80, 82, 89, 91, 92, 93, 107, 108, 115, 117, 122, 132, 133, 134, 135, 143, 144, 155, 159, 165, 175, 176, 178, 179, 182, 187, 199, 200, 203, 204, 207, 208, 209, 210, 214, 215, 217, 219, 223, 227, 229, 230, 236, 237, 238, 241, 243, 247, 249, 257, 258, 261, 262, 263, 264, 299, 301, 329, 333, 335, 351, 354, 358, 370, 372, 375, 381, 382, 391, 393], "pattern": [6, 63, 229, 380], "e": [6, 219, 381, 382, 398], "singlecor": 6, "share": [6, 354, 382], "between": [6, 30, 44, 67, 68, 69, 219, 261, 262, 263, 264, 352], "override_runtime_argu": 6, "shared_variables_t": 6, "tt_metal": [6, 339, 368, 379, 381, 395], "kernelhandl": 6, "unary_reader_kernel_id": 6, "unary_writer_kernel_id": 6, "cached_program_t": 6, "cachedprogram": 6, "static": 6, "operation_attribut": 6, "tensor_arg": 6, "tensor_return_valu": 6, "void": 6, "cached_program": 6, "multicor": [6, 250, 348, 349, 366, 367], "size_t": 6, "num_cor": [6, 8], "num_cores_i": 6, "program_factory_t": 6, "mandatori": 6, "select": [6, 8, 44, 380], "arg": [6, 118, 252, 261, 262, 263, 264, 277, 278, 339, 398], "select_program_factori": 6, "valid": [6, 8, 26, 105, 117, 118, 219, 229, 230, 276, 376, 377, 381, 382, 395], "usual": 6, "validate_on_program_cache_miss": 6, "reus": [6, 261, 262, 263, 264], "less": [6, 178, 179, 214, 215, 265, 379, 381, 398], "validate_on_program_cache_hit": 6, "compute_output_spec": 6, "create_output_tensor": 6, "map": [6, 32, 391, 392, 393, 394, 395, 396], "abl": 6, "prim": 6, "after": [6, 8, 106, 250, 277, 380, 381, 391, 398], "op": [6, 8, 9, 10, 31, 67, 68, 69, 74, 89, 222, 318, 339, 358, 359, 365, 380, 381, 395, 398], "keep": [6, 31, 265, 376, 382], "mind": [6, 393], "overload": [6, 339, 391], "queue_id": [6, 12, 14, 18, 19, 21, 27, 31, 33, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 63, 64, 69, 70, 80, 81, 86, 88, 89, 92, 94, 95, 97, 99, 101, 102, 104, 106, 107, 109, 110, 113, 115, 116, 117, 118, 120, 131, 132, 133, 134, 137, 138, 139, 143, 145, 154, 157, 159, 162, 166, 167, 168, 169, 170, 173, 175, 176, 178, 180, 184, 189, 190, 192, 194, 197, 199, 200, 203, 205, 207, 209, 214, 216, 222, 223, 227, 228, 232, 233, 236, 237, 239, 240, 242, 243, 247, 250, 252, 258, 259, 269, 274, 280, 281, 284, 285, 291, 293, 297, 298, 299, 300, 305, 306, 308, 310, 311, 312, 313, 317, 319, 325, 326, 327, 329, 332, 334, 335, 340, 342, 343, 344, 348, 349, 354, 358, 359, 363, 365, 366, 367, 370, 371, 375], "automat": [6, 218, 351, 377, 381, 382, 391, 392], "primit": 6, "so": [6, 8, 118, 376, 391, 397], "case": [6, 80, 130, 165, 219, 241, 260, 351, 376, 377, 382, 391, 398], "hash": [6, 229, 230, 381], "stl": 6, "hash_t": 6, "compute_program_hash": 6, "create_op_performance_model": 6, "opperformancemodel": 6, "make": [6, 229, 230, 319, 354, 360, 376, 382, 395, 398], "avail": [6, 8, 368, 383, 384, 387, 388, 398], "constexpr": 6, "some_condition_based_on_operation_attributes_and_or_tensor_arg": 6, "true": [6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 391, 392, 393, 394, 395, 396, 397, 398], "get_logical_shap": 6, "tensorlayout": 6, "get_dtyp": 6, "pageconfig": 6, "get_layout": 6, "memoryconfig": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375], "output_spec": 6, "create_device_tensor": 6, "42": [6, 392, 395, 397], "single_core_program_factori": 6, "work_split": 6, "output_tensor": [6, 12, 14, 18, 27, 31, 33, 38, 46, 47, 48, 49, 50, 51, 53, 63, 70, 80, 86, 88, 89, 92, 94, 95, 97, 99, 101, 102, 104, 109, 113, 115, 116, 120, 126, 131, 132, 133, 134, 137, 138, 139, 143, 145, 154, 157, 159, 166, 167, 168, 169, 170, 173, 175, 176, 178, 180, 184, 189, 190, 192, 194, 197, 199, 200, 203, 205, 207, 209, 214, 216, 223, 227, 228, 232, 236, 237, 239, 240, 242, 247, 258, 259, 269, 274, 280, 281, 284, 285, 293, 297, 298, 299, 305, 306, 308, 310, 311, 312, 313, 319, 325, 326, 327, 329, 335, 340, 342, 343, 344, 354, 363, 365, 370, 371, 375, 391, 396, 398], "src_buffer": 6, "dst_buffer": 6, "dataformat": 6, "cb_data_format": 6, "datatype_to_dataformat_convert": 6, "uint32_t": [6, 109], "single_tile_s": 6, "tiles": 6, "cb_data_format_output": 6, "single_tile_size_output": 6, "num_til": 6, "volum": 6, "constant": [6, 382], "tile_hw": 6, "idevic": [6, 67, 68, 69, 261, 262, 339], "corecoord": 6, "compute_with_storage_grid_s": 6, "num_cores_x": [6, 376, 393], "x": [6, 39, 69, 187, 219, 253, 358, 359, 379, 381, 382, 392, 393, 396, 397], "y": [6, 39, 253, 381, 382, 392, 393, 397], "all_cor": 6, "core_group_1": 6, "core_group_2": 6, "num_tiles_per_core_group_1": 6, "num_tiles_per_core_group_2": 6, "split_work_to_cor": 6, "src0_cb_index": 6, "cbindex": 6, "c_0": 6, "num_input_til": 6, "circularbufferconfig": 6, "cb_src0_config": 6, "set_page_s": 6, "cb_src0": 6, "createcircularbuff": 6, "output_cb_index": 6, "c_2": 6, "num_output_til": 6, "cb_output_config": 6, "cb_output": 6, "src_is_dram": 6, "buffer_typ": 6, "buffertyp": 6, "dram": [6, 8, 9, 350, 352, 382, 391], "reader_compile_time_arg": 6, "dst_is_dram": 6, "writer_compile_time_arg": 6, "createkernel": 6, "eltwis": [6, 123, 260, 286], "kernel": [6, 8, 61, 67, 68, 69, 106, 110, 187, 219, 222, 261, 262, 263, 264, 318, 379, 381, 392], "dataflow": 6, "reader_unary_interleaved_start_id": 6, "readerdatamovementconfig": 6, "writer_unary_interleaved_start_id": 6, "writerdatamovementconfig": 6, "compute_kernel_args_group_1": 6, "per_core_block_cnt": 6, "per_core_block_s": 6, "math_approx_mod": 6, "fals": [6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 391, 392, 393, 394, 395, 396, 397, 398], "eltwise_unary_kernel_group_1_id": 6, "eltwise_sfpu": 6, "computeconfig": 6, "math_fidel": [6, 396], "mathfidel": [6, 396], "hifi4": [6, 381, 395], "compile_arg": 6, "rang": [6, 18, 30, 46, 47, 48, 49, 50, 51, 72, 117, 118, 133, 158, 175, 177, 192, 228, 234, 236, 255, 293, 295, 315, 335, 340, 341, 342, 382], "compute_kernel_args_group_2": 6, "eltwise_unary_kernel_group_2_id": 6, "num_tiles_written": 6, "num_tiles_per_cor": 6, "tt_assert": 6, "setruntimearg": 6, "address": 6, "move": [6, 8, 125, 126, 377, 391, 393, 394, 395], "shared_vari": 6, "runtime_arg": 6, "getruntimearg": 6, "multi_core_program_factori": 6, "compositeexampleoper": 6, "composite_exampl": 6, "another_copi": 6, "_pybind": 6, "example_pybind": 6, "pybind": 6, "pybind_fwd": 6, "pybind11": 6, "bind_example_oper": 6, "r": [6, 253, 379, 395], "doc": [6, 395], "expos": 6, "logic": [6, 203, 204, 207, 208, 210, 219, 229, 230], "self": [6, 376, 382, 396], "correct": 6, "specif": [6, 8, 31, 112, 219, 248, 359, 377, 379, 382, 383, 395], "pybind_overload_t": 6, "decltyp": 6, "examples_pybind": 6, "py_modul": 6, "final": [6, 219, 376, 377, 380, 391], "wherev": 6, "want": [6, 379, 392, 394, 398], "compar": [6, 92, 134, 143, 178, 214, 219, 237, 392], "its": [6, 61, 69, 91, 250, 317, 376, 377, 380, 381, 382, 398], "equival": [6, 31, 112, 354, 360, 382], "import": [6, 108, 112, 222, 376, 377, 379, 381, 391, 392, 393, 394, 395, 396, 397, 398], "signatur": 6, "And": [6, 376, 382, 391, 392], "ignor": 6, "kwarg": [6, 261, 262, 263, 264, 277, 278, 339, 398], "def": [6, 376, 393, 394, 395, 396, 397, 398], "golden_funct": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375], "befor": [6, 8, 32, 108, 250, 261, 262, 263, 264, 278, 319, 377, 382], "some": [6, 339, 354, 398], "postprocess": 6, "manual": [6, 376, 398], "pack": [6, 366, 367], "preprocess_golden_function_input": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375], "ttnn_input_tensor": 6, "postprocess_golden_function_output": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375], "torch_output_tensor": [6, 398], "becaus": [6, 382, 391, 392, 393], "wa": [6, 107, 377, 381, 382, 391, 397], "class": [8, 9, 376, 377, 381, 382, 395, 396, 397], "pybind11_object": [8, 9, 382], "flag": [8, 32, 395], "properti": [8, 9, 382], "size": [8, 9, 30, 67, 68, 69, 84, 88, 89, 108, 219, 222, 248, 260, 261, 262, 263, 264, 265, 317, 358, 359, 360, 368, 382, 391, 398], "height": [8, 9, 61, 63, 67, 68, 69, 74, 117, 118, 131, 140, 219, 222, 246, 261, 262, 263, 264, 351, 374, 381, 382], "gener": [8, 88, 109, 118, 219, 253, 377, 381, 391, 392, 393, 394, 395, 396], "chunk": [8, 105, 276, 358, 359, 392, 397], "l1": [8, 9, 74, 187, 219, 248, 350, 352, 382, 393], "divid": [8, 9, 81, 355, 356], "among": 8, "further": [8, 392], "subdivid": 8, "within": [8, 30, 47, 50, 222, 377, 382, 383], "possibl": [8, 219, 353, 376, 394], "equal": [8, 92, 93, 112, 134, 135, 165, 178, 179, 237, 238, 398], "output_matrix_height_per_cor": 8, "lead": 8, "larg": [8, 9, 319, 376, 382, 394], "temporari": 8, "circular": 8, "oom": 8, "must": [8, 27, 31, 44, 67, 68, 89, 106, 108, 235, 259, 261, 262, 269, 291, 317, 348, 349, 350, 354, 366, 367, 379, 382], "32": [8, 26, 61, 63, 64, 75, 106, 118, 129, 131, 136, 140, 141, 187, 219, 243, 244, 245, 246, 249, 250, 252, 260, 266, 273, 279, 289, 290, 301, 317, 318, 337, 350, 351, 352, 365, 374, 382, 391, 392, 394, 395, 398], "evenli": [8, 30], "reduc": [8, 9, 31, 265, 276, 354], "width": [8, 9, 61, 67, 68, 69, 74, 117, 118, 131, 140, 219, 222, 246, 261, 262, 263, 264, 351, 357, 374, 381], "prevent": 8, "greater": [8, 63, 78, 117, 118, 134, 135, 143, 144, 185, 235, 398], "n150": 8, "thats": 8, "64": [8, 63, 74, 75, 129, 136, 141, 187, 219, 252, 273, 279, 317, 318, 337, 350, 351, 352, 382, 393, 394, 395, 396, 398], "2048": [8, 398], "divisor": [8, 133, 270], "halv": 8, "appli": [8, 9, 12, 14, 18, 27, 33, 38, 44, 48, 53, 61, 67, 68, 69, 70, 86, 92, 94, 95, 97, 99, 101, 102, 106, 108, 109, 110, 111, 113, 115, 120, 133, 134, 136, 137, 139, 140, 141, 143, 145, 154, 157, 166, 167, 168, 169, 170, 175, 176, 178, 180, 184, 187, 189, 190, 192, 194, 197, 199, 200, 203, 205, 207, 209, 214, 216, 219, 222, 223, 227, 228, 236, 237, 239, 242, 250, 261, 262, 263, 264, 274, 279, 280, 281, 284, 285, 293, 297, 299, 305, 306, 308, 310, 311, 313, 319, 325, 327, 329, 335, 337, 340, 342, 344, 363, 365, 377], "sigmoid_approx": 8, "determin": [8, 9, 69, 219, 229, 230, 382, 391, 392, 393, 394, 395, 396], "examin": 8, "assum": [8, 84, 111, 126, 339, 368, 383], "alreadi": [8, 69, 229, 230, 248, 383, 395, 397], "alwai": [8, 383, 391, 394, 395], "even": [8, 27, 75, 218, 219], "format": [8, 9, 32, 39, 67, 68, 69, 106, 125, 126, 130, 222, 261, 262, 263, 264, 274, 380, 382], "out_channel": [8, 67, 68, 69, 261, 262, 263, 264, 396], "in_channel": [8, 67, 68, 69, 261, 262, 263, 264, 396], "kernel_height": [8, 67, 68, 263, 264], "kernel_width": [8, 67, 68, 263, 264], "grid": [8, 187, 219, 358, 359, 366, 376, 382], "boolean": [8, 163, 164, 342, 354], "indic": [8, 31, 88, 89, 112, 243, 317, 367], "whether": [8, 31, 32, 75, 187, 219, 222, 229, 230, 263, 264, 348, 349, 354, 359, 360, 366, 367], "conv": [8, 67, 68, 69, 84, 396], "halo": [8, 9, 222], "micro": 8, "anoth": [8, 107], "float32": [8, 27, 30, 44, 90, 91, 108, 115, 123, 133, 159, 175, 223, 227, 258, 293, 374, 375, 376, 381, 382, 391, 396, 398], "bfloat16": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 381, 382, 391, 392, 393, 395, 396, 398], "doubl": 8, "allow": [8, 219, 377, 380], "stall": 8, "reader": [8, 229], "improv": [8, 319, 377], "increas": 8, "usag": [8, 377, 379], "fold": 8, "stride": [8, 67, 68, 69, 84, 222, 261, 262, 263, 264, 391, 396], "dimens": [8, 9, 26, 27, 31, 61, 63, 64, 108, 112, 131, 136, 140, 141, 162, 219, 220, 224, 225, 246, 250, 252, 260, 265, 266, 276, 279, 288, 290, 291, 317, 318, 331, 336, 337, 351, 353, 354, 357, 358, 359, 360, 369, 374, 382], "notic": 8, "caution": [8, 379], "product": [8, 107, 219, 265, 358, 359], "22378": 8, "nhwc": 8, "n": [8, 9, 44, 63, 67, 68, 69, 84, 106, 108, 117, 118, 222, 243, 256, 257, 368, 379, 381, 391, 392, 395, 397], "h": [8, 9, 44, 67, 68, 69, 84, 106, 117, 118, 222, 368, 382], "w": [8, 9, 44, 67, 68, 69, 84, 106, 117, 118, 222, 368, 381], "ic": 8, "oc": 8, "current": [8, 61, 63, 74, 229, 230, 263, 264, 350, 359, 379, 382, 383, 391, 398], "condit": [8, 291, 377], "met": [8, 291], "exactli": 8, "writer": 8, "carri": [8, 285], "bottleneck": 8, "re": [8, 376, 378, 392], "overwrit": 8, "either": [8, 9, 74, 219, 351, 377, 379, 382, 383], "tile": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 223, 226, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 266, 267, 268, 269, 270, 274, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 358, 359, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 381, 382, 391, 392, 395], "row_major": [8, 30, 31, 74, 90, 91, 130, 131, 132, 244, 245, 246, 348, 349, 366, 367, 374, 375, 381, 391, 392, 396], "expect": [8, 69, 106, 118, 222, 360, 377, 380, 391], "next": [8, 241, 382], "recommend": [8, 177, 376, 379, 391, 398], "faster": [8, 381, 393], "fragment": 8, "ideal": [8, 382], "face": 8, "reshard": [8, 396], "anywai": 8, "previou": [8, 89], "due": [8, 274, 381, 382, 391], "dilat": [8, 67, 68, 69, 222, 261, 262, 263, 264, 396], "tensormemorylayout": [8, 222, 396], "heurist": 8, "height_shard": [8, 396], "block_shard": [8, 222, 396], "width_shard": 8, "orient": [8, 74, 382], "major": [8, 54, 106, 116, 118, 119, 121, 128, 243, 294, 309, 364, 382, 391, 392], "column": [8, 381, 382, 395], "bia": [8, 44, 45, 67, 68, 69, 106, 142, 174, 187, 261, 262, 263, 264, 292, 376, 393, 396], "respons": [8, 395], "unspecifi": 8, "place": [9, 44, 93, 135, 144, 171, 172, 179, 215, 222, 238, 293, 350, 356, 382], "too": [9, 398], "fit": [9, 290], "conv2d_dram": 9, "happen": 9, "number": [9, 18, 19, 22, 24, 26, 45, 63, 67, 68, 69, 80, 81, 82, 92, 93, 105, 117, 118, 122, 123, 124, 134, 135, 143, 144, 176, 178, 179, 183, 199, 200, 203, 207, 209, 214, 215, 217, 219, 220, 222, 223, 224, 225, 227, 233, 236, 237, 238, 243, 250, 252, 259, 260, 261, 262, 263, 264, 276, 286, 287, 288, 290, 291, 299, 329, 331, 332, 335, 336, 349, 354, 355, 356, 369, 370, 380, 381, 382, 393, 397], "along": [9, 107, 108, 112, 266, 317, 318, 354, 357, 382], "correspond": [9, 26, 88, 89, 276, 359], "divis": [9, 122, 136, 141, 269, 279, 337, 382], "last": [9, 27, 31, 61, 112, 131, 136, 141, 246, 279, 291, 337, 351, 354, 360, 374, 381, 382], "smaller": [9, 382], "rest": [9, 118], "prefer": 9, "much": [9, 381, 392], "larger": 9, "_ttnn": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 382], "multi_devic": [10, 11, 125, 126, 248, 339], "meshdevic": [10, 11, 26, 32, 62, 90, 91, 125, 126, 130, 131, 132, 188, 218, 246, 247, 248, 276, 339, 350, 351, 353, 374, 375], "default": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 381, 392, 398], "plan": [10, 11, 125, 126, 251], "deprec": [10, 11, 125, 126, 251, 394], "futur": [10, 11, 125, 126, 251], "arg0": [11, 382], "none": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 391, 392, 393, 394, 395, 396], "device_id": [11, 62, 75, 88, 89, 129, 218, 248, 273, 339, 350, 351, 352, 391, 392, 393, 394, 396, 398], "python_fully_qualified_nam": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375], "abs_t": 12, "object": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 397], "default_preprocess_golden_function_input": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375], "_golden_funct": [12, 15, 18, 23, 25, 28, 29, 30, 35, 38, 42, 52, 53, 61, 63, 65, 66, 68, 70, 72, 76, 78, 81, 88, 90, 91, 92, 94, 95, 97, 99, 101, 102, 111, 113, 116, 120, 129, 130, 132, 134, 137, 139, 142, 143, 145, 148, 150, 153, 157, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 174, 176, 178, 183, 184, 185, 187, 189, 190, 192, 194, 197, 199, 200, 204, 205, 208, 210, 214, 216, 219, 221, 228, 233, 234, 236, 237, 239, 242, 246, 247, 250, 252, 253, 254, 256, 259, 267, 271, 272, 273, 274, 280, 281, 288, 289, 290, 291, 292, 297, 305, 306, 308, 310, 311, 313, 315, 318, 319, 320, 323, 325, 327, 335, 338, 340, 342, 350, 351, 352, 353, 355, 356, 357, 360, 361, 362, 368, 371, 374, 375], "default_postprocess_golden_function_output": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375], "is_cpp_oper": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375], "is_experiment": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375], "element": [12, 14, 27, 31, 33, 38, 48, 53, 63, 67, 68, 69, 70, 86, 94, 95, 97, 99, 101, 102, 108, 109, 112, 113, 115, 120, 136, 137, 139, 140, 141, 145, 154, 157, 166, 167, 168, 169, 170, 180, 184, 189, 190, 192, 194, 197, 205, 216, 228, 239, 242, 243, 250, 257, 258, 261, 262, 263, 264, 265, 269, 274, 279, 280, 281, 284, 285, 290, 293, 297, 305, 306, 308, 310, 311, 313, 319, 325, 327, 337, 340, 342, 344, 354, 363, 365, 367, 382, 391], "wise": [12, 14, 27, 33, 38, 48, 53, 70, 86, 94, 95, 97, 99, 101, 102, 109, 113, 115, 120, 136, 137, 139, 141, 145, 154, 157, 166, 167, 168, 169, 170, 180, 184, 189, 190, 192, 194, 197, 205, 216, 228, 239, 242, 258, 269, 274, 279, 280, 281, 284, 285, 293, 297, 305, 306, 308, 310, 311, 313, 319, 325, 327, 337, 340, 342, 344, 363, 365], "mathrm": [12, 14, 18, 20, 27, 33, 38, 39, 46, 47, 48, 49, 50, 51, 53, 70, 80, 82, 86, 92, 93, 94, 95, 97, 99, 101, 102, 109, 113, 115, 120, 122, 123, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 154, 155, 157, 159, 165, 166, 167, 168, 169, 170, 175, 176, 178, 179, 180, 182, 184, 189, 190, 192, 194, 197, 199, 200, 203, 204, 205, 207, 208, 209, 210, 214, 215, 216, 228, 236, 237, 238, 239, 241, 242, 249, 257, 258, 260, 274, 279, 280, 281, 284, 285, 286, 293, 297, 299, 301, 305, 306, 308, 310, 311, 313, 319, 325, 327, 329, 333, 335, 337, 340, 342, 344, 363, 365, 372], "_tensor": [12, 14, 18, 20, 27, 33, 38, 39, 46, 47, 48, 49, 50, 51, 53, 70, 80, 82, 86, 92, 93, 94, 95, 97, 99, 101, 102, 109, 113, 115, 120, 122, 123, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 154, 155, 157, 159, 165, 166, 167, 168, 169, 170, 175, 176, 178, 179, 180, 182, 184, 189, 190, 192, 194, 197, 199, 200, 203, 204, 205, 207, 208, 209, 210, 214, 215, 216, 228, 236, 237, 238, 239, 241, 242, 249, 257, 258, 260, 274, 279, 280, 281, 284, 285, 286, 293, 297, 299, 301, 305, 306, 308, 310, 311, 313, 319, 325, 327, 329, 333, 335, 337, 340, 342, 344, 363, 365, 372], "_i": [12, 14, 18, 33, 38, 39, 46, 47, 48, 49, 50, 51, 53, 70, 80, 86, 92, 94, 95, 97, 99, 101, 102, 109, 113, 115, 120, 133, 134, 136, 137, 139, 140, 141, 143, 145, 154, 155, 157, 159, 166, 167, 168, 169, 170, 175, 178, 180, 184, 189, 190, 192, 194, 197, 203, 204, 205, 207, 208, 209, 210, 214, 216, 228, 236, 237, 239, 241, 242, 257, 258, 274, 279, 280, 281, 284, 285, 293, 297, 299, 301, 305, 306, 308, 310, 311, 313, 319, 325, 327, 335, 337, 340, 342, 344, 363, 365, 372], "verb": [12, 14, 33, 38, 46, 47, 48, 49, 50, 51, 53, 70, 82, 86, 99, 102, 109, 113, 115, 120, 122, 123, 133, 136, 141, 154, 157, 159, 166, 167, 168, 169, 170, 175, 176, 180, 182, 189, 190, 192, 194, 197, 199, 200, 228, 239, 260, 274, 279, 280, 281, 284, 285, 286, 293, 301, 305, 306, 308, 310, 311, 313, 325, 327, 329, 337, 340, 344, 365], "complextensor": [12, 13, 19, 28, 29, 65, 66, 80, 81, 160, 161, 163, 164, 233, 253, 254, 271, 272, 274, 275, 332], "keyword": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "memory_config": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 392, 393, 396, 398], "prealloc": [12, 14, 18, 19, 21, 27, 31, 33, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 63, 64, 70, 80, 81, 86, 88, 89, 92, 94, 95, 97, 99, 101, 102, 104, 107, 108, 109, 110, 112, 113, 115, 116, 120, 131, 132, 133, 134, 137, 138, 139, 143, 145, 154, 157, 159, 166, 167, 168, 169, 170, 173, 175, 176, 178, 180, 184, 189, 190, 192, 194, 197, 199, 200, 203, 205, 207, 209, 214, 216, 223, 227, 228, 232, 233, 236, 237, 239, 240, 242, 247, 258, 259, 269, 274, 280, 281, 284, 285, 293, 297, 298, 299, 300, 305, 306, 308, 310, 311, 312, 313, 319, 325, 326, 327, 329, 332, 334, 335, 340, 342, 343, 344, 354, 363, 365, 370, 371, 375], "queue": [12, 14, 18, 19, 21, 27, 31, 33, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 63, 64, 69, 70, 80, 81, 86, 88, 89, 92, 94, 95, 97, 99, 101, 102, 104, 106, 107, 109, 110, 113, 115, 116, 117, 118, 120, 130, 131, 132, 133, 134, 137, 138, 139, 143, 145, 154, 157, 159, 162, 166, 167, 168, 169, 170, 173, 175, 176, 178, 180, 184, 189, 190, 192, 194, 197, 199, 200, 203, 205, 207, 209, 214, 216, 222, 223, 227, 228, 232, 233, 236, 237, 239, 240, 242, 243, 247, 250, 252, 258, 259, 269, 274, 280, 281, 284, 285, 291, 293, 297, 298, 299, 300, 305, 306, 308, 310, 311, 312, 313, 319, 325, 326, 327, 329, 332, 334, 335, 339, 340, 342, 343, 344, 348, 349, 353, 354, 358, 359, 363, 365, 366, 367, 370, 371, 375], "id": [12, 14, 18, 19, 21, 27, 31, 33, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 63, 64, 69, 70, 80, 81, 86, 88, 89, 92, 94, 95, 97, 99, 101, 102, 104, 106, 107, 109, 110, 113, 115, 116, 117, 118, 120, 130, 131, 132, 133, 134, 137, 138, 139, 143, 145, 154, 157, 159, 162, 166, 167, 168, 169, 170, 173, 175, 176, 178, 180, 184, 189, 190, 192, 194, 197, 199, 200, 203, 205, 207, 209, 214, 216, 218, 222, 223, 227, 228, 232, 233, 236, 237, 239, 240, 242, 243, 247, 248, 250, 252, 258, 259, 269, 274, 280, 281, 284, 285, 291, 293, 297, 298, 299, 300, 305, 306, 308, 310, 311, 312, 313, 319, 325, 326, 327, 329, 332, 334, 335, 339, 340, 342, 343, 344, 348, 349, 353, 354, 358, 359, 363, 365, 366, 367, 370, 371, 375, 381], "tile_layout": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 223, 226, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 255, 257, 258, 259, 266, 267, 268, 269, 270, 274, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 351, 354, 361, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 376, 382, 391, 392, 393, 396, 398], "unary_backward": [13, 15, 17, 34, 36, 41, 43, 54, 56, 58, 60, 71, 73, 77, 79, 83, 87, 96, 98, 100, 103, 104, 114, 116, 119, 121, 128, 138, 147, 149, 151, 153, 158, 181, 186, 191, 193, 195, 196, 198, 212, 213, 235, 240, 256, 259, 266, 268, 270, 275, 282, 283, 289, 294, 296, 298, 303, 307, 309, 312, 314, 316, 320, 322, 324, 326, 328, 341, 343, 345, 347, 364], "abs_bw_t": 13, "_golden_function_ab": 13, "backward": [13, 15, 17, 19, 21, 23, 25, 29, 34, 36, 37, 40, 41, 43, 45, 54, 56, 58, 60, 64, 66, 71, 73, 77, 79, 81, 83, 87, 89, 96, 98, 100, 103, 104, 110, 114, 116, 119, 121, 124, 128, 138, 147, 149, 151, 153, 156, 158, 161, 177, 181, 183, 186, 191, 193, 195, 196, 198, 201, 202, 212, 213, 221, 226, 233, 235, 240, 254, 256, 259, 266, 268, 270, 272, 275, 282, 283, 287, 289, 294, 296, 298, 300, 303, 307, 309, 312, 314, 316, 320, 322, 324, 326, 328, 330, 332, 334, 341, 343, 345, 347, 364, 371, 373], "given": [13, 15, 17, 19, 21, 23, 25, 29, 31, 34, 36, 37, 40, 41, 43, 45, 54, 56, 58, 60, 64, 66, 69, 71, 73, 77, 79, 81, 83, 84, 87, 91, 96, 98, 100, 103, 104, 107, 108, 114, 116, 119, 121, 124, 128, 138, 147, 149, 151, 153, 156, 158, 161, 177, 181, 183, 186, 191, 193, 195, 196, 198, 201, 202, 212, 213, 221, 226, 229, 230, 233, 235, 240, 248, 251, 254, 256, 259, 266, 268, 270, 272, 275, 282, 283, 287, 289, 290, 294, 296, 298, 300, 303, 307, 309, 312, 314, 316, 320, 322, 324, 326, 328, 330, 332, 334, 341, 343, 345, 347, 354, 359, 364, 368, 371, 373, 376, 381, 391], "grad_tensor": [13, 15, 17, 19, 21, 23, 25, 29, 34, 36, 37, 40, 41, 43, 45, 54, 56, 58, 60, 64, 66, 71, 73, 77, 79, 81, 83, 87, 89, 96, 98, 100, 103, 104, 110, 114, 116, 119, 121, 124, 128, 138, 147, 149, 151, 153, 156, 158, 161, 177, 181, 183, 186, 191, 193, 195, 196, 198, 201, 202, 212, 213, 221, 226, 233, 235, 240, 254, 256, 259, 266, 268, 270, 272, 275, 282, 283, 287, 289, 294, 296, 298, 300, 303, 307, 309, 312, 314, 316, 320, 322, 324, 326, 328, 330, 332, 334, 341, 343, 345, 347, 364, 371, 373], "gradient": [13, 15, 17, 19, 21, 23, 25, 34, 36, 37, 40, 41, 43, 45, 54, 56, 58, 60, 64, 69, 71, 73, 77, 79, 81, 83, 87, 89, 96, 98, 100, 103, 104, 110, 114, 116, 119, 121, 124, 128, 138, 147, 149, 151, 153, 156, 158, 177, 181, 183, 186, 191, 193, 195, 196, 198, 201, 202, 212, 213, 221, 226, 233, 235, 240, 256, 259, 266, 268, 270, 275, 282, 283, 287, 289, 294, 296, 298, 300, 303, 307, 309, 312, 314, 316, 320, 322, 324, 326, 328, 330, 332, 334, 341, 343, 345, 347, 364, 371, 373], "list": [13, 15, 17, 18, 19, 21, 23, 25, 29, 31, 34, 36, 37, 40, 41, 43, 45, 54, 56, 58, 60, 63, 64, 66, 71, 73, 74, 77, 79, 81, 83, 84, 87, 88, 90, 92, 96, 98, 100, 103, 104, 114, 116, 119, 121, 124, 126, 128, 133, 134, 138, 143, 147, 149, 151, 153, 156, 158, 161, 175, 176, 177, 178, 181, 183, 186, 187, 191, 193, 195, 196, 198, 199, 200, 201, 202, 203, 207, 209, 212, 213, 214, 219, 221, 222, 223, 226, 227, 233, 235, 236, 237, 240, 243, 250, 251, 252, 254, 256, 259, 260, 265, 266, 268, 270, 272, 275, 282, 283, 287, 289, 294, 296, 298, 299, 300, 303, 307, 309, 312, 314, 316, 317, 320, 322, 324, 326, 328, 329, 330, 332, 334, 335, 339, 341, 343, 345, 347, 354, 359, 364, 365, 366, 367, 371, 373, 378], "about": [13, 23, 45, 124, 138, 191, 193, 195, 196, 198, 201, 202, 212, 213, 259, 266, 274, 275, 287, 320, 326, 373, 382, 392], "requires_grad": [13, 15, 17, 19, 21, 23, 25, 34, 36, 37, 40, 41, 43, 45, 54, 56, 58, 60, 64, 71, 73, 77, 79, 81, 87, 89, 96, 98, 100, 103, 104, 110, 114, 116, 119, 121, 124, 128, 138, 147, 149, 151, 153, 156, 158, 177, 181, 183, 186, 191, 193, 195, 196, 198, 201, 202, 212, 213, 221, 226, 233, 235, 240, 259, 266, 268, 270, 275, 282, 283, 287, 289, 294, 298, 300, 303, 307, 309, 312, 314, 316, 320, 322, 324, 326, 328, 330, 332, 334, 341, 343, 345, 347, 364, 371, 373], "acos_t": 14, "_golden_function_aco": 14, "rand": [14, 16, 27, 33, 35, 38, 42, 44, 48, 52, 53, 64, 70, 72, 76, 88, 94, 99, 102, 108, 113, 120, 127, 136, 139, 141, 145, 157, 166, 167, 168, 169, 170, 184, 185, 189, 190, 192, 194, 197, 205, 206, 216, 228, 239, 242, 244, 245, 249, 260, 266, 267, 279, 280, 281, 289, 290, 301, 308, 310, 311, 313, 315, 323, 325, 327, 337, 338, 340, 344, 361, 362, 391, 394, 396, 398], "acos_bw_t": 15, "invers": [15, 17, 34, 36, 41, 43], "cosin": [15, 17, 71, 73, 111], "input_tensor_a": [15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 36, 37, 39, 40, 41, 43, 45, 46, 47, 49, 50, 51, 54, 56, 64, 71, 73, 77, 79, 80, 81, 82, 87, 92, 93, 96, 98, 100, 103, 114, 119, 121, 122, 123, 124, 128, 133, 134, 135, 143, 144, 147, 149, 151, 155, 156, 158, 162, 165, 175, 176, 177, 178, 179, 181, 183, 186, 187, 191, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 212, 213, 214, 215, 217, 219, 221, 222, 223, 226, 227, 233, 235, 236, 237, 238, 241, 249, 257, 259, 260, 268, 270, 275, 282, 283, 286, 287, 294, 299, 300, 301, 303, 307, 309, 314, 316, 322, 324, 328, 329, 330, 332, 333, 334, 335, 341, 345, 364, 370, 371, 372, 373, 391, 398], "acosh_t": 16, "_golden_function_acosh": [16, 17], "acosh_bw_t": 17, "hyperbol": [17, 36, 43, 73, 316, 343], "add_t": 18, "input_tensor_b": [18, 19, 20, 21, 22, 23, 24, 25, 37, 39, 40, 45, 46, 47, 49, 50, 51, 64, 80, 81, 82, 92, 93, 122, 123, 124, 133, 134, 135, 143, 144, 155, 156, 162, 165, 175, 176, 177, 178, 179, 183, 187, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 214, 215, 217, 219, 221, 223, 226, 227, 233, 236, 237, 238, 241, 249, 260, 286, 287, 299, 300, 301, 329, 330, 332, 333, 334, 335, 370, 371, 372, 373, 391, 398], "_a": [18, 20, 39, 46, 47, 49, 50, 51, 80, 82, 92, 93, 122, 123, 133, 134, 135, 143, 144, 155, 165, 175, 176, 178, 179, 199, 200, 203, 204, 207, 208, 209, 210, 214, 215, 236, 237, 238, 241, 249, 260, 286, 299, 301, 329, 333, 335, 372], "_b": [18, 20, 39, 46, 47, 49, 50, 51, 80, 82, 92, 93, 122, 123, 133, 134, 135, 143, 144, 155, 165, 175, 176, 178, 179, 199, 200, 203, 204, 207, 208, 209, 210, 214, 215, 236, 237, 238, 241, 249, 260, 286, 299, 301, 329, 333, 335, 372], "datatyp": [18, 30, 32, 61, 84, 88, 89, 90, 91, 92, 107, 108, 130, 131, 132, 133, 134, 140, 142, 143, 175, 176, 178, 187, 199, 200, 203, 207, 209, 214, 219, 223, 227, 236, 237, 246, 247, 299, 329, 335, 351, 352, 374, 375, 391, 392, 396], "str": [18, 32, 37, 81, 85, 92, 110, 133, 134, 143, 175, 176, 178, 187, 188, 199, 200, 203, 207, 209, 214, 219, 223, 227, 229, 230, 236, 237, 299, 304, 329, 335, 397], "broadcast": [18, 19, 81, 92, 134, 143, 176, 178, 187, 199, 200, 203, 207, 209, 214, 219, 236, 237, 290, 329, 332, 335, 358, 398], "int32": [18, 46, 47, 48, 49, 50, 51, 92, 94, 108, 133, 134, 139, 143, 145, 175, 178, 184, 203, 207, 208, 209, 210, 214, 216, 223, 227, 237, 242, 335, 394], "uint32": [18, 31, 88, 89, 108, 159, 162, 381, 382, 391], "4294967295": 18, "uint16": [18, 46, 49, 51, 131, 159, 236, 246, 335, 354, 374, 382], "65535": [18, 46, 49, 51, 236, 335], "tensor1": [18, 19, 20, 21, 22, 23, 24, 25, 37, 39, 40, 45, 46, 47, 49, 50, 51, 63, 64, 80, 81, 82, 92, 93, 122, 123, 124, 133, 134, 135, 143, 144, 155, 156, 162, 165, 175, 176, 177, 178, 179, 182, 183, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 214, 215, 217, 219, 221, 223, 226, 227, 233, 236, 237, 238, 241, 249, 260, 286, 287, 299, 300, 301, 329, 330, 332, 333, 334, 335, 370, 371, 372, 373], "tensor2": [18, 19, 20, 21, 22, 23, 24, 25, 37, 39, 40, 45, 46, 47, 49, 50, 51, 63, 64, 80, 81, 82, 92, 93, 122, 123, 124, 133, 134, 135, 143, 144, 155, 156, 162, 165, 175, 176, 177, 178, 179, 182, 183, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 214, 215, 217, 219, 221, 223, 226, 227, 233, 236, 237, 238, 241, 249, 260, 286, 287, 299, 300, 301, 329, 330, 332, 333, 334, 335, 370, 371, 372, 373], "scalar": [18, 19, 22, 24, 46, 47, 49, 50, 51, 80, 81, 82, 83, 92, 93, 122, 123, 124, 131, 132, 134, 135, 143, 144, 176, 178, 179, 182, 183, 199, 200, 203, 207, 209, 214, 215, 217, 223, 227, 233, 236, 237, 238, 256, 260, 269, 270, 286, 287, 299, 329, 332, 335, 398], "binary_backward": [19, 21, 37, 40, 45, 64, 81, 124, 156, 177, 201, 202, 221, 226, 233, 287, 300, 330, 332, 334, 373], "add_bw_t": 19, "_golden_function_bw": [19, 21, 37, 40, 45, 64, 124, 156, 177, 201, 202, 226, 287, 300, 330, 332, 334, 373], "are_required_output": [19, 21, 37, 64, 81, 233, 300, 332, 334, 371], "input_grad": [19, 21, 37, 64, 81, 110, 233, 300, 332, 334], "other_grad": [19, 21, 37, 64, 81, 233, 300, 332, 334], "bfloat4_b": [19, 21, 22, 24, 27, 40, 45, 64, 81, 130, 156, 177, 182, 183, 201, 202, 217, 221, 226, 233, 300, 330, 332, 334, 353, 370, 373], "addalpha_t": 20, "_golden_function_addalpha": 20, "alpha": [20, 21, 23, 25, 55, 56, 81, 86, 87, 302, 333, 334], "float": [20, 21, 22, 23, 24, 25, 44, 55, 56, 57, 58, 59, 60, 83, 86, 87, 109, 115, 118, 125, 130, 131, 132, 142, 146, 147, 148, 150, 152, 153, 154, 165, 174, 180, 181, 182, 211, 213, 250, 252, 256, 257, 258, 260, 269, 270, 284, 285, 292, 295, 296, 302, 319, 320, 321, 322, 333, 334, 346, 347, 358, 359, 361, 362, 382], "addalpha_bw_t": 21, "addcdiv_t": 22, "_golden_function_addcdiv": 22, "input_tensor_c": [22, 23, 24, 25, 183, 217, 370, 371], "tensor3": [22, 23, 24, 25, 182, 183, 217, 370, 371], "ternary_backward": [23, 25, 183, 371], "addcdiv_bw_t": 23, "addcmul_t": 24, "_golden_function_addcmul": 24, "addcmul_bw_t": 25, "all_gather_t": 26, "gather": [26, 105], "across": [26, 105, 140, 265, 276, 381, 382], "dim": [26, 31, 63, 64, 74, 105, 107, 108, 112, 136, 141, 162, 220, 224, 225, 252, 265, 266, 276, 279, 290, 317, 318, 331, 336, 337, 354, 360, 369, 382, 393, 397], "cluster_axi": [26, 276], "meshtensor": [26, 276], "axi": [26, 107, 276, 290], "line": [26, 276, 395], "mesh_devic": [26, 105, 276], "applic": [26, 85, 276, 382], "guid": [26, 276, 378, 379], "blob": [26, 276, 397], "main": [26, 276, 379, 380, 383, 395, 397, 398], "tech_report": [26, 276], "20mesh": [26, 276], "20of": [26, 276], "20devic": [26, 276], "20with": [26, 276], "20tt": [26, 276], "nn": [26, 229, 230, 276, 383, 384, 387, 388, 396], "num_link": [26, 105, 276], "link": [26, 105, 276], "num_work": [26, 105, 276], "worker": [26, 105, 248, 276, 351, 393, 394], "num_buffers_per_channel": [26, 105, 276], "per": [26, 105, 276, 379, 395], "ring": [26, 105, 276], "full_tensor": [26, 105, 276], "randn": [26, 32, 75, 89, 91, 105, 129, 130, 140, 187, 219, 222, 247, 273, 276, 350, 351, 352, 353, 365, 375, 392, 393, 397], "256": [26, 105, 222, 276, 396, 397], "physical_device_id": [26, 105, 276, 391, 392, 393, 394, 395, 396], "get_t3k_physical_device_ids_r": [26, 105, 276], "open_mesh_devic": [26, 105, 276], "meshshap": [26, 105, 276], "ttnn_tensor": [26, 353, 391], "input_dtyp": [26, 105, 276], "mem_config": [26, 105, 276], "mesh_mapp": [26, 32, 130], "shardtensor2dmesh": 26, "mesh_shap": 26, "alt_complex_rotate90_t": 27, "_golden_function_alt_complex_rotate90": 27, "_": [27, 376, 381, 393, 397], "2i": 27, "complex_unari": [28, 65, 160, 163, 164, 253, 271], "angle_t": 28, "complex": [28, 29, 65, 66, 160, 161, 253, 254, 271, 272], "complex_unary_backward": [29, 66, 161, 254, 272], "angle_bw_t": 29, "arange_t": 30, "inclus": [30, 382], "end": [30, 80, 165, 182, 241, 317, 367, 377, 381, 393, 395], "exclus": [30, 250], "consecut": [30, 382], "dram_memory_config": [30, 61, 90, 91, 187, 219, 350, 382], "space": [30, 67, 68, 69, 261, 262, 263, 264, 382], "print": [30, 32, 63, 90, 91, 129, 130, 131, 132, 187, 218, 219, 246, 247, 248, 252, 288, 290, 304, 317, 318, 350, 351, 353, 374, 375, 381, 382, 391, 392, 393, 395, 397, 398], "00000": [30, 391], "argmax_t": 31, "_create_golden_funct": [31, 220, 224, 225, 331, 336, 369], "local": [31, 35, 38, 42, 52, 53, 70, 72, 76, 78, 94, 95, 97, 99, 101, 102, 113, 120, 137, 139, 145, 148, 150, 157, 159, 166, 167, 168, 169, 170, 184, 185, 189, 190, 192, 194, 197, 205, 216, 220, 224, 225, 228, 234, 239, 242, 267, 280, 281, 297, 305, 306, 308, 310, 311, 313, 315, 319, 323, 325, 327, 331, 336, 338, 340, 342, 354, 361, 362, 369, 376, 377, 382], "keepdim": [31, 265], "currenli": 31, "row_major_layout": [32, 61, 85, 88, 125, 126, 130, 131, 246, 351, 374, 382, 391, 392, 393], "cache_file_nam": 32, "pathlib": [32, 85, 188], "path": [32, 85, 188, 381, 395, 397, 398], "callabl": [32, 229, 230], "serial": 32, "tensortomesh": [32, 130], "use_device_til": 32, "toggl": 32, "truncat": [32, 364], "mantissa": 32, "bit": 32, "bfp": [32, 382], "rais": [32, 353, 396], "runtim": 32, "error": [32, 173, 218, 219, 232, 353, 377, 379], "rte": 32, "bfp8": [32, 391], "bfp4": 32, "375": [32, 130, 394], "30469": [32, 130], "714844": [32, 130], "761719": [32, 130], "53125": [32, 130], "652344": [32, 130], "asin_t": 33, "_golden_function_asin": 33, "asin_bw_t": 34, "lambda": [34, 36, 43, 54, 56, 58, 60, 73, 83, 87, 98, 147, 181, 191, 193, 195, 213, 270, 296, 309, 314, 316, 322, 324, 376, 394, 396], "sine": [34, 36, 111, 316], "asinh_t": 35, "register_ttnn_cpp_unary_funct": [35, 38, 42, 52, 53, 70, 72, 76, 78, 94, 95, 97, 99, 101, 102, 113, 120, 137, 139, 145, 148, 150, 157, 159, 166, 167, 168, 169, 170, 184, 185, 189, 190, 192, 194, 197, 205, 216, 228, 234, 239, 242, 267, 280, 281, 297, 305, 306, 308, 310, 311, 313, 315, 319, 323, 325, 327, 338, 340, 342, 361, 362], "asinh_bw_t": 36, "assign_bw_t": 37, "assign": 37, "other_tensor": [37, 81], "round_mod": [37, 80, 81, 269, 270], "atan_t": 38, "atan2_t": 39, "_golden_function_atan2": 39, "arctan": 39, "left": [39, 80, 133, 175, 301, 380], "right": [39, 80, 133, 175, 301], "atan2_bw_t": 40, "atan_bw_t": 41, "_golden_function_atan": 41, "tangenr": 41, "atanh_t": 42, "atanh_bw_t": 43, "tangent": [43, 343], "batch_norm_t": 44, "spatial": [44, 84, 140, 368], "over": [44, 67, 68, 69, 106, 140, 142, 174, 266, 292, 318, 358, 359], "interleav": [44, 63, 106, 350, 352, 360, 382], "ep": [44, 211, 213], "epsilon": [44, 142, 174, 292], "1e": [44, 142, 165, 174, 292], "momentum": 44, "running_mean": 44, "running_var": 44, "varianc": [44, 382], "gamma": [44, 235], "beta": [44, 319, 320], "evalu": [44, 395], "norm": 44, "bias_gelu_bw_t": 45, "bias_gelu": 45, "approxim": [45, 95, 97, 101, 110, 137, 138, 297, 305], "bitwise_and_t": 46, "_golden_function_bitwise_and": 46, "integ": [46, 47, 49, 50, 51, 250, 359], "bitwise_left_shift_t": 47, "_golden_function_bitwise_left_shift": 47, "ha": [47, 50, 69, 219, 229, 230, 263, 264, 339, 360, 376, 377, 379, 381, 382, 391, 397, 398], "shift_bit": [47, 50], "31": [47, 50, 395, 397], "bitwise_not_t": 48, "_golden_function_bitwise_not": 48, "2147483647": [48, 133], "bitwise_or_t": 49, "_golden_function_bitwise_or": 49, "bitwise_right_shift_t": 50, "_golden_function_bitwise_right_shift": 50, "bitwise_xor_t": 51, "_golden_function_bitwise_xor": 51, "cbrt_t": 52, "ceil_t": 53, "ceil_bw_t": 54, "celu_t": 55, "_golden_function_celu": 55, "celu_bw_t": 56, "formula": [56, 87, 147, 181, 182, 213, 320, 322], "clamp_t": 57, "_golden_function_clamp": 57, "min_tensor": [57, 59], "max_tensor": [57, 59], "clamp_bw_t": 58, "clip_t": 59, "_golden_function_clip": 59, "clip_bw_t": 60, "data_mov": [61, 63, 117, 118, 162, 243, 250, 252, 288, 290, 291, 317, 348, 349, 366, 367], "clone_t": 61, "doe": [61, 130, 353, 377, 381], "alter": 61, "unpad": [61, 126, 351, 367], "adjust": [61, 319], "necessari": [61, 377], "param": [61, 84, 129, 250, 318, 350, 397], "target": [61, 125, 126, 265, 377], "l1_memory_config": [61, 350, 376, 382, 392, 393, 398], "compute_kernel_config": [61, 106, 111, 174, 187, 219, 292, 318, 358, 359], "remov": [62, 353, 367, 391, 394, 395, 397], "success": 62, "concat_t": 63, "concaten": [63, 64, 357, 360], "group": [63, 67, 68, 69, 261, 262, 263, 264, 382, 396], "partit": 63, "independ": 63, "altern": [63, 219, 379, 398], "recombin": 63, "residu": 63, "concat_bw_t": 64, "conj_t": 65, "conjug": 65, "conj_bw_t": 66, "conv1d_t": 67, "1d": [67, 219, 243, 260, 395], "signal": [67, 68, 106, 140, 395], "compos": [67, 68, 69, 106, 140, 353], "sever": [67, 68, 69, 106, 140], "plane": [67, 68, 69, 106, 140, 396], "2d": [67, 68, 69, 84, 140, 219, 368, 382], "input_length": 67, "weight_tensor": [67, 68, 69, 106, 263, 264, 396], "bias_tensor": [67, 68, 69, 106, 396], "batch_siz": [67, 68, 69, 89, 140, 222, 261, 262, 263, 264, 357, 360, 376, 393, 394, 395, 396], "length": [67, 260, 358, 359], "kernel_s": [67, 68, 69, 222, 261, 262, 263, 264, 396], "convolv": [67, 68, 69, 222, 261, 262, 263, 264], "cross": [67, 68, 69, 261, 262, 263, 264], "correl": [67, 68, 69, 261, 262, 263, 264, 377], "side": [67, 68, 69, 261, 262, 263, 264, 381, 391, 392, 393, 394, 395, 396], "pad_length": 67, "pad_left": [67, 68, 69, 261, 262, 263, 264], "pad_right": [67, 68, 69, 261, 262, 263, 264], "connect": [67, 68, 69, 261, 262, 263, 264], "conv_config": [67, 68, 69, 261, 262, 263, 264, 396], "compute_config": [67, 68, 69, 261, 262, 263, 264], "devicecomputekernelconfig": [67, 68, 69, 106, 111, 174, 187, 219, 261, 262, 263, 264, 292, 318, 358, 359], "return_output_dim": [67, 68, 69], "return_weights_and_bia": [67, 68, 69], "bias": [67, 376, 393], "conv2d_t": 68, "inform": [68, 274, 379, 383], "tech": 68, "input_height": [68, 69, 261, 262, 263, 264, 396], "input_width": [68, 69, 261, 262, 263, 264, 396], "pad_height": [68, 69, 261, 262, 263, 264], "pad_width": [68, 69, 261, 262, 263, 264], "pad_top": [68, 69, 261, 262, 263, 264], "pad_bottom": [68, 69, 261, 262, 263, 264], "conv_transpose2d_t": 69, "transpos": [69, 111, 187, 219, 252, 360], "seen": [69, 74, 391, 392], "respect": [69, 89, 219, 382], "fraction": 69, "deconvolut": 69, "o": [69, 379, 381, 391, 392, 393, 394, 395, 397], "k_h": 69, "k_w": 69, "equat": 69, "h_out": 69, "h_in": 69, "output_pad": 69, "w_out": 69, "w_in": 69, "mirror_kernel": 69, "mirror": [69, 397], "intern": [69, 378], "been": [69, 229, 230, 339, 377, 379, 397], "cos_t": 70, "cos_bw_t": 71, "_golden_function_co": 71, "cosh_t": 72, "cosh_bw_t": 73, "coregrid": [74, 142, 187, 219, 392, 393], "corerang": 74, "strategi": [74, 85, 219, 381, 382, 395], "shardstrategi": 74, "shardorient": 74, "use_height_and_width_as_shard_shap": 74, "travers": 74, "math": [74, 381, 395], "320": 74, "pycapsul": [75, 129, 273, 350], "resourc": [75, 395], "explicitli": [75, 391], "whose": [75, 91, 351], "forc": [75, 394], "deg2rad_t": 76, "deg2rad_bw_t": 77, "_golden_function_deg2rad": 77, "degre": [77, 268], "radian": [77, 268], "digamma_t": 78, "digamma_bw_t": 79, "_golden_function_digamma": 79, "div_t": 80, "_golden_function_div": 80, "begin": [80, 165, 241, 381], "text": [80, 165, 241, 249, 377], "_mode": 80, "accurate_mod": 80, "non": [80, 219, 222, 243, 259, 274, 295], "div_bw_t": 81, "pcc": [81, 156, 177, 270, 377, 380], "degrad": [81, 156, 177, 270], "div_no_nan_t": 82, "_golden_function_div_no_nan": 82, "div_no_nan_bw_t": 83, "denomin": [83, 269], "downsample_t": 84, "form": [84, 368], "downsample_param": 84, "dump": [85, 229, 394, 397, 398], "file_nam": [85, 188, 397, 398], "dict": [85, 229, 230, 397], "save": [85, 395, 397], "elu_t": 86, "_golden_function_elu": 86, "elu_bw_t": 87, "embedding_t": 88, "retriev": 88, "word": 88, "padding_idx": 88, "token": [88, 172, 359, 395], "embeddings_typ": 88, "embeddingstyp": 88, "106445": 88, "988281": 88, "59375": 88, "212891": 88, "964844": 88, "199219": 88, "996094": 88, "78362e": 88, "38": [88, 382, 395], "89785e": 88, "39": [88, 391, 392, 393, 394, 395, 396, 397], "04479e": 88, "25815e": 88, "71833e": 88, "59995e": 88, "60398e": 88, "83671e": 88, "22242e": 88, "88263e": 88, "35917e": 88, "49994e": 88, "embedding_backward": 89, "embedding_bw_t": 89, "extract": 89, "vocabulari": 89, "output_gradient_tensor": 89, "seq_len": [89, 111], "embedding_dim": 89, "num_embed": 89, "1024": [89, 392], "4096": 89, "3200": 89, "input_shap": [89, 222, 396], "input_index": 89, "randint": [89, 394], "weights_shap": 89, "weights_ttnn": 89, "grad_shap": 89, "grad_data": 89, "empty_t": 90, "uniniti": [90, 91], "bfloat_8": 90, "21": [90, 395, 397], "67": 90, "empty_like_t": 91, "desir": [91, 108, 117, 118, 125, 126, 130, 351, 352, 353], "87": 91, "45": [91, 340, 341, 395], "22": [91, 379, 395], "60": [91, 395], "75": [91, 129], "25": [91, 351, 381, 395, 397], "eq_t": 92, "eq__t": 93, "_golden_function_eq_": 93, "input_a": [93, 135, 144, 162, 179, 215, 220, 224, 225, 238, 331, 336, 369], "input_b": [93, 135, 144, 162, 179, 215, 238], "eqz_t": 94, "_tensor_i": [94, 139, 145, 184, 205, 216, 242], "erf_t": 95, "fast_and_approximate_mod": [95, 97, 101, 137, 297, 305], "fast": [95, 97, 101, 137, 297, 305], "erf_bw_t": 96, "_golden_function_erf": 96, "erfc_t": 97, "erfc_bw_t": 98, "erfinv_t": 99, "erfinv_bw_t": 100, "_golden_function_erfinv": 100, "exp_t": 101, "exp2_t": 102, "exp2_bw_t": 103, "_golden_function_exp2": 103, "exp_bw_t": 104, "_golden_function_exp": 104, "exponenti": 104, "ccl_experiment": 105, "all_reduce_t": 105, "num_devic": [105, 276], "tt_input_tensor": [105, 276], "enumer": [105, 276], "append": [105, 276, 381, 397], "get_devic": [105, 276], "input_tensor_mesh": [105, 276], "aggregate_as_tensor": [105, 276], "conv3d_t": 106, "3d": 106, "d": [106, 395], "kd": 106, "kh": 106, "kw": 106, "c_in": 106, "c_out": 106, "conv3dconfig": 106, "cumprod_t": 107, "witth": 107, "cumul": [107, 108], "underli": 107, "ref": [107, 379], "fed": 107, "being": [107, 277, 278, 381, 382], "actual": [107, 269, 382, 391], "assert": [107, 250, 393, 398], "dtyoe": 107, "uint8": [107, 138, 159, 298, 317], "tensor_copi": 107, "cumsum_t": 108, "fundament": 108, "cast": 108, "torch_input": 108, "tensor_input": 108, "tensor_output": 108, "preallocated_output": 108, "dropout_t": 109, "seed": [109, 397], "rng": 109, "probabl": 109, "averag": [109, 140, 381, 395], "total_elem": 109, "scale": [109, 148, 150, 302, 319, 358, 359], "124": 109, "prob": 109, "gelu_bw_t": [110, 138], "_golden_function_gelu": [110, 138], "algorithm": [110, 368], "rotary_embedding_t": 111, "rotari": 111, "cos_cach": 111, "sin_cach": 111, "token_idx": 111, "head_dim": 111, "cod_cach": 111, "token_index": 111, "sort_t": 112, "ascend": 112, "descend": 112, "stabl": 112, "preserv": 112, "addit": [112, 219, 376], "info": [112, 391, 392, 393, 394, 395, 396, 397], "sorted_tensor": 112, "sorted_tensor_desc": 112, "indices_desc": 112, "input_tensor_2d": 112, "sorted_tensor_dim": 112, "indices_dim": 112, "expm1_t": 113, "expm1_bw_t": 114, "_golden_function_expm1": 114, "fill_t": 115, "_golden_function_fil": 115, "fill_valu": [115, 131, 132], "wormhole_b0": [115, 379], "fill_bw_t": 116, "fill_ones_rm_t": 117, "val_hi": [117, 118], "val_lo": [117, 118], "count": [117, 118, 381, 395], "ye": [117, 118], "hone": [117, 118], "high": [117, 118, 379, 382, 398], "region": [117, 118, 248], "wone": [117, 118], "fill_rm_t": 118, "nchw": 118, "hw": 118, "hfill": 118, "wfill": 118, "hi": 118, "lo": 118, "low": 118, "fill_zero_bw_t": 119, "_golden_function_fill_zero": 119, "floor_t": 120, "floor_bw_t": 121, "_golden_function_floor": 121, "floor_div_t": 122, "_golden_function_floor_div": 122, "fmod_t": 123, "_golden_function_fmod": 123, "fmod_bw_t": 124, "padded_shap": [125, 251], "pad_valu": [125, 130, 252, 291, 317, 349], "target_layout": [125, 126], "target_mem_config": [125, 126], "padded_tensor": 125, "output_mem_config": [125, 126, 395], "unpadded_tensor": 126, "frac_t": 127, "_golden_function_frac": [127, 128], "frac_bw_t": 128, "tensor_on_devic": [129, 350], "tensor_on_host": [129, 350], "365234": 129, "130859": 129, "itself": 130, "twice": [130, 381], "purpos": [130, 377, 380, 382], "mapper": 130, "cq_id": [130, 339, 353], "full_t": 131, "_golden_function_ful": 131, "filled_tensor": [131, 132], "full_like_t": 132, "templat": [132, 247, 375, 381], "gcd_t": 133, "_golden_function_gcd": 133, "greatest": 133, "2147483648": 133, "tensorint32default": [133, 175], "ge_t": 134, "ge__t": 135, "_golden_function_ge_": 135, "geglu_t": 136, "_golden_function_geglu": 136, "gelu_t": 137, "gez_t": 139, "global_avg_pool2d_t": 140, "golden_global_avg_pool2d": 140, "adapt": 140, "glu_t": 141, "_golden_function_glu": 141, "group_norm_t": 142, "_postprocess_golden_function_output": [142, 250], "num_group": 142, "input_mask": 142, "inplac": [142, 204, 206, 208, 210, 396], "gt_t": 143, "gt__t": 144, "_golden_function_gt_": 144, "gtz_t": 145, "hardshrink_t": 146, "_golden_function_hardshrink": 146, "lambd": [146, 147, 321, 322], "hardshrink_bw_t": 147, "hardsigmoid_t": 148, "shift": [148, 150], "16666667": [148, 150], "hardsigmoid_bw_t": 149, "_golden_function_hardsigmoid": 149, "hardswish_t": 150, "hardswish_bw_t": 151, "_golden_function_hardswish": 151, "hardtanh_t": 152, "_golden_function_hardtanh": 152, "min_val": 152, "max_val": 152, "hardtanh_bw_t": 153, "heaviside_t": 154, "_golden_function_heavisid": 154, "hypot_t": 155, "_golden_function_hypot": 155, "hypot_bw_t": 156, "i0_t": 157, "i0_bw_t": 158, "_golden_function_i0": 158, "identity_t": 159, "sfpu": 159, "shouldn": 159, "instead": [159, 285, 391, 393, 397], "lower": [159, 250, 379], "float16": [159, 391], "imag_t": 160, "imag_bw_t": 161, "imaginari": 161, "indexed_fill_t": 162, "replac": [162, 346], "denot": 162, "batch_id": 162, "is_imag_t": 163, "is_real_t": 164, "isclose_t": 165, "_golden_function_isclos": 165, "leq": 165, "atol": 165, "rtol": 165, "otherwis": [165, 265, 339, 354, 393, 398], "rel": 165, "toler": 165, "05f": 165, "absolut": [165, 173], "08f": 165, "equal_nan": 165, "nan": [165, 395], "treat": [165, 219], "isfinite_t": 166, "isinf_t": 167, "isnan_t": 168, "isneginf_t": 169, "isposinf_t": 170, "fill_cache_for_user__t": 171, "popul": [171, 229, 381], "batch_index": 171, "update_cache_for_token__t": 172, "update_index": 172, "batch_offset": 172, "l1_loss_t": 173, "_golden_function_l1_loss": 173, "input_refer": [173, 232], "input_predict": [173, 232], "layer_norm_t": 174, "residual_input_tensor": [174, 292], "program_config": [174, 187, 219, 292, 355, 356, 358, 359], "programconfig": [174, 292], "lcm_t": 175, "_golden_function_lcm": 175, "least": [175, 219, 381], "32767": 175, "32768": 175, "ldexp_t": 176, "ldexp_bw_t": 177, "80": [177, 379], "outsid": 177, "le_t": 178, "le__t": 179, "_golden_function_le_": 179, "leaky_relu_t": 180, "_golden_function_leaky_relu": 180, "negative_slop": [180, 181], "slope": 180, "leaki": 180, "leaky_relu_bw_t": 181, "01": 181, "lerp_t": 182, "_golden_function_lerp": 182, "point": [182, 319, 381, 382], "interpol": 182, "lerp_bw_t": 183, "lez_t": 184, "lgamma_t": 185, "lgamma_bw_t": 186, "_golden_function_lgamma": 186, "linear_t": 187, "behaviour": [187, 219], "transpose_a": [187, 219], "transpose_b": [187, 219], "matmulprogramconfig": [187, 219], "output_til": [187, 219], "128": [187, 219, 398], "log_t": 189, "log10_t": 190, "whb0": [190, 194, 287], "log10_bw_t": 191, "log1p_t": 192, "1e7": 192, "log1p_bw_t": 193, "log2_t": 194, "log2_bw_t": 195, "log_bw_t": 196, "_golden_function_log": 196, "logarithm": [196, 235], "log_sigmoid_t": 197, "log_sigmoid_bw_t": 198, "_golden_function_log_sigmoid": 198, "logaddexp_t": 199, "logaddexp2_t": 200, "logaddexp2_bw_t": 201, "logaddexp_bw_t": 202, "logical_and_t": 203, "_golden_function_logical_and": 203, "AND": [203, 204], "use_legaci": 203, "logical_and__t": 204, "logical_not_t": 205, "logical_not__t": 206, "_golden_function_logical_not_": 206, "logical_or_t": 207, "_golden_function_logical_or": 207, "OR": [207, 208, 291], "logical_or__t": 208, "logical_xor_t": 209, "_golden_function_logical_xor": 209, "land": [209, 210], "lnot": [209, 210], "lor": [209, 210], "logical_xor__t": 210, "xor": 210, "logit_t": 211, "_golden_function_logit": [211, 212], "logit_bw_t": 212, "logiteps_bw_t": 213, "logitep": 213, "lt_t": 214, "lt__t": 215, "_golden_function_lt_": 215, "ltz_t": 216, "mac_t": 217, "_golden_function_mac": 217, "context": [218, 277, 278], "exit": 218, "occur": 218, "matmul_t": 219, "dimension": [219, 235, 382, 391], "dot": [219, 358, 359], "although": 219, "combin": 219, "most": [219, 391], "variou": 219, "align": [219, 379, 381], "appropri": [219, 377, 379], "abov": [219, 379], "criteria": 219, "messag": [219, 381], "unexpect": 219, "obviou": [219, 391], "except": [219, 391, 393, 395], "These": [219, 377, 379, 383, 398], "scenario": [219, 382], "relat": 219, "swap": 219, "j": 219, "implicitli": 219, "extend": 219, "patch": 219, "leverag": 219, "accord": [219, 252, 288, 379], "look": [219, 354, 377, 378, 382, 395, 397], "n_size": 219, "m_size": 219, "k_size": 219, "p": [219, 382], "though": 219, "constraint": [219, 382, 391], "chosen": [219, 381, 397], "carefulli": 219, "fix": 219, "problem": 219, "max_t": 220, "max_bw_t": 221, "max_pool2d_t": 222, "golden_maxpool2d": 222, "window": 222, "nhw": 222, "scheme": [222, 261, 262, 263, 264], "input_h": 222, "input_w": 222, "ceil_mod": 222, "applied_shard_schem": 222, "createdevic": [222, 396], "l1_small_siz": [222, 248, 393, 394, 396], "8192": [222, 393, 394], "kernel_h": 222, "kernel_w": 222, "stride_h": 222, "stride_w": 222, "pad_h": 222, "pad_w": 222, "dilation_h": 222, "dilation_w": 222, "nchw_shape": 222, "40": [222, 395], "in_n": 222, "in_c": 222, "in_h": 222, "in_w": 222, "input_perm": 222, "input_reshap": 222, "tt_input": 222, "tt_input_dev": 222, "tt_output": 222, "in_place_halo": 222, "maximum_t": 223, "_golden_function_maximum": 223, "mean_t": 224, "min_t": 225, "min_bw_t": 226, "minimum_t": 227, "_golden_function_minimum": 227, "mish_t": 228, "20": [228, 250, 319, 320, 381, 395, 397], "initialize_model": [229, 230, 376, 394, 396], "model_nam": [229, 230, 376, 394, 395, 396], "convert_to_ttnn": [229, 230, 376], "custom_preprocessor": [229, 230, 376, 394, 396], "parameterdict": [229, 230], "prefix": [229, 230], "run_model": [229, 396], "reader_patterns_cach": 229, "disabl": [229, 230, 391, 392, 393, 394, 395, 396, 398], "doesn": [229, 230, 391], "invalid": [229, 230], "preprocessor": [229, 230], "put": [229, 230, 376, 391, 393, 396], "submodul": [229, 230, 379], "appear": [229, 230, 379], "ttnn_module_arg": [229, 396], "tmp": [229, 391, 392, 393, 394, 396, 397], "model_graph": 229, "svg": [229, 396, 397, 398], "avoid": [229, 319, 381, 382], "recomput": 229, "moreh_sum_t": 231, "mse_loss_t": 232, "_golden_function_mse_loss": 232, "mul_bw_t": 233, "multigammaln_t": 234, "multigammaln_bw_t": 235, "_golden_function_mvlgamma": 235, "multivari": 235, "mvlgamma": 235, "5f": 235, "multiply_t": 236, "ne_t": 237, "ne__t": 238, "_golden_function_ne_": 238, "neg_t": 239, "neg_bw_t": 240, "_golden_function_neg": 240, "nextafter_t": 241, "_golden_function_nextaft": 241, "_float": 241, "neq": 241, "nez_t": 242, "nonzero_t": 243, "well": [243, 380], "normalize_global_t": 244, "_golden_function_normalize_glob": 244, "normalize_hw_t": 245, "_golden_function_normalize_hw": 245, "ones_t": 246, "ones_like_t": 247, "trace_region_s": 248, "dispatch_core_config": [248, 393, 394], "dispatchcoreconfig": [248, 393, 394], "0x7f534f7ceef0": 248, "worker_l1_s": 248, "small": [248, 395], "default_l1_small_s": 248, "default_trace_region_s": 248, "allocat": 248, "dispatch_core_typ": [248, 393, 394], "dispatchcoretyp": [248, 393, 394], "dispatch": [248, 381], "0x7fbac5bfc1b0": 248, "outer_t": 249, "_golden_function_out": 249, "otim": 249, "pad_t": 250, "_preprocess_golden_function_input": 250, "locat": [250, 378, 381, 395, 398], "mutual": 250, "output_tensor_shap": [250, 349], "input_tensor_start": 250, "union": 250, "use_multicor": [250, 348, 349, 366, 367], "pad_input": 250, "unpadded_shap": 251, "annot": [251, 377], "fixeds": 251, "permute_t": 252, "nullopt": [252, 354, 396], "tthe": 252, "broken": 252, "garbag": 252, "polar_t": 253, "cartesian": 253, "theta": 253, "polar_bw_t": 254, "polygamma_t": 255, "_golden_function_polygamma": 255, "decim": [255, 293], "k": [255, 354, 358, 359, 392], "polygamma_bw_t": 256, "polyval_t": 257, "_golden_function_polyv": 257, "coeffici": [257, 377], "coeff": 257, "sum_": 257, "polynomi": 257, "pow_t": 258, "_golden_function_pow": 258, "expon": [258, 259, 295, 296, 354, 382], "pow_bw_t": 259, "power": [259, 365], "prelu_t": 260, "_golden_function_prelu": 260, "arrai": 260, "suitabl": [261, 262, 263, 264], "invoc": [261, 262, 263, 264], "exact": [261, 262, 263, 264, 382, 393], "input_memory_config": [261, 262, 263, 264], "input_layout": [261, 262, 263, 264], "convtranspose2d": [262, 263], "conv_tranpose2d": 263, "weights_format": [263, 264], "iohw": 263, "has_bia": [263, 264], "term": [263, 264, 380], "oihw": 264, "prod_t": 265, "similar": [265, 381, 391, 393], "squeez": [265, 353, 391, 392, 393, 394, 396], "output_all_dim": 265, "prod_bw_t": 266, "particular": [266, 376, 379, 391, 398], "taken": 266, "all_dims_output": 266, "rad2deg_t": 267, "rad2deg_bw_t": 268, "_golden_function_rad2deg": 268, "rdiv_t": 269, "_golden_function_rdiv": 269, "numer": [269, 319, 378, 382], "rounding_mod": 269, "rdiv_bw_t": 270, "real_t": 271, "real_bw_t": 272, "new_tensor": 273, "my_memory_config": 273, "reciprocal_t": 274, "inaccur": [274, 382], "characterist": 274, "fp": 274, "reciprocal_bw_t": 275, "_golden_function_reciproc": 275, "reduce_scatter_t": 276, "reduce0scatt": 276, "reglu_t": 279, "_golden_function_reglu": 279, "relu_t": 280, "relu6_t": 281, "relu6_bw_t": 282, "_golden_function_relu6": 282, "relu_bw_t": 283, "_golden_function_relu": 283, "relu_max_t": 284, "_golden_function_relu_max": 284, "upper_limit": 284, "cap": 284, "relu_min_t": 285, "_golden_function_relu_min": 285, "lower_limit": 285, "remainder_t": 286, "_golden_function_remaind": 286, "modulu": 286, "remainder_bw_t": 287, "repeat_t": 288, "repetit": [288, 290], "repetition_vector": 288, "smallvector": 288, "repeat_bw_t": 289, "repeat_interleave_t": 290, "he": 290, "expand": [290, 382], "torch_input_tensor": [290, 396, 398], "torch_result": 290, "reshape_t": 291, "cost": 291, "view": [291, 398], "new_shap": 291, "kwtype": 291, "rms_norm_t": 292, "round_t": 293, "_golden_function_round": [293, 294], "No": 293, "round_bw_t": 294, "rpow_t": 295, "_golden_function_rpow": 295, "upto": 295, "28": [295, 395, 397], "posit": [295, 359], "rpow_bw_t": 296, "rsqrt_t": 297, "rsqrt_bw_t": 298, "_golden_function_rsqrt": 298, "rsub_t": 299, "_golden_function_rsub": 299, "rsub_bw_t": 300, "subract": 300, "revers": 300, "scatter_t": 301, "_golden_function_scatt": 301, "selu_t": 302, "_golden_function_selu": [302, 303], "0507": 302, "67326": 302, "selu_bw_t": 303, "modifi": [304, 319, 391], "short": [304, 395, 398], "sigmoid_t": 305, "vector_mod": 305, "better": [305, 342], "rc": [305, 379], "sigmoid_accurate_t": 306, "sigmoid_bw_t": 307, "_golden_function_sigmoid": 307, "sign_t": 308, "sign_bw_t": 309, "signbit_t": 310, "silu_t": 311, "silu_bw_t": 312, "_golden_function_silu": 312, "sin_t": 313, "sin_bw_t": 314, "sinh_t": 315, "sinh_bw_t": 316, "slice_t": 317, "slice_start": 317, "input_tensor_shap": 317, "slice_end": 317, "slice_step": 317, "unmodifi": 317, "undefin": 317, "softmax_t": 318, "0310059": 318, "softplus_t": 319, "By": [319, 380, 392], "steep": 319, "higher": [319, 379, 381, 382], "steeper": 319, "approach": [319, 376, 380, 398], "hard": [319, 391], "stabil": [319, 380], "veri": [319, 381, 391, 393], "softplus_bw_t": 320, "softshrink_t": 321, "_golden_function_softshrink": 321, "softshrink_bw_t": 322, "softsign_t": 323, "softsign_bw_t": 324, "sqrt_t": 325, "sqrt_bw_t": 326, "_golden_function_sqrt": 326, "square_t": 327, "square_bw_t": 328, "_golden_function_squar": 328, "squared_difference_t": 329, "_golden_function_squared_differ": 329, "squared_difference_bw_t": 330, "std_t": 331, "sub_bw_t": 332, "subalpha_t": 333, "_golden_function_subalpha": 333, "subalpha_bw_t": 334, "subtract_t": 335, "sum_t": 336, "swiglu_t": 337, "_golden_function_swiglu": 337, "swish_t": 338, "queueid": 339, "sub_device_id": 339, "subdeviceid": 339, "synchron": [339, 398], "wait": [339, 381], "complet": 339, "associ": 339, "ran": [339, 381, 393], "chip": 339, "set_sub_device_stall_group": 339, "queu": 339, "tan_t": 340, "tan_bw_t": 341, "_golden_function_tan": 341, "tanh_t": 342, "accuraci": [342, 377], "tanh_bw_t": 343, "_golden_function_tanh": 343, "tanhshrink_t": 344, "_golden_function_tanhshrink": [344, 345], "tanhshrink_bw_t": 345, "threshold_t": 346, "_golden_function_threshold": [346, 347], "threshold_bw_t": 347, "tilize_t": 348, "_nop_golden_funct": 348, "acceler": [348, 349, 366, 367, 392, 395], "tilize_with_val_padding_t": 349, "800781": 350, "455078": 350, "585938": 350, "to_layout_t": 351, "organ": [351, 377, 382], "becom": 351, "thread": [351, 395, 398], "42188": 351, "398438": 351, "to_memory_config_t": 352, "torch_rank": [353, 398], "Will": 353, "reach": 353, "mesh_compos": 353, "meshtotensor": 353, "torch_tensor": [353, 391], "3008": 353, "8438": 353, "3242": 353, "9023": 353, "5820": 353, "5312": 353, "topk_t": 354, "_create_golden_function_topk": 354, "largest": [354, 382], "smallest": 354, "sure": [354, 379, 383, 398], "bfloat8": 354, "caus": [354, 382], "down": 354, "top": [354, 383], "attention_softmax_t": 355, "head_siz": [355, 356, 357, 360, 393], "attention_mask": [355, 356, 393], "mask": [355, 356, 359], "softmaxprogramconfig": [355, 356], "softmaxdefaultprogramconfig": [355, 356], "causal_mask": [355, 356], "causal": [355, 356, 358], "attention_softmax__t": 356, "concatenate_heads_t": 357, "num_head": [357, 360, 393], "sequence_s": [357, 360, 376, 393, 394, 395], "scaled_dot_product_attention_t": 358, "mimick": 358, "flashattent": 358, "accept": [358, 359, 377, 380], "sdpaprogramconfig": [358, 359], "q": [358, 359], "parallel": [358, 359, 381, 395], "nqh": 358, "input_tensor_q": [358, 359], "dh": [358, 359], "input_tensor_k": [358, 359], "nkv": [358, 359], "input_tensor_v": [358, 359], "attn_mask": [358, 359], "impli": 358, "is_caus": [358, 359], "scaled_dot_product_attention_decode_t": 359, "decod": [359, 397], "mqa": 359, "sdpamulticoreprogramconfig": 359, "nh": 359, "cur_po": 359, "cur_pos_tensor": 359, "pnh": 359, "skip": [359, 391, 392, 393, 394, 395, 396, 397], "split_query_key_value_and_split_heads_t": 360, "hidden_s": [360, 376, 393, 394], "Then": [360, 376, 379], "score": [360, 395], "kv_input_tensor": 360, "q1": 360, "k1": 360, "v1": [360, 379], "qn": 360, "kn": 360, "vn": 360, "cat": [360, 393, 397], "num_kv_head": 360, "contigu": [360, 391], "transpose_kei": 360, "num": 360, "tril_t": 361, "diagon": [361, 362], "triu_t": 362, "trunc_t": 363, "_golden_function_trunc": [363, 364], "trunc_bw_t": 364, "unary_chain_t": 365, "ops_chain": 365, "unarywithparam": 365, "chain": 365, "unaryoptyp": 365, "untilize_t": 366, "use_pack_until": [366, 367], "sub_core_grid": 366, "corerangeset": 366, "untilize_with_unpadding_t": 367, "output_tensor_end": 367, "upsample_t": 368, "nearest": 368, "scale_factor": 368, "array2d": 368, "var_t": 369, "where_t": 370, "_golden_function_wher": 370, "where_bw_t": 371, "xlogy_t": 372, "_golden_function_xlogi": 372, "cdot": 372, "xlogy_bw_t": 373, "zeros_t": 374, "zeros_like_t": 375, "basi": 376, "rewritten": 376, "bert": [376, 394, 395], "modeling_bert": [376, 394], "bertintermedi": 376, "__init__": [376, 396], "super": [376, 396], "dens": 376, "intermediate_s": 376, "forward": [376, 396], "hidden_st": [376, 393, 394], "tdd": 376, "torch_bert": 376, "utility_funct": 376, "torch_random": 376, "utils_for_test": 376, "assert_with_pcc": 376, "mark": [376, 377], "parametr": 376, "phiyodr": [376, 394], "finetun": [376, 394], "squad2": [376, 394], "384": [376, 393, 394], "test_bert_intermedi": 376, "manual_se": [376, 391, 392, 393, 396, 397, 398], "bertconfig": [376, 394], "from_pretrain": [376, 394, 397], "eval": [376, 394, 395, 396, 397], "torch_hidden_st": [376, 393], "torch_output": [376, 393], "bert_intermedi": 376, "9999": [376, 391, 392, 393, 394, 396, 398], "dictionari": 376, "turn": 376, "ttnn_bert": [376, 394], "999": 376, "someth": 376, "ttnn_optimized_bert": [376, 394], "isinst": 376, "preprocess_linear_weight": [376, 393], "preprocess_linear_bia": [376, 393], "ff1_weight": 376, "ff1_bia": 376, "best": [376, 391], "integr": [376, 377], "incredibli": 377, "excit": 377, "exploratori": 377, "freedom": 377, "showcas": 377, "few": [377, 382, 391], "question": 377, "answer": 377, "see": [377, 378, 380, 391, 395, 397], "highlight": [377, 382], "successfulli": [377, 383, 395, 397], "migrat": [377, 391, 392, 393, 394, 396, 398], "good": 377, "documen": 377, "describ": 377, "credit": 377, "author": 377, "might": [377, 392], "encount": 377, "demonstr": [377, 381], "adequ": 377, "achiev": [377, 380], "pearson": 377, "ci": 377, "pipelin": [377, 381], "unit": 377, "metric": 377, "meet": 377, "continu": [377, 379, 380], "upon": 377, "everi": [377, 381, 393, 398], "commit": [377, 395], "ongo": 377, "complianc": 377, "catch": 377, "regress": 377, "earli": 377, "collect": [377, 381, 383, 395], "varieti": 377, "measur": 377, "special": [377, 382], "run_device_perf_model": 377, "models_device_performance_bare_met": 377, "schedul": 377, "clear": [377, 380, 391, 392, 393, 394, 395, 396], "incorpor": 377, "autom": 377, "extern": [377, 380, 382], "servic": 377, "impact": 377, "run_perf_models_oth": 377, "run_perf_models_llm_javelin": 377, "run_perf_models_cnn_javelin": 377, "models_performance_bare_met": 377, "run_demos_single_card_n150_test": 377, "run_demos_single_card_n300_test": 377, "run_t3000_demo_test": 377, "test_ttnn_functional_resnet50": 377, "resnet50testinfra": 377, "setup": [377, 378, 379, 395, 397], "friendli": 378, "ml": 378, "workload": 378, "choic": [378, 379, 391], "learn": [378, 382, 392, 395], "dive": 378, "deeper": 378, "jupyt": [378, 383, 395], "notebook": [378, 383, 395, 397], "through": [379, 397], "softwar": [379, 383, 391, 392, 393, 394, 396], "packag": [379, 394, 395, 397], "asset": 379, "tag": 379, "compat": [379, 384, 387, 388], "galaxi": 379, "4u": 379, "ubuntu": [379, 391, 392, 393, 394, 395, 396, 397], "04": [379, 397], "33": [379, 392, 395], "fw_pack": 379, "v2": 379, "6u": 379, "17": [379, 393, 394, 395, 396, 397], "v80": 379, "v3": 379, "t3000": 379, "blackhol": 379, "18": [379, 391, 392, 393, 394, 395, 397], "wget": 379, "raw": [379, 397], "githubusercont": 379, "install_depend": 379, "sfpi": 379, "chmod": 379, "sudo": [379, 381], "dkm": 379, "debian": 379, "apt": 379, "fedora": 379, "dnf": 379, "enterpris": 379, "linux": [379, 395], "epel": 379, "cd": [379, 381, 395], "modprob": 379, "visit": 379, "pip": [379, 395, 397], "fw_tag": 379, "fwbundl": 379, "t300": 379, "fw": [379, 381, 391, 392, 393, 394, 396], "tar": 379, "correctli": 379, "telemetri": 379, "Be": [379, 383], "loudbox": 379, "quietbox": 379, "closer": 379, "quickest": 379, "ai": [379, 391, 392, 393, 394, 395, 396], "quick": 379, "who": [379, 382], "recurs": 379, "build_met": [379, 381, 395], "box": 379, "doxygen": 379, "registri": 379, "pull": [379, 380], "ghcr": 379, "io": [379, 381], "amd64": 379, "rm": 379, "dev": [379, 395], "hugepag": [379, 391, 392, 393, 394, 395, 396], "1g": 379, "bash": [379, 395], "navig": 379, "architectur": [379, 384, 387, 388, 398], "wheel_fil": 379, "whl": [379, 395, 397], "governor": 379, "txt": [379, 395], "cpufrequtil": 379, "cpupow": 379, "frequenc": 379, "arch_nam": [379, 393, 394], "tt_metal_hom": [379, 381, 395], "python3": [379, 394, 395, 397], "m": [379, 392], "run_op_on_devic": 379, "intend": 380, "reliabl": 380, "while": 380, "simultan": 380, "fine": 380, "tune": 380, "themselv": [380, 382], "goal": 380, "ask": 380, "driven": 380, "popular": 380, "kent": 380, "beck": 380, "benefit": 380, "submit": 380, "label": [380, 382], "fulli": [380, 381], "fallback": 380, "branch": 380, "brief": 380, "4730": 380, "rst": 380, "referenc": [380, 395], "sweep": 380, "codeown": 380, "pr": 380, "reflect": 380, "comment": 380, "test_perf_resnet": 381, "test_perf_bare_met": 381, "0185": 381, "finish": [381, 395], "consol": 381, "shorter": 381, "cli": 381, "explain": 381, "reset": 381, "tt_smi": 381, "tensix_reset": 381, "tensix": 381, "skew": 381, "timer": 381, "reboot": 381, "machin": [381, 383, 397], "wh": 381, "layer": [381, 396], "analyz": 381, "1000": [381, 396, 397], "fixtur": 381, "ttl": 381, "dumpdeviceprofil": 381, "total": 381, "drop": 381, "around": 381, "120": [381, 395], "eighth": 381, "receiv": 381, "warn": [381, 391, 392, 393, 394, 395, 396], "mention": 381, "risc": 381, "those": 381, "analysi": 381, "affect": 381, "flow": 381, "python_fallback": [381, 395], "tt_dnn_cpu": 381, "tt_dnn_devic": [381, 395], "global": [381, 395], "fidel": [381, 395], "field": 381, "lofi": [381, 396], "hifi2": 381, "hifi3": 381, "clock": 381, "stamp": 381, "durat": [381, 393, 395, 398], "nanosecond": 381, "end_t": 381, "start_t": 381, "cycl": 381, "earliest": 381, "core_frequ": 381, "marker": 381, "brisc": 381, "ncrisc": 381, "trisc0": 381, "trisc1": 381, "trisc2": 381, "cb": 381, "front": [381, 397], "spent": 381, "cb_wait_front": 381, "reserv": 381, "cb_reserve_back": 381, "datamov": 381, "input_0_memori": 381, "z": [381, 397], "channels_last": 381, "dev_0_dram": 381, "dec_0_l1": 381, "tgz": 381, "filenam": [381, 397], "item": [381, 395], "aggreg": 381, "timestamp": 381, "4x4": 382, "32x32": 382, "still": 382, "transit": 382, "2x2": 382, "illustr": 382, "byte": 382, "That": [382, 392], "sizeof": 382, "introduc": 382, "behavior": 382, "observ": 382, "magnitud": [382, 393], "flush": 382, "instabl": 382, "extrem": 382, "infin": 382, "domin": 382, "lose": 382, "precis": 382, "7014118346046923e": 382, "dataset": [382, 395], "frequent": 382, "occurr": 382, "uniform": 382, "deal": 382, "critic": 382, "homogen": 382, "unsuit": 382, "inher": 382, "owned_host_storag": 382, "borrowed_host_storag": 382, "numpi": [382, 395, 397], "device_storag": 382, "abstract": 382, "awai": 382, "compress": 382, "upper": 382, "remain": 382, "128x128": 382, "subset": 382, "know": 382, "understand": 382, "unshard": 382, "coordin": 382, "physic": 382, "certain": 383, "ramp": 383, "skillset": 383, "tree": 383, "launch": 383, "lab": 383, "port": 383, "8888": 383, "hint": 383, "cell": 383, "bottom": 383, "central": 391, "sens": 391, "sram": 391, "concept": 391, "2024": [391, 392, 393, 394, 395, 396, 397, 398], "07": [391, 392, 393, 394, 396], "48": [391, 394, 395], "818": 391, "136": [391, 392, 393, 394], "cache_path": [391, 392, 393, 394, 396], "posixpath": [391, 392, 393, 394], "home": [391, 392, 393, 394, 395, 396, 397], "comparison_mode_pcc": [391, 392, 393, 394, 396, 398], "enable_comparison_mod": [391, 392, 393, 394, 396, 398], "enable_detailed_buffer_report": [391, 392, 393, 394, 396, 398], "enable_detailed_tensor_report": [391, 392, 393, 394, 396, 398], "enable_fast_runtime_mod": [391, 392, 393, 394, 396, 398], "enable_graph_report": [391, 392, 393, 394, 396, 398], "enable_log": [391, 392, 393, 394, 396, 398], "enable_model_cach": [391, 392, 393, 394, 396], "model_cache_path": [391, 392, 393, 394, 396], "report_nam": [391, 392, 393, 394, 396, 398], "root_report_path": [391, 392, 393, 394, 396], "throw_exception_on_fallback": [391, 392, 393, 394, 396], "tmp_dir": [391, 392, 393, 394, 396, 397], "905": 391, "operation_decor": [391, 392, 393, 394, 396], "758": [391, 392, 393, 394], "906": 391, "907": [391, 393], "908": [391, 393], "909": [391, 393], "910": [391, 393], "911": [391, 393], "914": [391, 393], "915": [391, 393], "pearson_correlation_coeffici": [391, 392, 393, 394, 396], "919": [391, 393], "920": 391, "921": [391, 393], "unsqueeze_to_4d": [391, 392, 393, 394, 396], "922": [391, 393], "923": [391, 393], "924": [391, 393], "925": [391, 393], "926": [391, 393], "allocate_tensor_on_devic": [391, 392, 393, 394, 396], "copy_host_to_device_tensor": [391, 392, 393, 394, 396], "927": [391, 393], "928": [391, 393], "929": [391, 393], "930": [391, 393], "931": [391, 393], "934": [391, 393], "935": 391, "936": [391, 393, 394], "937": 391, "938": [391, 393], "941": [391, 393], "942": [391, 393], "943": [391, 393], "948": [391, 393], "949": [391, 393, 394], "950": [391, 393], "951": [391, 393, 394], "952": [391, 393], "953": [391, 393], "954": [391, 393], "955": [391, 393], "958": [391, 393], "959": 391, "960": [391, 393, 394], "f": [391, 392, 393, 395, 397, 398], "As": [391, 392], "1234": 391, "again": 391, "action": 391, "98300": 391, "11301": 391, "37592": 391, "64318": 391, "53437": 391, "59434": 391, "69190": 391, "04268": 391, "33346": 391, "20231": 391, "15127": 391, "58303": 391, "pick": 391, "80078": 391, "69531": 391, "71484": 391, "33398": 391, "60156": 391, "36523": 391, "73047": 391, "90625": 391, "59766": 391, "83203": 391, "61719": 391, "53516": 391, "effici": [391, 392], "transfer": 391, "intuit": 391, "nshape": 391, "nlayout": 391, "21680": 391, "24316": 391, "19336": 391, "40625": 391, "81641": 391, "50781": 391, "09961": 391, "54688": 391, "70703": 391, "93359": 391, "06787": 391, "75781": 391, "insert": 391, "cale": 391, "handl": 391, "49": [391, 395, 397], "027": [391, 392], "silicondriv": [391, 392, 393, 394, 395, 396], "detect": [391, 392, 393, 394, 395, 396], "pci": [391, 392, 393, 394, 395, 396], "040": 391, "init_detect_tt_device_numanod": [391, 392, 393, 394, 395, 396], "could": [391, 392, 393, 394, 395, 396], "numanodeset": [391, 392, 393, 394, 395, 396], "pci_bus_id": [391, 392, 393, 394, 395, 396], "0000": [391, 392, 393, 394, 395, 396], "00": [391, 392, 393, 394, 395, 396, 397], "041": 391, "bind_area_memory_nodeset": [391, 392, 393, 394, 395, 396], "unabl": [391, 392, 393, 394, 395, 396], "numanod": [391, 392, 393, 394, 395, 396], "membind": [391, 392, 393, 394, 395, 396], "ttsilicondevic": [391, 392, 393, 394, 395, 396], "init_hugepag": [391, 392, 393, 394, 395, 396], "bind_area_to_memory_nodeset": [391, 392, 393, 394, 395, 396], "fail": [391, 392, 393, 394, 395, 396], "ch": [391, 392, 393, 394, 395, 396], "effect": [391, 392, 393, 394, 395, 396], "decreas": [391, 392, 393, 394, 395, 396], "893": [391, 392, 393, 394, 395, 396], "082": 391, "ethernet": [391, 392, 393, 394, 396], "NOT": [391, 392, 393, 394, 396], "clk": [391, 392, 393, 394, 395, 396], "800": [391, 392, 393, 394], "mhz": [391, 392, 393, 394, 395, 396], "torch_input_tensor_a": [391, 398], "torch_input_tensor_b": [391, 398], "therefor": [391, 393], "stai": 391, "unless": [391, 398], "explicit": 391, "figur": 391, "hang": 391, "properli": 391, "41": [392, 395], "903": 392, "989": [392, 393], "990": [392, 393], "991": 392, "992": 392, "993": 392, "994": 392, "995": 392, "996": 392, "001": 392, "002": 392, "003": 392, "004": 392, "005": 392, "006": 392, "007": 392, "008": 392, "009": 392, "010": 392, "011": 392, "012": 392, "013": 392, "015": 392, "016": 392, "017": 392, "018": 392, "020": 392, "021": 392, "022": 392, "028": 392, "029": 392, "030": 392, "031": 392, "032": 392, "033": 392, "035": 392, "036": 392, "037": 392, "053": 392, "066": 392, "067": 392, "094": 392, "repeatedli": 392, "enable_program_cach": [392, 393, 398], "torch_a": 392, "torch_b": 392, "longer": 392, "signific": 392, "aslo": 392, "why": 392, "conver": 392, "todo": 392, "75000": 392, "25000": 392, "50000": 392, "62500": 392, "effeci": 392, "enjoi": 392, "massiv": 392, "eth": [393, 394], "54": [393, 395], "821": 393, "912": 393, "939": 393, "976": 393, "55": [393, 395], "014": 393, "mul": 393, "fashion": 393, "multi_head_attent": 393, "query_weight": 393, "query_bia": 393, "key_weight": 393, "key_bia": 393, "value_weight": 393, "value_bia": 393, "output_weight": 393, "output_bia": 393, "fallback_reshap": 393, "get_fallback_funct": [393, 398], "attention_scor": 393, "attention_prob": 393, "context_lay": 393, "self_output": 393, "torch_attention_mask": [393, 394], "torch_query_weight": 393, "torch_query_bia": 393, "torch_key_weight": 393, "torch_key_bia": 393, "torch_value_weight": 393, "torch_value_bia": 393, "torch_output_weight": 393, "torch_output_bia": 393, "00607705116272": 393, "250946044921875": 393, "ahead": 393, "data_typ": 393, "optimized_multi_head_attent": 393, "fused_qkv_weight": 393, "fused_qkv_bia": 393, "self_output_weight": 393, "self_output_bia": 393, "fused_qkv_output": 393, "context_layer_after_concatenate_head": 393, "qkv": 393, "torch_qkv_weight": 393, "torch_qkv_bia": 393, "qkv_weight": 393, "qkv_bia": 393, "optimized_output": 393, "474989175796509": 393, "020017147064208984": 393, "torch_optimized_output": 393, "allclos": 393, "19": [393, 395, 397], "ttnn_config_overrid": [394, 396, 398], "47": [394, 395], "183": 394, "133": [394, 395], "overrid": [394, 395, 398], "184": 394, "354": 394, "355": 394, "356": 394, "357": 394, "358": 394, "359": 394, "360": [394, 397], "362": 394, "366": 394, "367": 394, "368": 394, "369": 394, "370": 394, "371": 394, "372": 394, "373": [394, 395], "374": 394, "378": 394, "379": 394, "380": [394, 395], "381": 394, "383": 394, "385": 394, "390": 394, "391": 394, "392": 394, "393": 394, "394": 394, "395": 394, "396": 394, "397": 394, "398": 394, "399": 394, "set_verbosity_error": 394, "100": [394, 395], "412": 394, "442": 394, "447": 394, "googl": [394, 397], "bert_uncased_l": 394, "4_h": 394, "256_a": 394, "bertselfoutput": 394, "lib": [394, 395, 397], "site": [394, 395, 397], "huggingface_hub": [394, 395], "file_download": 394, "1132": 394, "futurewarn": 394, "resume_download": 394, "resum": 394, "force_download": 394, "874": 394, "num_hidden_lay": 394, "bertforquestionansw": 394, "input_id": 394, "vocab_s": 394, "torch_token_type_id": 394, "torch_position_id": 394, "ttnn_bert_input": 394, "preprocess_input": 394, "bert_for_question_answ": 394, "50": 394, "339": 394, "manage_config": [394, 396, 398], "144": 394, "340": 394, "341": 394, "555": 394, "_paramet": [394, 396], "env": [394, 395, 396, 397], "34": [394, 395, 396], "343": 394, "634": 394, "636": 394, "147": [394, 395], "restor": [394, 396], "02": [394, 395], "947": 394, "unset": 395, "silent": 395, "nuke": 395, "jobserv": 395, "unavail": 395, "j1": 395, "parent": 395, "rule": 395, "artifact": 395, "conf": 395, "backend": 395, "pypi": [395, 397], "org": [395, 397], "satisfi": [395, 397], "setuptool": 395, "44": 395, "py3": 395, "65": [395, 397], "kb": 395, "edit": 395, "tt_eager": 395, "obtain": 395, "statu": 395, "metadata": [395, 397], "click": 395, "96": [395, 398], "loguru": 395, "58": 395, "ipywidget": 395, "139": 395, "90": [395, 396], "db": 395, "290ab3a34f2ef0b5a0f89235dc2d40fea83e77de84ed2dc05c": 395, "pyyaml": [395, 397], "cp38": 395, "linux_x86_64": 395, "jupyterlab": 395, "mb": 395, "pyelftool": 395, "py2": 395, "174": 395, "4f": 395, "ed": 395, "863cf4386fe6db3c09333712009ec1c5146a36f3904b469d13": 395, "curtsi": 395, "91": 395, "b7": 395, "0c117d73912c6c2beb1eb0d7d6884f4e79e6e5b5e91eeb34f5": 395, "torchtrail": 395, "manylinux_2_12_x86_64": 395, "manylinux2010_x86_64": 395, "matplotlib": 395, "toolz": 395, "pillow": [395, 397], "manylinux_2_17_x86_64": 395, "manylinux2014_x86_64": 395, "panda": 395, "2bcpu": 395, "199": 395, "dash": 395, "rich": 395, "238": 395, "seaborn": 395, "293": 395, "plotli": 395, "traitlet": 395, "85": 395, "widgetsnbextens": 395, "ipython": [395, 396, 397], "798": 395, "widget": 395, "jupyterlab_widget": 395, "215": 395, "comm": 395, "async": 395, "lru": 395, "async_lru": 395, "tomli": 395, "python_vers": 395, "server": 395, "jupyter_serv": 395, "jinja2": [395, 397], "ipykernel": 395, "116": 395, "shim": 395, "notebook_shim": 395, "jupyterlab_serv": 395, "lsp": 395, "jupyter_lsp": 395, "68": 395, "23": 395, "53": 395, "importlib": [395, 397], "importlib_resourc": 395, "importlib_metadata": 395, "jupyter_cor": 395, "tornado": 395, "abi3": 395, "manylinux_2_5_x86_64": 395, "manylinux1_x86_64": 395, "435": 395, "bless": 395, "cwcwidth": 395, "92": 395, "pyrsist": 395, "121": 395, "graphviz": 395, "networkx": [395, 397], "pypars": 395, "103": 395, "kiwisolv": 395, "contourpi": 395, "301": 395, "fonttool": 395, "dateutil": 395, "python_dateutil": 395, "247": [395, 396], "cycler": 395, "pytz": 395, "2020": 395, "505": 395, "extens": [395, 397], "typing_extens": 395, "html": 395, "compon": 395, "dash_html_compon": 395, "dash_tabl": 395, "flask": 395, "101": 395, "dash_core_compon": 395, "pygment": 395, "markdown": 395, "markdown_it_pi": 395, "84": 395, "tenac": 395, "24": [395, 397], "pickleshar": 395, "prompt": 395, "toolkit": 395, "37": 395, "prompt_toolkit": 395, "43": 395, "386": 395, "stack": 395, "stack_data": 395, "backcal": 395, "jedi": 395, "pexpect": 395, "sys_platform": 395, "win32": 395, "63": 395, "inlin": 395, "matplotlib_inlin": 395, "send2trash": 395, "anyio": 395, "termin": 395, "jupyter_server_termin": 395, "client": 395, "jupyter_cli": 395, "105": 395, "nbformat": 395, "77": 395, "nbconvert": 395, "257": [395, 396], "event": 395, "jupyter_ev": 395, "websocket": 395, "websocket_cli": 395, "pyzmq": 395, "prometheu": 395, "prometheus_cli": 395, "argon2": 395, "cffi": 395, "argon2_cffi": 395, "terminado": 395, "markupsaf": [395, 397], "26": 395, "nest": 395, "asyncio": 395, "nest_asyncio": 395, "psutil": 395, "cp36": 395, "288": 395, "debugpi": 395, "babel": 395, "62": 395, "jsonschema": 395, "json5": 395, "zipp": [395, 397], "platformdir": 395, "six": 395, "wcwidth": 395, "itsdanger": 395, "blinker": 395, "werkzeug": 395, "226": 395, "mdurl": 395, "pure": 395, "pure_ev": 395, "asttoken": 395, "27": [395, 397], "parso": 395, "ptyprocess": 395, "exceptiongroup": 395, "idna": [395, 397], "61": 395, "sniffio": 395, "fastjsonschema": 395, "defusedxml": 395, "beautifulsoup4": 395, "jupyterlab_pyg": 395, "pandocfilt": 395, "mistun": 395, "tinycss2": 395, "bleach": 395, "162": 395, "nbclient": 395, "rfc3986": 395, "rfc3986_valid": 395, "json": [395, 398], "logger": 395, "python_json_logg": 395, "rfc3339": 395, "rfc3339_valid": 395, "argon2_cffi_bind": 395, "86": 395, "urllib3": [395, 397], "charset": [395, 397], "charset_norm": 395, "141": 395, "certifi": [395, 397], "2017": [395, 397], "163": 395, "03": [395, 396], "jsonschema_specif": 395, "pkgutil": 395, "resolv": 395, "pkgutil_resolve_nam": 395, "attr": 395, "rpd": 395, "rpds_py": 395, "soupsiev": 395, "36": 395, "webencod": 395, "444": 395, "pycpars": 395, "118": 395, "pre_commit": 395, "202": 395, "black": 395, "twine": 395, "yamllint": 395, "docutil": 395, "570": 395, "sphinx": 395, "rtd": 395, "theme": 395, "sphinx_rtd_them": 395, "sphinxcontrib": 395, "email": 395, "sphinxcontrib_email": 395, "lxml": 395, "manylinux_2_24_x86_64": 395, "breath": 395, "35": 395, "nbsphinx": 395, "jqueri": 395, "sphinxcontrib_jqueri": 395, "3a": 395, "a8": 395, "3237a93e3a6261bd24edabf3277ca59f64c1710b3d8c7c72a0": 395, "pandoc": 395, "317": 395, "timeout": 395, "pytest_timeout": 395, "6c": 395, "5706d21e6b4dff52e7af12bff9ca126a3f15beb4dff386aa29": 395, "jsbeautifi": 395, "462": 395, "xlsxwriter": 395, "152": 395, "tiktoken": 395, "tqdm": [395, 397], "sentencepiec": 395, "97": 395, "numba": 395, "56": [395, 396], "librosa": 395, "252": [395, 396], "timm": [395, 397], "549": 395, "opencv": 395, "headless": 395, "74": 395, "opencv_python_headless": 395, "cp37": 395, "diffus": [395, 397], "604": 395, "219": 395, "ftfy": 395, "gitpython": 395, "188": 395, "einop": 395, "multiprocess": 395, "70": 395, "py38": 395, "132": 395, "81": 395, "bert_scor": 395, "fsspec": [395, 397], "173": 395, "nodeenv": 395, "cfgv": 395, "98": 395, "virtualenv": 395, "pathspec": 395, "mypi": 395, "mypy_extens": 395, "pyproject_hook": 395, "render": 395, "readme_render": 395, "pkginfo": 395, "toolbelt": 395, "requests_toolbelt": 395, "keyr": 395, "images": 395, "serializinghtml": 395, "sphinxcontrib_serializinghtml": 395, "94": 395, "jsmath": 395, "sphinxcontrib_jsmath": 395, "snowballstemm": 395, "93": [395, 396], "htmlhelp": 395, "sphinxcontrib_htmlhelp": 395, "99": 395, "alabast": 395, "applehelp": 395, "sphinxcontrib_applehelp": 395, "devhelp": 395, "sphinxcontrib_devhelp": 395, "qthelp": 395, "sphinxcontrib_qthelp": 395, "ply": 395, "plumbum": 395, "127": 395, "iniconfig": 395, "pluggi": 395, "0rc8": 395, "editorconfig": 395, "pyarrow": 395, "xxhash": 395, "194": 395, "huggingfac": [395, 397], "hub": [395, 397], "330": 395, "aiohttp": 395, "dill": 395, "110": 395, "regex": [395, 397], "2019": [395, 397], "777": 395, "filelock": [395, 397], "llvmlite": 395, "0dev0": 395, "soxr": 395, "soundfil": 395, "pooch": 395, "lazi": 395, "loader": 395, "lazy_load": 395, "scipi": 395, "joblib": 395, "302": 395, "audioread": 395, "scikit": 395, "scikit_learn": 395, "msgpack": 395, "534": 395, "gitdb": 395, "distlib": 395, "468": 395, "nh3": 395, "secretstorag": 395, "jeepnei": 395, "jaraco": 395, "2015": 395, "frozenlist": 395, "240": [395, 396], "async_timeout": 395, "aiosign": 395, "yarl": 395, "308": 395, "multidict": 395, "129": 395, "threadpoolctl": 395, "smmap": 395, "cryptographi": 395, "itertool": 395, "more_itertool": 395, "57": 395, "pyproject": 395, "uninstal": 395, "msg": 395, "t5": 395, "integration_test": 395, "test_perform": 395, "test_t5_for_conditional_gener": 395, "functional_t5": 395, "ttnn_functional_t5": 395, "09": [395, 396], "__main__": 395, "ops_devic": 395, "session": 395, "platform": 395, "cachedir": 395, "pytest_cach": 395, "rootdir": 395, "configfil": 395, "ini": 395, "plugin": 395, "600": 395, "func_onli": 395, "670": 395, "681": 395, "08": 395, "684": [395, 396], "1202": 395, "llruntim": 395, "watcher": 395, "watch": 395, "109": 395, "465": 395, "ttnn_t5": 395, "6ba823894": 395, "149": 395, "484": 395, "487": 395, "216": 395, "489": 395, "721": 395, "359902381896973": 395, "07123565673828": 395, "722": 395, "102": 395, "44269247283137575": 395, "detach": 395, "summari": 395, "627": 395, "638": 395, "639": 395, "458": 395, "224": 395, "460": 395, "292": 395, "164": 395, "22393798828125": 395, "165": 395, "322504758834839": 395, "407821983919596": 395, "pd": 395, "glob": 395, "getenv": 395, "get_latest_report": 395, "base_path": 395, "latest_dir": 395, "listdir": 395, "isdir": 395, "getmtim": 395, "valueerror": [395, 396], "latest_profile_report": 395, "df": 395, "read_csv": 395, "2024_02_09_01_38_37": 395, "ops_perf_results_resnet_2024_02_09_01_38_37": 395, "output_0_w": 395, "output_0_z": 395, "output_0_i": 395, "output_0_x": 395, "output_0_layout": 395, "output_0_data": 395, "output_0_memori": 395, "depth": 395, "compileprogram": 395, "load_tensor_ttnn": 395, "137428381893955": 395, "137428382188762": 395, "294807": 395, "137428382500949": 395, "137428399402163": 395, "16901214": 395, "137428399802068": 395, "137428399873758": 395, "71690": 395, "137428400102635": 395, "137428400351033": 395, "248398": 395, "137428400548071": 395, "137428400792528": 395, "244457": 395, "4391": 395, "reshape_ttnn": 395, "4392": 395, "137450414555424": 395, "137450414599894": 395, "44470": 395, "4393": 395, "137450414740752": 395, "137450414782422": 395, "41670": 395, "4394": 395, "bcast_batch": 395, "tt_me": 395, "108": 395, "matmulparallelizationstrategi": 395, "multi_cor": 395, "137450414881851": 395, "137450414983440": 395, "101589": 395, "32128": 395, "dev_0_dram_interleav": 395, "4395": 395, "137450415113099": 395, "137450415158748": 395, "45649": 395, "from_device_ttnn": 395, "4396": 395, "137450415235897": 395, "137450453493048": 395, "38257151": 395, "fold_batch_norm2d_into_conv2d": 396, "168": 396, "82": 396, "768": 396, "242": 396, "246": 396, "248": 396, "249": 396, "250": [396, 397], "251": 396, "253": 396, "254": 396, "255": 396, "258": 396, "262": 396, "avg_pool2d": 396, "266": 396, "268": 396, "269": 396, "device_param": 396, "24576": 396, "310": 396, "324": 396, "325": 396, "363": 396, "conv3x3": 396, "in_plan": 396, "out_plan": 396, "3x3": 396, "torchbasicblock": 396, "expans": 396, "inplan": 396, "base_width": 396, "norm_lay": 396, "batchnorm2d": 396, "basicblock": 396, "notimplementederror": 396, "conv1": 396, "bn1": 396, "conv2": 396, "bn2": 396, "torch_model": 396, "state_dict": [396, 397], "create_custom_preprocessor": 396, "conv_weight_1": 396, "conv_bias_1": 396, "conv_weight_2": 396, "conv_bias_2": 396, "682": 396, "683": 396, "499": 396, "_initialize_model_and_preprocess_paramet": 396, "449": 396, "717": 396, "718": 396, "model_resnet_block_graph": 396, "conv_param": 396, "act_block_h": 396, "__call__": 396, "fp32_dest_acc_en": 396, "packer_l1_accum_en": 396, "_out_height": 396, "_out_width": 396, "return_output_s": 396, "return_prepared_device_weight": 396, "ttnnbasicblock": 396, "get_memory_config": 396, "ttnn_model": 396, "12638": 396, "walk": 397, "colab": 397, "research": 397, "run_dit": 397, "ipynb": 397, "tab": 397, "ov": 397, "assumpt": 397, "chdir": 397, "content": 397, "upgrad": 397, "save_imag": 397, "create_diffus": 397, "autoencoderkl": 397, "find_model": 397, "collis": 397, "pil": 397, "set_grad_en": 397, "cuda": 397, "is_avail": 397, "gpu": 397, "322": 397, "fatal": 397, "destin": 397, "date": 397, "safetensor": 397, "sympi": 397, "mpmath": 397, "image_s": 397, "512": 397, "vae_model": 397, "stabilityai": 397, "sd": 397, "vae": 397, "ft": 397, "ema": 397, "mse": 397, "latent_s": 397, "input_s": 397, "pt": 397, "load_state_dict": 397, "num_sampling_step": 397, "slider": 397, "cfg_scale": 397, "class_label": 397, "207": 397, "387": 397, "974": 397, "88": 397, "979": 397, "417": 397, "279": 397, "samples_per_row": 397, "nois": 397, "len": 397, "classifi": 397, "free": 397, "guidanc": 397, "y_null": 397, "model_kwarg": 397, "p_sample_loop": 397, "forward_with_cfg": 397, "clip_denois": 397, "null": 397, "18215": 397, "dit_model_graph": 397, "png": 397, "nrow": 397, "value_rang": 397, "06": 397, "987": 397, "210": 397, "show_svg": 397, "snippet": 398, "matmul_output_tensor": 398, "torch_matmul_output_tensor": 398, "unlik": 398, "start_tim": 398, "end_tim": 398, "stdout": 398, "6391518115997314": 398, "0007393360137939453": 398, "9998": 398, "construct": 398, "exp_trac": 398, "miss": 398, "tt_metal_logger_typ": 398, "tt_metal_logger_level": 398, "substitut": 398, "disk": 398, "implementaiton": 398, "insid": 398, "addition": 398, "ttnn_config_path": 398, "app": 398, "pre_hook_to_print_args_and_kwarg": 398, "post_hook_to_print_output": 398, "query_registered_oper": 398, "begin_graph_captur": 398, "runmod": 398, "no_dispatch": 398, "captured_graph": 398, "end_graph_captur": 398, "pretty_print": 398}, "objects": {"ttnn": [[8, 0, 1, "", "Conv2dConfig"], [9, 0, 1, "", "Conv2dSliceConfig"], [10, 3, 1, "", "GetDefaultDevice"], [11, 3, 1, "", "SetDefaultDevice"], [382, 0, 1, "", "Shape"], [12, 5, 1, "", "abs"], [13, 5, 1, "", "abs_bw"], [14, 5, 1, "", "acos"], [15, 5, 1, "", "acos_bw"], [16, 5, 1, "", "acosh"], [17, 5, 1, "", "acosh_bw"], [18, 5, 1, "", "add"], [19, 5, 1, "", "add_bw"], [20, 5, 1, "", "addalpha"], [21, 5, 1, "", "addalpha_bw"], [22, 5, 1, "", "addcdiv"], [23, 5, 1, "", "addcdiv_bw"], [24, 5, 1, "", "addcmul"], [25, 5, 1, "", "addcmul_bw"], [26, 5, 1, "", "all_gather"], [27, 5, 1, "", "alt_complex_rotate90"], [28, 5, 1, "", "angle"], [29, 5, 1, "", "angle_bw"], [30, 5, 1, "", "arange"], [31, 5, 1, "", "argmax"], [32, 5, 1, "", "as_tensor"], [33, 5, 1, "", "asin"], [34, 5, 1, "", "asin_bw"], [35, 5, 1, "", "asinh"], [36, 5, 1, "", "asinh_bw"], [37, 5, 1, "", "assign_bw"], [38, 5, 1, "", "atan"], [39, 5, 1, "", "atan2"], [40, 5, 1, "", "atan2_bw"], [41, 5, 1, "", "atan_bw"], [42, 5, 1, "", "atanh"], [43, 5, 1, "", "atanh_bw"], [44, 5, 1, "", "batch_norm"], [45, 5, 1, "", "bias_gelu_bw"], [46, 5, 1, "", "bitwise_and"], [47, 5, 1, "", "bitwise_left_shift"], [48, 5, 1, "", "bitwise_not"], [49, 5, 1, "", "bitwise_or"], [50, 5, 1, "", "bitwise_right_shift"], [51, 5, 1, "", "bitwise_xor"], [52, 5, 1, "", "cbrt"], [53, 5, 1, "", "ceil"], [54, 5, 1, "", "ceil_bw"], [55, 5, 1, "", "celu"], [56, 5, 1, "", "celu_bw"], [57, 5, 1, "", "clamp"], [58, 5, 1, "", "clamp_bw"], [59, 5, 1, "", "clip"], [60, 5, 1, "", "clip_bw"], [61, 5, 1, "", "clone"], [62, 3, 1, "", "close_device"], [63, 5, 1, "", "concat"], [64, 5, 1, "", "concat_bw"], [65, 5, 1, "", "conj"], [66, 5, 1, "", "conj_bw"], [67, 5, 1, "", "conv1d"], [68, 5, 1, "", "conv2d"], [69, 5, 1, "", "conv_transpose2d"], [70, 5, 1, "", "cos"], [71, 5, 1, "", "cos_bw"], [72, 5, 1, "", "cosh"], [73, 5, 1, "", "cosh_bw"], [74, 3, 1, "", "create_sharded_memory_config"], [75, 5, 1, "", "deallocate"], [76, 5, 1, "", "deg2rad"], [77, 5, 1, "", "deg2rad_bw"], [78, 5, 1, "", "digamma"], [79, 5, 1, "", "digamma_bw"], [80, 5, 1, "", "div"], [81, 5, 1, "", "div_bw"], [82, 5, 1, "", "div_no_nan"], [83, 5, 1, "", "div_no_nan_bw"], [84, 5, 1, "", "downsample"], [85, 5, 1, "", "dump_tensor"], [86, 5, 1, "", "elu"], [87, 5, 1, "", "elu_bw"], [88, 5, 1, "", "embedding"], [89, 5, 1, "", "embedding_bw"], [90, 5, 1, "", "empty"], [91, 5, 1, "", "empty_like"], [92, 5, 1, "", "eq"], [93, 5, 1, "", "eq_"], [94, 5, 1, "", "eqz"], [95, 5, 1, "", "erf"], [96, 5, 1, "", "erf_bw"], [97, 5, 1, "", "erfc"], [98, 5, 1, "", "erfc_bw"], [99, 5, 1, "", "erfinv"], [100, 5, 1, "", "erfinv_bw"], [101, 5, 1, "", "exp"], [102, 5, 1, "", "exp2"], [103, 5, 1, "", "exp2_bw"], [104, 5, 1, "", "exp_bw"], [113, 5, 1, "", "expm1"], [114, 5, 1, "", "expm1_bw"], [115, 5, 1, "", "fill"], [116, 5, 1, "", "fill_bw"], [117, 5, 1, "", "fill_ones_rm"], [118, 5, 1, "", "fill_rm"], [119, 5, 1, "", "fill_zero_bw"], [120, 5, 1, "", "floor"], [121, 5, 1, "", "floor_bw"], [122, 5, 1, "", "floor_div"], [123, 5, 1, "", "fmod"], [124, 5, 1, "", "fmod_bw"], [125, 3, 1, "", "format_input_tensor"], [126, 3, 1, "", "format_output_tensor"], [127, 5, 1, "", "frac"], [128, 5, 1, "", "frac_bw"], [129, 5, 1, "", "from_device"], [130, 5, 1, "", "from_torch"], [131, 5, 1, "", "full"], [132, 5, 1, "", "full_like"], [133, 5, 1, "", "gcd"], [134, 5, 1, "", "ge"], [135, 5, 1, "", "ge_"], [136, 5, 1, "", "geglu"], [137, 5, 1, "", "gelu"], [138, 5, 1, "", "gelu_bw"], [139, 5, 1, "", "gez"], [140, 5, 1, "", "global_avg_pool2d"], [141, 5, 1, "", "glu"], [142, 5, 1, "", "group_norm"], [143, 5, 1, "", "gt"], [144, 5, 1, "", "gt_"], [145, 5, 1, "", "gtz"], [146, 5, 1, "", "hardshrink"], [147, 5, 1, "", "hardshrink_bw"], [148, 5, 1, "", "hardsigmoid"], [149, 5, 1, "", "hardsigmoid_bw"], [150, 5, 1, "", "hardswish"], [151, 5, 1, "", "hardswish_bw"], [152, 5, 1, "", "hardtanh"], [153, 5, 1, "", "hardtanh_bw"], [154, 5, 1, "", "heaviside"], [155, 5, 1, "", "hypot"], [156, 5, 1, "", "hypot_bw"], [157, 5, 1, "", "i0"], [158, 5, 1, "", "i0_bw"], [159, 5, 1, "", "identity"], [160, 5, 1, "", "imag"], [161, 5, 1, "", "imag_bw"], [162, 5, 1, "", "indexed_fill"], [163, 5, 1, "", "is_imag"], [164, 5, 1, "", "is_real"], [165, 5, 1, "", "isclose"], [166, 5, 1, "", "isfinite"], [167, 5, 1, "", "isinf"], [168, 5, 1, "", "isnan"], [169, 5, 1, "", "isneginf"], [170, 5, 1, "", "isposinf"], [173, 5, 1, "", "l1_loss"], [174, 5, 1, "", "layer_norm"], [175, 5, 1, "", "lcm"], [176, 5, 1, "", "ldexp"], [177, 5, 1, "", "ldexp_bw"], [178, 5, 1, "", "le"], [179, 5, 1, "", "le_"], [180, 5, 1, "", "leaky_relu"], [181, 5, 1, "", "leaky_relu_bw"], [182, 5, 1, "", "lerp"], [183, 5, 1, "", "lerp_bw"], [184, 5, 1, "", "lez"], [185, 5, 1, "", "lgamma"], [186, 5, 1, "", "lgamma_bw"], [187, 5, 1, "", "linear"], [188, 5, 1, "", "load_tensor"], [189, 5, 1, "", "log"], [190, 5, 1, "", "log10"], [191, 5, 1, "", "log10_bw"], [192, 5, 1, "", "log1p"], [193, 5, 1, "", "log1p_bw"], [194, 5, 1, "", "log2"], [195, 5, 1, "", "log2_bw"], [196, 5, 1, "", "log_bw"], [197, 5, 1, "", "log_sigmoid"], [198, 5, 1, "", "log_sigmoid_bw"], [199, 5, 1, "", "logaddexp"], [200, 5, 1, "", "logaddexp2"], [201, 5, 1, "", "logaddexp2_bw"], [202, 5, 1, "", "logaddexp_bw"], [203, 5, 1, "", "logical_and"], [204, 5, 1, "", "logical_and_"], [205, 5, 1, "", "logical_not"], [206, 5, 1, "", "logical_not_"], [207, 5, 1, "", "logical_or"], [208, 5, 1, "", "logical_or_"], [209, 5, 1, "", "logical_xor"], [210, 5, 1, "", "logical_xor_"], [211, 5, 1, "", "logit"], [212, 5, 1, "", "logit_bw"], [213, 5, 1, "", "logiteps_bw"], [214, 5, 1, "", "lt"], [215, 5, 1, "", "lt_"], [216, 5, 1, "", "ltz"], [217, 5, 1, "", "mac"], [218, 3, 1, "", "manage_device"], [219, 5, 1, "", "matmul"], [220, 5, 1, "", "max"], [221, 5, 1, "", "max_bw"], [222, 5, 1, "", "max_pool2d"], [223, 5, 1, "", "maximum"], [224, 5, 1, "", "mean"], [225, 5, 1, "", "min"], [226, 5, 1, "", "min_bw"], [227, 5, 1, "", "minimum"], [228, 5, 1, "", "mish"], [231, 5, 1, "", "moreh_sum"], [232, 5, 1, "", "mse_loss"], [233, 5, 1, "", "mul_bw"], [234, 5, 1, "", "multigammaln"], [235, 5, 1, "", "multigammaln_bw"], [236, 5, 1, "", "multiply"], [237, 5, 1, "", "ne"], [238, 5, 1, "", "ne_"], [239, 5, 1, "", "neg"], [240, 5, 1, "", "neg_bw"], [241, 5, 1, "", "nextafter"], [242, 5, 1, "", "nez"], [243, 5, 1, "", "nonzero"], [244, 5, 1, "", "normalize_global"], [245, 5, 1, "", "normalize_hw"], [246, 5, 1, "", "ones"], [247, 5, 1, "", "ones_like"], [248, 3, 1, "", "open_device"], [249, 5, 1, "", "outer"], [250, 5, 1, "", "pad"], [251, 3, 1, "", "pad_to_tile_shape"], [252, 5, 1, "", "permute"], [253, 5, 1, "", "polar"], [254, 5, 1, "", "polar_bw"], [255, 5, 1, "", "polygamma"], [256, 5, 1, "", "polygamma_bw"], [257, 5, 1, "", "polyval"], [258, 5, 1, "", "pow"], [259, 5, 1, "", "pow_bw"], [260, 5, 1, "", "prelu"], [261, 3, 1, "", "prepare_conv_bias"], [262, 3, 1, "", "prepare_conv_transpose2d_bias"], [263, 3, 1, "", "prepare_conv_transpose2d_weights"], [264, 3, 1, "", "prepare_conv_weights"], [265, 5, 1, "", "prod"], [266, 5, 1, "", "prod_bw"], [267, 5, 1, "", "rad2deg"], [268, 5, 1, "", "rad2deg_bw"], [269, 5, 1, "", "rdiv"], [270, 5, 1, "", "rdiv_bw"], [271, 5, 1, "", "real"], [272, 5, 1, "", "real_bw"], [273, 5, 1, "", "reallocate"], [274, 5, 1, "", "reciprocal"], [275, 5, 1, "", "reciprocal_bw"], [276, 5, 1, "", "reduce_scatter"], [277, 3, 1, "", "register_post_operation_hook"], [278, 3, 1, "", "register_pre_operation_hook"], [279, 5, 1, "", "reglu"], [280, 5, 1, "", "relu"], [281, 5, 1, "", "relu6"], [282, 5, 1, "", "relu6_bw"], [283, 5, 1, "", "relu_bw"], [284, 5, 1, "", "relu_max"], [285, 5, 1, "", "relu_min"], [286, 5, 1, "", "remainder"], [287, 5, 1, "", "remainder_bw"], [288, 5, 1, "", "repeat"], [289, 5, 1, "", "repeat_bw"], [290, 5, 1, "", "repeat_interleave"], [291, 5, 1, "", "reshape"], [292, 5, 1, "", "rms_norm"], [293, 5, 1, "", "round"], [294, 5, 1, "", "round_bw"], [295, 5, 1, "", "rpow"], [296, 5, 1, "", "rpow_bw"], [297, 5, 1, "", "rsqrt"], [298, 5, 1, "", "rsqrt_bw"], [299, 5, 1, "", "rsub"], [300, 5, 1, "", "rsub_bw"], [301, 5, 1, "", "scatter"], [302, 5, 1, "", "selu"], [303, 5, 1, "", "selu_bw"], [304, 3, 1, "", "set_printoptions"], [305, 5, 1, "", "sigmoid"], [306, 5, 1, "", "sigmoid_accurate"], [307, 5, 1, "", "sigmoid_bw"], [308, 5, 1, "", "sign"], [309, 5, 1, "", "sign_bw"], [310, 5, 1, "", "signbit"], [311, 5, 1, "", "silu"], [312, 5, 1, "", "silu_bw"], [313, 5, 1, "", "sin"], [314, 5, 1, "", "sin_bw"], [315, 5, 1, "", "sinh"], [316, 5, 1, "", "sinh_bw"], [317, 5, 1, "", "slice"], [318, 5, 1, "", "softmax"], [319, 5, 1, "", "softplus"], [320, 5, 1, "", "softplus_bw"], [321, 5, 1, "", "softshrink"], [322, 5, 1, "", "softshrink_bw"], [323, 5, 1, "", "softsign"], [324, 5, 1, "", "softsign_bw"], [325, 5, 1, "", "sqrt"], [326, 5, 1, "", "sqrt_bw"], [327, 5, 1, "", "square"], [328, 5, 1, "", "square_bw"], [329, 5, 1, "", "squared_difference"], [330, 5, 1, "", "squared_difference_bw"], [331, 5, 1, "", "std"], [332, 5, 1, "", "sub_bw"], [333, 5, 1, "", "subalpha"], [334, 5, 1, "", "subalpha_bw"], [335, 5, 1, "", "subtract"], [336, 5, 1, "", "sum"], [337, 5, 1, "", "swiglu"], [338, 5, 1, "", "swish"], [339, 3, 1, "", "synchronize_device"], [340, 5, 1, "", "tan"], [341, 5, 1, "", "tan_bw"], [342, 5, 1, "", "tanh"], [343, 5, 1, "", "tanh_bw"], [344, 5, 1, "", "tanhshrink"], [345, 5, 1, "", "tanhshrink_bw"], [346, 5, 1, "", "threshold"], [347, 5, 1, "", "threshold_bw"], [348, 5, 1, "", "tilize"], [349, 5, 1, "", "tilize_with_val_padding"], [350, 5, 1, "", "to_device"], [351, 5, 1, "", "to_layout"], [352, 5, 1, "", "to_memory_config"], [353, 5, 1, "", "to_torch"], [354, 5, 1, "", "topk"], [361, 5, 1, "", "tril"], [362, 5, 1, "", "triu"], [363, 5, 1, "", "trunc"], [364, 5, 1, "", "trunc_bw"], [365, 5, 1, "", "unary_chain"], [366, 5, 1, "", "untilize"], [367, 5, 1, "", "untilize_with_unpadding"], [368, 5, 1, "", "upsample"], [369, 5, 1, "", "var"], [370, 5, 1, "", "where"], [371, 5, 1, "", "where_bw"], [372, 5, 1, "", "xlogy"], [373, 5, 1, "", "xlogy_bw"], [374, 5, 1, "", "zeros"], [375, 5, 1, "", "zeros_like"]], "ttnn.Conv2dConfig": [[8, 1, 1, "", "act_block_h_override"], [8, 1, 1, "", "act_block_w_div"], [8, 1, 1, "", "activation"], [8, 1, 1, "", "always_preprocess_weights"], [8, 1, 1, "", "core_grid"], [8, 1, 1, "", "deallocate_activation"], [8, 1, 1, "", "dtype"], [8, 1, 1, "", "enable_act_double_buffer"], [8, 1, 1, "", "enable_kernel_stride_folding"], [8, 1, 1, "", "enable_split_reader"], [8, 1, 1, "", "enable_subblock_padding"], [8, 1, 1, "", "enable_weights_double_buffer"], [8, 1, 1, "", "in_place"], [8, 1, 1, "", "output_layout"], [8, 1, 1, "", "override_sharding_config"], [8, 1, 1, "", "preprocess_weights_on_device"], [8, 1, 1, "", "reallocate_halo_output"], [8, 1, 1, "", "reshard_if_not_optimal"], [8, 1, 1, "", "shard_layout"], [8, 1, 1, "", "transpose_shards"], [8, 1, 1, "", "weights_dtype"]], "ttnn.Conv2dSliceConfig": [[9, 0, 1, "", "SliceTypeEnum"], [9, 1, 1, "", "num_slices"], [9, 1, 1, "", "slice_type"]], "ttnn.Conv2dSliceConfig.SliceTypeEnum": [[9, 2, 1, "", "SliceHeight"], [9, 2, 1, "", "SliceWidth"], [9, 1, 1, "", "name"], [9, 1, 1, "", "value"]], "ttnn.Shape": [[382, 1, 1, "", "rank"], [382, 4, 1, "", "to_rank"]], "ttnn.experimental": [[105, 5, 1, "", "all_reduce"], [106, 5, 1, "", "conv3d"], [107, 5, 1, "", "cumprod"], [108, 5, 1, "", "cumsum"], [109, 5, 1, "", "dropout"], [110, 5, 1, "", "gelu_bw"], [111, 5, 1, "", "rotary_embedding"], [112, 5, 1, "", "sort"]], "ttnn.kv_cache": [[171, 5, 1, "", "fill_cache_for_user_"], [172, 5, 1, "", "update_cache_for_token_"]], "ttnn.model_preprocessing": [[229, 3, 1, "", "preprocess_model"], [230, 3, 1, "", "preprocess_model_parameters"]], "ttnn.transformer": [[355, 5, 1, "", "attention_softmax"], [356, 5, 1, "", "attention_softmax_"], [357, 5, 1, "", "concatenate_heads"], [358, 5, 1, "", "scaled_dot_product_attention"], [359, 5, 1, "", "scaled_dot_product_attention_decode"], [360, 5, 1, "", "split_query_key_value_and_split_heads"]]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:attribute", "3": "py:function", "4": "py:method", "5": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"]}, "titleterms": {"welcom": 0, "tt": [0, 5, 6, 376, 378, 379, 381, 398], "nn": [0, 5, 6, 376, 378, 379, 381, 398], "document": 0, "ttnn": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 384, 387, 390, 391, 393, 394, 395, 396], "model": [0, 4, 7, 376, 378, 379, 393, 394, 397], "resourc": 0, "indic": 0, "tabl": 0, "contribut": [1, 379], "develop": 1, "support": [2, 398], "report": [2, 7, 381], "bug": 2, "featur": 2, "propos": 2, "request": 2, "troubleshoot": 2, "debug": [2, 398], "tip": 2, "commun": 2, "perform": [3, 392], "prerequisit": [3, 4, 379], "run": [3, 4, 393, 396, 398], "perf": [3, 381], "file": 3, "all": [3, 379, 398], "get": [4, 378, 396], "start": [4, 378], "an": [4, 398], "exampl": [4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 353, 361, 362, 363, 364, 365, 369, 370, 371, 372, 373, 374, 375, 376, 379, 398], "what": [5, 6], "i": [5, 6], "ad": 6, "new": [6, 380], "oper": [6, 7, 376, 381, 385, 389, 391, 394, 395, 398], "faq": 6, "step": [6, 376, 379], "ar": [6, 379], "need": 6, "add": [6, 18, 389, 391], "c": [6, 398], "python": [6, 398], "devic": [6, 7, 379, 391, 392, 393, 398], "implement": [6, 393, 396], "1": [6, 376, 378, 379, 398], "2": [6, 376, 378, 379, 397, 398], "bind": 6, "option": [6, 379], "golden": 6, "function": [6, 380, 394, 398], "api": [7, 382], "memori": [7, 382], "config": [7, 382, 392], "core": 7, "tensor": [7, 382, 389, 391, 392, 398], "creation": 7, "matrix": [7, 392], "multipl": [7, 382, 392], "pointwis": 7, "unari": 7, "binari": 7, "ternari": 7, "loss": 7, "reduct": 7, "data": [7, 382, 391], "movement": 7, "normal": 7, "moreh": 7, "transform": [7, 355, 356, 357, 358, 359, 360], "ccl": 7, "embed": [7, 88], "convolut": 7, "pool": 7, "vision": 7, "kv": 7, "cach": [7, 392, 393, 398], "convers": 7, "hook": [7, 398], "conv2dconfig": 8, "conv2dsliceconfig": 9, "getdefaultdevic": 10, "setdefaultdevic": 11, "ab": 12, "abs_bw": 13, "aco": 14, "acos_bw": 15, "acosh": 16, "acosh_bw": 17, "add_bw": 19, "addalpha": 20, "addalpha_bw": 21, "addcdiv": 22, "addcdiv_bw": 23, "addcmul": 24, "addcmul_bw": 25, "all_gath": 26, "alt_complex_rotate90": 27, "angl": 28, "angle_bw": 29, "arang": 30, "argmax": 31, "as_tensor": 32, "asin": 33, "asin_bw": 34, "asinh": 35, "asinh_bw": 36, "assign_bw": 37, "atan": 38, "atan2": 39, "atan2_bw": 40, "atan_bw": 41, "atanh": 42, "atanh_bw": 43, "batch_norm": 44, "bias_gelu_bw": 45, "bitwise_and": 46, "bitwise_left_shift": 47, "bitwise_not": 48, "bitwise_or": 49, "bitwise_right_shift": 50, "bitwise_xor": 51, "cbrt": 52, "ceil": 53, "ceil_bw": 54, "celu": 55, "celu_bw": 56, "clamp": 57, "clamp_bw": 58, "clip": 59, "clip_bw": 60, "clone": [61, 379, 397], "close_devic": 62, "concat": 63, "concat_bw": 64, "conj": 65, "conj_bw": 66, "conv1d": 67, "conv2d": 68, "conv_transpose2d": 69, "co": 70, "cos_bw": 71, "cosh": 72, "cosh_bw": 73, "create_sharded_memory_config": 74, "dealloc": 75, "deg2rad": 76, "deg2rad_bw": 77, "digamma": 78, "digamma_bw": 79, "div": 80, "div_bw": 81, "div_no_nan": 82, "div_no_nan_bw": 83, "downsampl": 84, "dump_tensor": 85, "elu": 86, "elu_bw": 87, "embedding_bw": 89, "empti": 90, "empty_lik": 91, "eq": 92, "eq_": 93, "eqz": 94, "erf": 95, "erf_bw": 96, "erfc": 97, "erfc_bw": 98, "erfinv": 99, "erfinv_bw": 100, "exp": 101, "exp2": 102, "exp2_bw": 103, "exp_bw": 104, "experiment": [105, 106, 107, 108, 109, 110, 111, 112], "all_reduc": 105, "conv3d": 106, "cumprod": 107, "cumsum": 108, "dropout": 109, "gelu_bw": [110, 138], "rotary_embed": 111, "sort": 112, "expm1": 113, "expm1_bw": 114, "fill": 115, "fill_bw": 116, "fill_ones_rm": 117, "fill_rm": 118, "fill_zero_bw": 119, "floor": 120, "floor_bw": 121, "floor_div": 122, "fmod": 123, "fmod_bw": 124, "format_input_tensor": 125, "format_output_tensor": 126, "frac": 127, "frac_bw": 128, "from_devic": 129, "from_torch": 130, "full": 131, "full_lik": 132, "gcd": 133, "ge": 134, "ge_": 135, "geglu": 136, "gelu": 137, "gez": 139, "global_avg_pool2d": 140, "glu": 141, "group_norm": 142, "gt": 143, "gt_": 144, "gtz": 145, "hardshrink": 146, "hardshrink_bw": 147, "hardsigmoid": 148, "hardsigmoid_bw": 149, "hardswish": 150, "hardswish_bw": 151, "hardtanh": 152, "hardtanh_bw": 153, "heavisid": 154, "hypot": 155, "hypot_bw": 156, "i0": 157, "i0_bw": 158, "ident": 159, "imag": [160, 379], "imag_bw": 161, "indexed_fil": 162, "is_imag": 163, "is_real": 164, "isclos": 165, "isfinit": 166, "isinf": 167, "isnan": 168, "isneginf": 169, "isposinf": 170, "kv_cach": [171, 172], "fill_cache_for_user_": 171, "update_cache_for_token_": 172, "l1_loss": 173, "layer_norm": 174, "lcm": 175, "ldexp": 176, "ldexp_bw": 177, "le": 178, "le_": 179, "leaky_relu": 180, "leaky_relu_bw": 181, "lerp": 182, "lerp_bw": 183, "lez": 184, "lgamma": 185, "lgamma_bw": 186, "linear": 187, "load_tensor": 188, "log": [189, 398], "log10": 190, "log10_bw": 191, "log1p": 192, "log1p_bw": 193, "log2": 194, "log2_bw": 195, "log_bw": 196, "log_sigmoid": 197, "log_sigmoid_bw": 198, "logaddexp": 199, "logaddexp2": 200, "logaddexp2_bw": 201, "logaddexp_bw": 202, "logical_and": 203, "logical_and_": 204, "logical_not": 205, "logical_not_": 206, "logical_or": 207, "logical_or_": 208, "logical_xor": 209, "logical_xor_": 210, "logit": 211, "logit_bw": 212, "logiteps_bw": 213, "lt": 214, "lt_": 215, "ltz": 216, "mac": 217, "manage_devic": 218, "matmul": [219, 385], "max": 220, "max_bw": 221, "max_pool2d": 222, "maximum": 223, "mean": 224, "min": 225, "min_bw": 226, "minimum": 227, "mish": 228, "model_preprocess": [229, 230], "preprocess_model": 229, "preprocess_model_paramet": 230, "moreh_sum": 231, "mse_loss": 232, "mul_bw": 233, "multigammaln": 234, "multigammaln_bw": 235, "multipli": [236, 392], "ne": 237, "ne_": 238, "neg": 239, "neg_bw": 240, "nextaft": 241, "nez": 242, "nonzero": 243, "normalize_glob": 244, "normalize_hw": 245, "ones": 246, "ones_lik": 247, "open_devic": 248, "outer": 249, "pad": 250, "pad_to_tile_shap": 251, "permut": 252, "polar": 253, "polar_bw": 254, "polygamma": 255, "polygamma_bw": 256, "polyv": 257, "pow": 258, "pow_bw": 259, "prelu": 260, "prepare_conv_bia": 261, "prepare_conv_transpose2d_bia": 262, "prepare_conv_transpose2d_weight": 263, "prepare_conv_weight": 264, "prod": 265, "prod_bw": 266, "rad2deg": 267, "rad2deg_bw": 268, "rdiv": 269, "rdiv_bw": 270, "real": 271, "real_bw": 272, "realloc": 273, "reciproc": 274, "reciprocal_bw": 275, "reduce_scatt": 276, "register_post_operation_hook": 277, "register_pre_operation_hook": 278, "reglu": 279, "relu": 280, "relu6": 281, "relu6_bw": 282, "relu_bw": 283, "relu_max": 284, "relu_min": 285, "remaind": 286, "remainder_bw": 287, "repeat": 288, "repeat_bw": 289, "repeat_interleav": 290, "reshap": 291, "rms_norm": 292, "round": 293, "round_bw": 294, "rpow": 295, "rpow_bw": 296, "rsqrt": 297, "rsqrt_bw": 298, "rsub": 299, "rsub_bw": 300, "scatter": 301, "selu": 302, "selu_bw": 303, "set_printopt": 304, "sigmoid": 305, "sigmoid_accur": 306, "sigmoid_bw": 307, "sign": 308, "sign_bw": 309, "signbit": 310, "silu": 311, "silu_bw": 312, "sin": 313, "sin_bw": 314, "sinh": 315, "sinh_bw": 316, "slice": [317, 398], "softmax": 318, "softplu": 319, "softplus_bw": 320, "softshrink": 321, "softshrink_bw": 322, "softsign": 323, "softsign_bw": 324, "sqrt": 325, "sqrt_bw": 326, "squar": 327, "square_bw": 328, "squared_differ": 329, "squared_difference_bw": 330, "std": 331, "sub_bw": 332, "subalpha": 333, "subalpha_bw": 334, "subtract": 335, "sum": 336, "swiglu": 337, "swish": 338, "synchronize_devic": 339, "tan": 340, "tan_bw": 341, "tanh": 342, "tanh_bw": 343, "tanhshrink": 344, "tanhshrink_bw": 345, "threshold": 346, "threshold_bw": 347, "tiliz": 348, "tilize_with_val_pad": 349, "to_devic": 350, "to_layout": 351, "to_memory_config": 352, "to_torch": 353, "topk": 354, "attention_softmax": 355, "attention_softmax_": 356, "concatenate_head": 357, "scaled_dot_product_attent": 358, "scaled_dot_product_attention_decod": 359, "split_query_key_value_and_split_head": 360, "tril": 361, "triu": 362, "trunc": 363, "trunc_bw": 364, "unary_chain": 365, "until": 366, "untilize_with_unpad": 367, "upsampl": 368, "var": 369, "where": [370, 378], "where_bw": 371, "xlogi": 372, "xlogy_bw": 373, "zero": 374, "zeros_lik": 375, "convert": [376, 391, 393, 398], "pytorch": [376, 397], "rewrit": 376, "switch": 376, "3": [376, 378, 379, 398], "optim": [376, 378, 393], "more": [376, 392], "build": [377, 378, 379, 397], "uplift": 377, "demo": [377, 378], "instal": [378, 379], "explor": 378, "our": [378, 379], "tutori": [378, 383], "multi": [378, 379, 386, 393], "head": [378, 386, 393], "attent": [378, 386, 393], "simpl": 378, "4": [378, 398], "To": [378, 379], "go": 378, "from": [378, 379, 396, 397, 398], "here": 378, "set": 379, "up": 379, "hardwar": 379, "driver": 379, "firmwar": 379, "system": 379, "level": 379, "depend": 379, "kmd": 379, "updat": 379, "flash": 379, "manag": 379, "interfac": 379, "smi": 379, "card": 379, "configur": [379, 392, 393], "topologi": 379, "metalium": 379, "There": 379, "three": 379, "sourc": 379, "repositori": 379, "invok": 379, "script": 379, "docker": 379, "releas": 379, "wheel": 379, "download": [379, 397], "latest": 379, "For": 379, "user": 379, "onli": 379, "environ": 379, "you": 379, "verifi": 379, "your": 379, "try": 379, "execut": 379, "program": [379, 392, 393, 398], "interest": 379, "onboard": 380, "profil": [381, 387, 395], "header": 381, "profile_thi": 381, "descript": 381, "shape": 382, "layout": [382, 391, 392], "type": [382, 391], "requir": 382, "width": 382, "limit": 382, "bfloat8_b": 382, "storag": [382, 391], "shard": 382, "graph": [384, 396, 397, 398], "torch": [384, 391, 392, 393, 394, 396, 398], "dit_xl_2": 384, "With": 384, "resnet": [388, 396], "basic": [388, 398], "block": [388, 396], "tracer": 390, "creat": [391, 396], "host": 391, "borrow": 391, "v": 391, "own": 391, "open": 391, "initi": [391, 392, 393], "b": [391, 392], "random": [391, 392], "valu": [391, 392], "us": [391, 392, 393, 394, 398], "inspect": [391, 392], "output": [391, 392, 393], "attribut": 391, "close": [391, 392, 393], "enabl": [392, 393, 398], "result": 392, "write": 393, "activ": 393, "weight": 393, "first": 393, "iter": 393, "subsequ": 393, "version": [393, 396], "pre": [393, 397, 398], "process": 393, "paramet": [393, 396], "check": 393, "match": 393, "origin": 393, "trace": [394, 396, 398], "modul": [394, 396], "written": 394, "torchvis": 396, "preprocess": 396, "displai": [396, 397], "pass": 396, "constructor": 396, "base": 397, "librari": 397, "http": 397, "github": 397, "com": 397, "facebookresearch": 397, "dit": 397, "git": 397, "xl": 397, "sampl": 397, "train": 397, "__getitem__": 398, "5": 398, "intermedi": 398, "6": 398, "7": 398, "tt_lib": 398, "8": 398, "9": 398, "10": 398, "chang": 398, "string": 398, "represent": 398, "11": 398, "visual": 398, "web": 398, "browser": 398, "12": 398, "regist": 398, "post": 398, "13": 398, "queri": 398, "14": 398, "fall": 398, "back": 398, "15": 398, "captur": 398, "buffer": 398, "alloc": 398, "etc": 398}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Welcome to TT-NN documentation!": [[0, "welcome-to-tt-nn-documentation"]], "TTNN": [[0, null]], "Models": [[0, null]], "Resources": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Contributing as a developer": [[1, "contributing-as-a-developer"]], "Support": [[2, "support"]], "Reporting bugs, feature proposals, or support requests": [[2, "reporting-bugs-feature-proposals-or-support-requests"]], "Troubleshooting and debugging tips": [[2, "troubleshooting-and-debugging-tips"]], "Community": [[2, "community"]], "Performance": [[3, "performance"]], "Prerequisites": [[3, "prerequisites"], [4, "prerequisites"]], "Running a perf file": [[3, "running-a-perf-file"]], "Running all the perf files": [[3, "running-all-the-perf-files"]], "Getting Started": [[4, "getting-started"], [378, "getting-started"]], "Running an example model": [[4, "running-an-example-model"]], "What is TT-NN?": [[5, "what-is-tt-nn"]], "Adding New TT-NN Operation": [[6, "adding-new-tt-nn-operation"]], "FAQ": [[6, "faq"]], "What is a TT-NN operation?": [[6, "what-is-a-tt-nn-operation"]], "What steps are needed to add TT-NN operation in C++?": [[6, "what-steps-are-needed-to-add-tt-nn-operation-in-c"]], "What steps are needed to add TT-NN operation in Python?": [[6, "what-steps-are-needed-to-add-tt-nn-operation-in-python"]], "Example of Adding a new Device Operation": [[6, "example-of-adding-a-new-device-operation"]], "C++ Implementation": [[6, "c-implementation"]], "Step 1: Implement device operation": [[6, "step-1-implement-device-operation"]], "Step 2: Implement the operation in C++": [[6, "step-2-implement-the-operation-in-c"]], "Python Implementation": [[6, "python-implementation"]], "Step 1: Add Python binding": [[6, "step-1-add-python-binding"]], "Step 2: (Optional) Add golden function for the operation in Python": [[6, "step-2-optional-add-golden-function-for-the-operation-in-python"]], "APIs": [[7, "apis"], [382, "apis"]], "Device": [[7, "device"]], "Memory Config": [[7, "memory-config"], [382, "memory-config"]], "Operations": [[7, "operations"]], "Core": [[7, "core"]], "Tensor Creation": [[7, "tensor-creation"]], "Matrix Multiplication": [[7, "matrix-multiplication"], [392, "Matrix-Multiplication"]], "Pointwise Unary": [[7, "pointwise-unary"]], "Pointwise Binary": [[7, "pointwise-binary"]], "Pointwise Ternary": [[7, "pointwise-ternary"]], "Losses": [[7, "losses"]], "Reduction": [[7, "reduction"]], "Data Movement": [[7, "data-movement"]], "Normalization": [[7, "normalization"]], "Moreh Operations": [[7, "moreh-operations"]], "Transformer": [[7, "transformer"]], "CCL": [[7, "ccl"]], "Embedding": [[7, "embedding"]], "Convolution": [[7, "convolution"]], "Pooling": [[7, "pooling"]], "Vision": [[7, "vision"]], "KV Cache": [[7, "kv-cache"]], "Model Conversion": [[7, "model-conversion"]], "Reports": [[7, "reports"]], "Operation Hooks": [[7, "operation-hooks"]], "ttnn.Conv2dConfig": [[8, "ttnn-conv2dconfig"]], "ttnn.Conv2dSliceConfig": [[9, "ttnn-conv2dsliceconfig"]], "ttnn.GetDefaultDevice": [[10, "ttnn-getdefaultdevice"]], "Example": [[10, null], [11, null], [12, null], [13, null], [14, null], [15, null], [16, null], [17, null], [18, null], [19, null], [20, null], [21, null], [22, null], [23, null], [24, null], [25, null], [26, null], [27, null], [28, null], [29, null], [30, null], [33, null], [34, null], [35, null], [36, null], [37, null], [38, null], [39, null], [40, null], [41, null], [42, null], [43, null], [44, null], [45, null], [46, null], [47, null], [48, null], [49, null], [50, null], [51, null], [52, null], [53, null], [54, null], [55, null], [56, null], [57, null], [58, null], [59, null], [60, null], [62, null], [63, null], [64, null], [65, null], [66, null], [70, null], [71, null], [72, null], [73, null], [74, null], [75, null], [76, null], [77, null], [78, null], [79, null], [80, null], [81, null], [82, null], [83, null], [85, null], [86, null], [87, null], [88, null], [89, null], [90, null], [91, null], [92, null], [93, null], [94, null], [95, null], [96, null], [97, null], [98, null], [99, null], [100, null], [101, null], [102, null], [103, null], [104, null], [105, null], [107, null], [109, null], [110, null], [113, null], [114, null], [115, null], [116, null], [119, null], [120, null], [121, null], [122, null], [123, null], [124, null], [125, null], [126, null], [127, null], [128, null], [130, null], [131, null], [132, null], [133, null], [134, null], [135, null], [136, null], [137, null], [138, null], [139, null], [140, null], [141, null], [143, null], [144, null], [145, null], [146, null], [147, null], [148, null], [149, null], [150, null], [151, null], [152, null], [153, null], [154, null], [155, null], [156, null], [157, null], [158, null], [159, null], [160, null], [161, null], [162, null], [163, null], [164, null], [165, null], [166, null], [167, null], [168, null], [169, null], [170, null], [173, null], [175, null], [176, null], [177, null], [178, null], [179, null], [180, null], [181, null], [182, null], [183, null], [184, null], [185, null], [186, null], [187, null], [188, null], [189, null], [190, null], [191, null], [192, null], [193, null], [194, null], [195, null], [196, null], [197, null], [198, null], [199, null], [200, null], [201, null], [202, null], [203, null], [204, null], [205, null], [206, null], [207, null], [208, null], [209, null], [210, null], [211, null], [212, null], [213, null], [214, null], [215, null], [216, null], [217, null], [218, null], [219, null], [220, null], [221, null], [222, null], [223, null], [224, null], [225, null], [226, null], [227, null], [228, null], [232, null], [233, null], [234, null], [235, null], [236, null], [237, null], [238, null], [239, null], [240, null], [241, null], [242, null], [243, null], [244, null], [245, null], [246, null], [247, null], [248, null], [249, null], [250, null], [251, null], [253, null], [254, null], [255, null], [256, null], [257, null], [258, null], [259, null], [260, null], [266, null], [267, null], [268, null], [269, null], [270, null], [271, null], [272, null], [273, null], [274, null], [275, null], [276, null], [279, null], [280, null], [281, null], [282, null], [283, null], [284, null], [285, null], [286, null], [287, null], [288, null], [289, null], [291, null], [293, null], [294, null], [295, null], [296, null], [297, null], [298, null], [299, null], [300, null], [301, null], [302, null], [303, null], [305, null], [306, null], [307, null], [308, null], [309, null], [310, null], [311, null], [312, null], [313, null], [314, null], [315, null], [316, null], [317, null], [318, null], [319, null], [320, null], [321, null], [322, null], [323, null], [324, null], [325, null], [326, null], [327, null], [328, null], [329, null], [330, null], [331, null], [332, null], [333, null], [334, null], [335, null], [336, null], [337, null], [338, null], [340, null], [341, null], [342, null], [343, null], [344, null], [345, null], [346, null], [347, null], [351, null], [352, null], [353, null], [361, null], [362, null], [363, null], [364, null], [365, null], [369, null], [370, null], [371, null], [372, null], [373, null], [374, null], [375, null]], "ttnn.SetDefaultDevice": [[11, "ttnn-setdefaultdevice"]], "ttnn.abs": [[12, "ttnn-abs"]], "ttnn.abs_bw": [[13, "ttnn-abs-bw"]], "ttnn.acos": [[14, "ttnn-acos"]], "ttnn.acos_bw": [[15, "ttnn-acos-bw"]], "ttnn.acosh": [[16, "ttnn-acosh"]], "ttnn.acosh_bw": [[17, "ttnn-acosh-bw"]], "ttnn.add": [[18, "ttnn-add"]], "ttnn.add_bw": [[19, "ttnn-add-bw"]], "ttnn.addalpha": [[20, "ttnn-addalpha"]], "ttnn.addalpha_bw": [[21, "ttnn-addalpha-bw"]], "ttnn.addcdiv": [[22, "ttnn-addcdiv"]], "ttnn.addcdiv_bw": [[23, "ttnn-addcdiv-bw"]], "ttnn.addcmul": [[24, "ttnn-addcmul"]], "ttnn.addcmul_bw": [[25, "ttnn-addcmul-bw"]], "ttnn.all_gather": [[26, "ttnn-all-gather"]], "ttnn.alt_complex_rotate90": [[27, "ttnn-alt-complex-rotate90"]], "ttnn.angle": [[28, "ttnn-angle"]], "ttnn.angle_bw": [[29, "ttnn-angle-bw"]], "ttnn.arange": [[30, "ttnn-arange"]], "ttnn.argmax": [[31, "ttnn-argmax"]], "ttnn.as_tensor": [[32, "ttnn-as-tensor"]], "Examples": [[32, null], [304, null]], "ttnn.asin": [[33, "ttnn-asin"]], "ttnn.asin_bw": [[34, "ttnn-asin-bw"]], "ttnn.asinh": [[35, "ttnn-asinh"]], "ttnn.asinh_bw": [[36, "ttnn-asinh-bw"]], "ttnn.assign_bw": [[37, "ttnn-assign-bw"]], "ttnn.atan": [[38, "ttnn-atan"]], "ttnn.atan2": [[39, "ttnn-atan2"]], "ttnn.atan2_bw": [[40, "ttnn-atan2-bw"]], "ttnn.atan_bw": [[41, "ttnn-atan-bw"]], "ttnn.atanh": [[42, "ttnn-atanh"]], "ttnn.atanh_bw": [[43, "ttnn-atanh-bw"]], "ttnn.batch_norm": [[44, "ttnn-batch-norm"]], "ttnn.bias_gelu_bw": [[45, "ttnn-bias-gelu-bw"]], "ttnn.bitwise_and": [[46, "ttnn-bitwise-and"]], "ttnn.bitwise_left_shift": [[47, "ttnn-bitwise-left-shift"]], "ttnn.bitwise_not": [[48, "ttnn-bitwise-not"]], "ttnn.bitwise_or": [[49, "ttnn-bitwise-or"]], "ttnn.bitwise_right_shift": [[50, "ttnn-bitwise-right-shift"]], "ttnn.bitwise_xor": [[51, "ttnn-bitwise-xor"]], "ttnn.cbrt": [[52, "ttnn-cbrt"]], "ttnn.ceil": [[53, "ttnn-ceil"]], "ttnn.ceil_bw": [[54, "ttnn-ceil-bw"]], "ttnn.celu": [[55, "ttnn-celu"]], "ttnn.celu_bw": [[56, "ttnn-celu-bw"]], "ttnn.clamp": [[57, "ttnn-clamp"]], "ttnn.clamp_bw": [[58, "ttnn-clamp-bw"]], "ttnn.clip": [[59, "ttnn-clip"]], "ttnn.clip_bw": [[60, "ttnn-clip-bw"]], "ttnn.clone": [[61, "ttnn-clone"]], "ttnn.close_device": [[62, "ttnn-close-device"]], "ttnn.concat": [[63, "ttnn-concat"]], "ttnn.concat_bw": [[64, "ttnn-concat-bw"]], "ttnn.conj": [[65, "ttnn-conj"]], "ttnn.conj_bw": [[66, "ttnn-conj-bw"]], "ttnn.conv1d": [[67, "ttnn-conv1d"]], "ttnn.conv2d": [[68, "ttnn-conv2d"]], "ttnn.conv_transpose2d": [[69, "ttnn-conv-transpose2d"]], "ttnn.cos": [[70, "ttnn-cos"]], "ttnn.cos_bw": [[71, "ttnn-cos-bw"]], "ttnn.cosh": [[72, "ttnn-cosh"]], "ttnn.cosh_bw": [[73, "ttnn-cosh-bw"]], "ttnn.create_sharded_memory_config": [[74, "ttnn-create-sharded-memory-config"]], "ttnn.deallocate": [[75, "ttnn-deallocate"]], "ttnn.deg2rad": [[76, "ttnn-deg2rad"]], "ttnn.deg2rad_bw": [[77, "ttnn-deg2rad-bw"]], "ttnn.digamma": [[78, "ttnn-digamma"]], "ttnn.digamma_bw": [[79, "ttnn-digamma-bw"]], "ttnn.div": [[80, "ttnn-div"]], "ttnn.div_bw": [[81, "ttnn-div-bw"]], "ttnn.div_no_nan": [[82, "ttnn-div-no-nan"]], "ttnn.div_no_nan_bw": [[83, "ttnn-div-no-nan-bw"]], "ttnn.downsample": [[84, "ttnn-downsample"]], "ttnn.dump_tensor": [[85, "ttnn-dump-tensor"]], "ttnn.elu": [[86, "ttnn-elu"]], "ttnn.elu_bw": [[87, "ttnn-elu-bw"]], "ttnn.embedding": [[88, "ttnn-embedding"]], "ttnn.embedding_bw": [[89, "ttnn-embedding-bw"]], "ttnn.empty": [[90, "ttnn-empty"]], "ttnn.empty_like": [[91, "ttnn-empty-like"]], "ttnn.eq": [[92, "ttnn-eq"]], "ttnn.eq_": [[93, "ttnn-eq"]], "ttnn.eqz": [[94, "ttnn-eqz"]], "ttnn.erf": [[95, "ttnn-erf"]], "ttnn.erf_bw": [[96, "ttnn-erf-bw"]], "ttnn.erfc": [[97, "ttnn-erfc"]], "ttnn.erfc_bw": [[98, "ttnn-erfc-bw"]], "ttnn.erfinv": [[99, "ttnn-erfinv"]], "ttnn.erfinv_bw": [[100, "ttnn-erfinv-bw"]], "ttnn.exp": [[101, "ttnn-exp"]], "ttnn.exp2": [[102, "ttnn-exp2"]], "ttnn.exp2_bw": [[103, "ttnn-exp2-bw"]], "ttnn.exp_bw": [[104, "ttnn-exp-bw"]], "ttnn.experimental.all_reduce": [[105, "ttnn-experimental-all-reduce"]], "ttnn.experimental.conv3d": [[106, "ttnn-experimental-conv3d"]], "ttnn.experimental.cumprod": [[107, "ttnn-experimental-cumprod"]], "ttnn.experimental.cumsum": [[108, "ttnn-experimental-cumsum"]], "ttnn.experimental.dropout": [[109, "ttnn-experimental-dropout"]], "ttnn.experimental.gelu_bw": [[110, "ttnn-experimental-gelu-bw"]], "ttnn.experimental.rotary_embedding": [[111, "ttnn-experimental-rotary-embedding"]], "ttnn.experimental.sort": [[112, "ttnn-experimental-sort"]], "ttnn.expm1": [[113, "ttnn-expm1"]], "ttnn.expm1_bw": [[114, "ttnn-expm1-bw"]], "ttnn.fill": [[115, "ttnn-fill"]], "ttnn.fill_bw": [[116, "ttnn-fill-bw"]], "ttnn.fill_ones_rm": [[117, "ttnn-fill-ones-rm"]], "ttnn.fill_rm": [[118, "ttnn-fill-rm"]], "ttnn.fill_zero_bw": [[119, "ttnn-fill-zero-bw"]], "ttnn.floor": [[120, "ttnn-floor"]], "ttnn.floor_bw": [[121, "ttnn-floor-bw"]], "ttnn.floor_div": [[122, "ttnn-floor-div"]], "ttnn.fmod": [[123, "ttnn-fmod"]], "ttnn.fmod_bw": [[124, "ttnn-fmod-bw"]], "ttnn.format_input_tensor": [[125, "ttnn-format-input-tensor"]], "ttnn.format_output_tensor": [[126, "ttnn-format-output-tensor"]], "ttnn.frac": [[127, "ttnn-frac"]], "ttnn.frac_bw": [[128, "ttnn-frac-bw"]], "ttnn.from_device": [[129, "ttnn-from-device"]], "ttnn.from_torch": [[130, "ttnn-from-torch"]], "ttnn.full": [[131, "ttnn-full"]], "ttnn.full_like": [[132, "ttnn-full-like"]], "ttnn.gcd": [[133, "ttnn-gcd"]], "ttnn.ge": [[134, "ttnn-ge"]], "ttnn.ge_": [[135, "ttnn-ge"]], "ttnn.geglu": [[136, "ttnn-geglu"]], "ttnn.gelu": [[137, "ttnn-gelu"]], "ttnn.gelu_bw": [[138, "ttnn-gelu-bw"]], "ttnn.gez": [[139, "ttnn-gez"]], "ttnn.global_avg_pool2d": [[140, "ttnn-global-avg-pool2d"]], "ttnn.glu": [[141, "ttnn-glu"]], "ttnn.group_norm": [[142, "ttnn-group-norm"]], "ttnn.gt": [[143, "ttnn-gt"]], "ttnn.gt_": [[144, "ttnn-gt"]], "ttnn.gtz": [[145, "ttnn-gtz"]], "ttnn.hardshrink": [[146, "ttnn-hardshrink"]], "ttnn.hardshrink_bw": [[147, "ttnn-hardshrink-bw"]], "ttnn.hardsigmoid": [[148, "ttnn-hardsigmoid"]], "ttnn.hardsigmoid_bw": [[149, "ttnn-hardsigmoid-bw"]], "ttnn.hardswish": [[150, "ttnn-hardswish"]], "ttnn.hardswish_bw": [[151, "ttnn-hardswish-bw"]], "ttnn.hardtanh": [[152, "ttnn-hardtanh"]], "ttnn.hardtanh_bw": [[153, "ttnn-hardtanh-bw"]], "ttnn.heaviside": [[154, "ttnn-heaviside"]], "ttnn.hypot": [[155, "ttnn-hypot"]], "ttnn.hypot_bw": [[156, "ttnn-hypot-bw"]], "ttnn.i0": [[157, "ttnn-i0"]], "ttnn.i0_bw": [[158, "ttnn-i0-bw"]], "ttnn.identity": [[159, "ttnn-identity"]], "ttnn.imag": [[160, "ttnn-imag"]], "ttnn.imag_bw": [[161, "ttnn-imag-bw"]], "ttnn.indexed_fill": [[162, "ttnn-indexed-fill"]], "ttnn.is_imag": [[163, "ttnn-is-imag"]], "ttnn.is_real": [[164, "ttnn-is-real"]], "ttnn.isclose": [[165, "ttnn-isclose"]], "ttnn.isfinite": [[166, "ttnn-isfinite"]], "ttnn.isinf": [[167, "ttnn-isinf"]], "ttnn.isnan": [[168, "ttnn-isnan"]], "ttnn.isneginf": [[169, "ttnn-isneginf"]], "ttnn.isposinf": [[170, "ttnn-isposinf"]], "ttnn.kv_cache.fill_cache_for_user_": [[171, "ttnn-kv-cache-fill-cache-for-user"]], "ttnn.kv_cache.update_cache_for_token_": [[172, "ttnn-kv-cache-update-cache-for-token"]], "ttnn.l1_loss": [[173, "ttnn-l1-loss"]], "ttnn.layer_norm": [[174, "ttnn-layer-norm"]], "ttnn.lcm": [[175, "ttnn-lcm"]], "ttnn.ldexp": [[176, "ttnn-ldexp"]], "ttnn.ldexp_bw": [[177, "ttnn-ldexp-bw"]], "ttnn.le": [[178, "ttnn-le"]], "ttnn.le_": [[179, "ttnn-le"]], "ttnn.leaky_relu": [[180, "ttnn-leaky-relu"]], "ttnn.leaky_relu_bw": [[181, "ttnn-leaky-relu-bw"]], "ttnn.lerp": [[182, "ttnn-lerp"]], "ttnn.lerp_bw": [[183, "ttnn-lerp-bw"]], "ttnn.lez": [[184, "ttnn-lez"]], "ttnn.lgamma": [[185, "ttnn-lgamma"]], "ttnn.lgamma_bw": [[186, "ttnn-lgamma-bw"]], "ttnn.linear": [[187, "ttnn-linear"]], "ttnn.load_tensor": [[188, "ttnn-load-tensor"]], "ttnn.log": [[189, "ttnn-log"]], "ttnn.log10": [[190, "ttnn-log10"]], "ttnn.log10_bw": [[191, "ttnn-log10-bw"]], "ttnn.log1p": [[192, "ttnn-log1p"]], "ttnn.log1p_bw": [[193, "ttnn-log1p-bw"]], "ttnn.log2": [[194, "ttnn-log2"]], "ttnn.log2_bw": [[195, "ttnn-log2-bw"]], "ttnn.log_bw": [[196, "ttnn-log-bw"]], "ttnn.log_sigmoid": [[197, "ttnn-log-sigmoid"]], "ttnn.log_sigmoid_bw": [[198, "ttnn-log-sigmoid-bw"]], "ttnn.logaddexp": [[199, "ttnn-logaddexp"]], "ttnn.logaddexp2": [[200, "ttnn-logaddexp2"]], "ttnn.logaddexp2_bw": [[201, "ttnn-logaddexp2-bw"]], "ttnn.logaddexp_bw": [[202, "ttnn-logaddexp-bw"]], "ttnn.logical_and": [[203, "ttnn-logical-and"]], "ttnn.logical_and_": [[204, "ttnn-logical-and"]], "ttnn.logical_not": [[205, "ttnn-logical-not"]], "ttnn.logical_not_": [[206, "ttnn-logical-not"]], "ttnn.logical_or": [[207, "ttnn-logical-or"]], "ttnn.logical_or_": [[208, "ttnn-logical-or"]], "ttnn.logical_xor": [[209, "ttnn-logical-xor"]], "ttnn.logical_xor_": [[210, "ttnn-logical-xor"]], "ttnn.logit": [[211, "ttnn-logit"]], "ttnn.logit_bw": [[212, "ttnn-logit-bw"]], "ttnn.logiteps_bw": [[213, "ttnn-logiteps-bw"]], "ttnn.lt": [[214, "ttnn-lt"]], "ttnn.lt_": [[215, "ttnn-lt"]], "ttnn.ltz": [[216, "ttnn-ltz"]], "ttnn.mac": [[217, "ttnn-mac"]], "ttnn.manage_device": [[218, "ttnn-manage-device"]], "ttnn.matmul": [[219, "ttnn-matmul"]], "ttnn.max": [[220, "ttnn-max"]], "ttnn.max_bw": [[221, "ttnn-max-bw"]], "ttnn.max_pool2d": [[222, "ttnn-max-pool2d"]], "ttnn.maximum": [[223, "ttnn-maximum"]], "ttnn.mean": [[224, "ttnn-mean"]], "ttnn.min": [[225, "ttnn-min"]], "ttnn.min_bw": [[226, "ttnn-min-bw"]], "ttnn.minimum": [[227, "ttnn-minimum"]], "ttnn.mish": [[228, "ttnn-mish"]], "ttnn.model_preprocessing.preprocess_model": [[229, "ttnn-model-preprocessing-preprocess-model"]], "ttnn.model_preprocessing.preprocess_model_parameters": [[230, "ttnn-model-preprocessing-preprocess-model-parameters"]], "ttnn.moreh_sum": [[231, "ttnn-moreh-sum"]], "ttnn.mse_loss": [[232, "ttnn-mse-loss"]], "ttnn.mul_bw": [[233, "ttnn-mul-bw"]], "ttnn.multigammaln": [[234, "ttnn-multigammaln"]], "ttnn.multigammaln_bw": [[235, "ttnn-multigammaln-bw"]], "ttnn.multiply": [[236, "ttnn-multiply"]], "ttnn.ne": [[237, "ttnn-ne"]], "ttnn.ne_": [[238, "ttnn-ne"]], "ttnn.neg": [[239, "ttnn-neg"]], "ttnn.neg_bw": [[240, "ttnn-neg-bw"]], "ttnn.nextafter": [[241, "ttnn-nextafter"]], "ttnn.nez": [[242, "ttnn-nez"]], "ttnn.nonzero": [[243, "ttnn-nonzero"]], "ttnn.normalize_global": [[244, "ttnn-normalize-global"]], "ttnn.normalize_hw": [[245, "ttnn-normalize-hw"]], "ttnn.ones": [[246, "ttnn-ones"]], "ttnn.ones_like": [[247, "ttnn-ones-like"]], "ttnn.open_device": [[248, "ttnn-open-device"]], "ttnn.outer": [[249, "ttnn-outer"]], "ttnn.pad": [[250, "ttnn-pad"]], "ttnn.pad_to_tile_shape": [[251, "ttnn-pad-to-tile-shape"]], "ttnn.permute": [[252, "ttnn-permute"]], "ttnn.polar": [[253, "ttnn-polar"]], "ttnn.polar_bw": [[254, "ttnn-polar-bw"]], "ttnn.polygamma": [[255, "ttnn-polygamma"]], "ttnn.polygamma_bw": [[256, "ttnn-polygamma-bw"]], "ttnn.polyval": [[257, "ttnn-polyval"]], "ttnn.pow": [[258, "ttnn-pow"]], "ttnn.pow_bw": [[259, "ttnn-pow-bw"]], "ttnn.prelu": [[260, "ttnn-prelu"]], "ttnn.prepare_conv_bias": [[261, "ttnn-prepare-conv-bias"]], "ttnn.prepare_conv_transpose2d_bias": [[262, "ttnn-prepare-conv-transpose2d-bias"]], "ttnn.prepare_conv_transpose2d_weights": [[263, "ttnn-prepare-conv-transpose2d-weights"]], "ttnn.prepare_conv_weights": [[264, "ttnn-prepare-conv-weights"]], "ttnn.prod": [[265, "ttnn-prod"]], "ttnn.prod_bw": [[266, "ttnn-prod-bw"]], "ttnn.rad2deg": [[267, "ttnn-rad2deg"]], "ttnn.rad2deg_bw": [[268, "ttnn-rad2deg-bw"]], "ttnn.rdiv": [[269, "ttnn-rdiv"]], "ttnn.rdiv_bw": [[270, "ttnn-rdiv-bw"]], "ttnn.real": [[271, "ttnn-real"]], "ttnn.real_bw": [[272, "ttnn-real-bw"]], "ttnn.reallocate": [[273, "ttnn-reallocate"]], "ttnn.reciprocal": [[274, "ttnn-reciprocal"]], "ttnn.reciprocal_bw": [[275, "ttnn-reciprocal-bw"]], "ttnn.reduce_scatter": [[276, "ttnn-reduce-scatter"]], "ttnn.register_post_operation_hook": [[277, "ttnn-register-post-operation-hook"]], "ttnn.register_pre_operation_hook": [[278, "ttnn-register-pre-operation-hook"]], "ttnn.reglu": [[279, "ttnn-reglu"]], "ttnn.relu": [[280, "ttnn-relu"]], "ttnn.relu6": [[281, "ttnn-relu6"]], "ttnn.relu6_bw": [[282, "ttnn-relu6-bw"]], "ttnn.relu_bw": [[283, "ttnn-relu-bw"]], "ttnn.relu_max": [[284, "ttnn-relu-max"]], "ttnn.relu_min": [[285, "ttnn-relu-min"]], "ttnn.remainder": [[286, "ttnn-remainder"]], "ttnn.remainder_bw": [[287, "ttnn-remainder-bw"]], "ttnn.repeat": [[288, "ttnn-repeat"]], "ttnn.repeat_bw": [[289, "ttnn-repeat-bw"]], "ttnn.repeat_interleave": [[290, "ttnn-repeat-interleave"]], "ttnn.reshape": [[291, "ttnn-reshape"]], "ttnn.rms_norm": [[292, "ttnn-rms-norm"]], "ttnn.round": [[293, "ttnn-round"]], "ttnn.round_bw": [[294, "ttnn-round-bw"]], "ttnn.rpow": [[295, "ttnn-rpow"]], "ttnn.rpow_bw": [[296, "ttnn-rpow-bw"]], "ttnn.rsqrt": [[297, "ttnn-rsqrt"]], "ttnn.rsqrt_bw": [[298, "ttnn-rsqrt-bw"]], "ttnn.rsub": [[299, "ttnn-rsub"]], "ttnn.rsub_bw": [[300, "ttnn-rsub-bw"]], "ttnn.scatter": [[301, "ttnn-scatter"]], "ttnn.selu": [[302, "ttnn-selu"]], "ttnn.selu_bw": [[303, "ttnn-selu-bw"]], "ttnn.set_printoptions": [[304, "ttnn-set-printoptions"]], "ttnn.sigmoid": [[305, "ttnn-sigmoid"]], "ttnn.sigmoid_accurate": [[306, "ttnn-sigmoid-accurate"]], "ttnn.sigmoid_bw": [[307, "ttnn-sigmoid-bw"]], "ttnn.sign": [[308, "ttnn-sign"]], "ttnn.sign_bw": [[309, "ttnn-sign-bw"]], "ttnn.signbit": [[310, "ttnn-signbit"]], "ttnn.silu": [[311, "ttnn-silu"]], "ttnn.silu_bw": [[312, "ttnn-silu-bw"]], "ttnn.sin": [[313, "ttnn-sin"]], "ttnn.sin_bw": [[314, "ttnn-sin-bw"]], "ttnn.sinh": [[315, "ttnn-sinh"]], "ttnn.sinh_bw": [[316, "ttnn-sinh-bw"]], "ttnn.slice": [[317, "ttnn-slice"]], "ttnn.softmax": [[318, "ttnn-softmax"]], "ttnn.softplus": [[319, "ttnn-softplus"]], "ttnn.softplus_bw": [[320, "ttnn-softplus-bw"]], "ttnn.softshrink": [[321, "ttnn-softshrink"]], "ttnn.softshrink_bw": [[322, "ttnn-softshrink-bw"]], "ttnn.softsign": [[323, "ttnn-softsign"]], "ttnn.softsign_bw": [[324, "ttnn-softsign-bw"]], "ttnn.sqrt": [[325, "ttnn-sqrt"]], "ttnn.sqrt_bw": [[326, "ttnn-sqrt-bw"]], "ttnn.square": [[327, "ttnn-square"]], "ttnn.square_bw": [[328, "ttnn-square-bw"]], "ttnn.squared_difference": [[329, "ttnn-squared-difference"]], "ttnn.squared_difference_bw": [[330, "ttnn-squared-difference-bw"]], "ttnn.std": [[331, "ttnn-std"]], "ttnn.sub_bw": [[332, "ttnn-sub-bw"]], "ttnn.subalpha": [[333, "ttnn-subalpha"]], "ttnn.subalpha_bw": [[334, "ttnn-subalpha-bw"]], "ttnn.subtract": [[335, "ttnn-subtract"]], "ttnn.sum": [[336, "ttnn-sum"]], "ttnn.swiglu": [[337, "ttnn-swiglu"]], "ttnn.swish": [[338, "ttnn-swish"]], "ttnn.synchronize_device": [[339, "ttnn-synchronize-device"]], "ttnn.tan": [[340, "ttnn-tan"]], "ttnn.tan_bw": [[341, "ttnn-tan-bw"]], "ttnn.tanh": [[342, "ttnn-tanh"]], "ttnn.tanh_bw": [[343, "ttnn-tanh-bw"]], "ttnn.tanhshrink": [[344, "ttnn-tanhshrink"]], "ttnn.tanhshrink_bw": [[345, "ttnn-tanhshrink-bw"]], "ttnn.threshold": [[346, "ttnn-threshold"]], "ttnn.threshold_bw": [[347, "ttnn-threshold-bw"]], "ttnn.tilize": [[348, "ttnn-tilize"]], "ttnn.tilize_with_val_padding": [[349, "ttnn-tilize-with-val-padding"]], "ttnn.to_device": [[350, "ttnn-to-device"]], "ttnn.to_layout": [[351, "ttnn-to-layout"]], "ttnn.to_memory_config": [[352, "ttnn-to-memory-config"]], "ttnn.to_torch": [[353, "ttnn-to-torch"]], "ttnn.topk": [[354, "ttnn-topk"]], "ttnn.transformer.attention_softmax": [[355, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.attention_softmax_": [[356, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.concatenate_heads": [[357, "ttnn-transformer-concatenate-heads"]], "ttnn.transformer.scaled_dot_product_attention": [[358, "ttnn-transformer-scaled-dot-product-attention"]], "ttnn.transformer.scaled_dot_product_attention_decode": [[359, "ttnn-transformer-scaled-dot-product-attention-decode"]], "ttnn.transformer.split_query_key_value_and_split_heads": [[360, "ttnn-transformer-split-query-key-value-and-split-heads"]], "ttnn.tril": [[361, "ttnn-tril"]], "ttnn.triu": [[362, "ttnn-triu"]], "ttnn.trunc": [[363, "ttnn-trunc"]], "ttnn.trunc_bw": [[364, "ttnn-trunc-bw"]], "ttnn.unary_chain": [[365, "ttnn-unary-chain"]], "ttnn.untilize": [[366, "ttnn-untilize"]], "ttnn.untilize_with_unpadding": [[367, "ttnn-untilize-with-unpadding"]], "ttnn.upsample": [[368, "ttnn-upsample"]], "ttnn.var": [[369, "ttnn-var"]], "ttnn.where": [[370, "ttnn-where"]], "ttnn.where_bw": [[371, "ttnn-where-bw"]], "ttnn.xlogy": [[372, "ttnn-xlogy"]], "ttnn.xlogy_bw": [[373, "ttnn-xlogy-bw"]], "ttnn.zeros": [[374, "ttnn-zeros"]], "ttnn.zeros_like": [[375, "ttnn-zeros-like"]], "Converting PyTorch Model to TT-NN": [[376, "converting-pytorch-model-to-tt-nn"]], "Step 1 - Rewriting the Model": [[376, "step-1-rewriting-the-model"]], "Step 2 - Switching to ttnn Operations": [[376, "step-2-switching-to-ttnn-operations"]], "Step 3 - Optimizing the Model": [[376, "step-3-optimizing-the-model"]], "More examples": [[376, "more-examples"]], "Building and Uplifting Demos": [[377, "building-and-uplifting-demos"]], "1. Install and Build": [[378, "install-and-build"]], "2. Explore Our Model Demos": [[378, "explore-our-model-demos"]], "3. TT-NN Tutorial: Multi-Head Attention (Simple)": [[378, "tt-nn-tutorial-multi-head-attention-simple"]], "4. TT-NN Tutorial: Multi-Head Attention (Optimized)": [[378, "tt-nn-tutorial-multi-head-attention-optimized"]], "Where To Go From Here": [[378, "where-to-go-from-here"]], "Install": [[379, "install"]], "Prerequisites:": [[379, "prerequisites"]], "1: Set Up the Hardware": [[379, "set-up-the-hardware"]], "2: Install Driver & Firmware": [[379, "install-driver-firmware"]], "Install System-level Dependencies": [[379, "install-system-level-dependencies"]], "Install the Driver (TT-KMD)": [[379, "install-the-driver-tt-kmd"]], "Update Device TT-Firmware with TT-Flash": [[379, "update-device-tt-firmware-with-tt-flash"]], "Install System Management Interface (TT-SMI)": [[379, "install-system-management-interface-tt-smi"]], "(Optional) Multi-Card Configuration (TT-Topology)": [[379, "optional-multi-card-configuration-tt-topology"]], "TT-NN / TT-Metalium Installation": [[379, "tt-nn-tt-metalium-installation"]], "There are three options for installing TT-Metalium:": [[379, "there-are-three-options-for-installing-tt-metalium"]], "Option 1: From Source": [[379, "option-1-from-source"]], "Step 1. Clone the Repository:": [[379, "step-1-clone-the-repository"]], "Step 2. Invoke our Build Scripts:": [[379, "step-2-invoke-our-build-scripts"]], "Option 2: From Docker Release Image": [[379, "option-2-from-docker-release-image"]], "Option 3: From Wheel": [[379, "option-3-from-wheel"]], "Step 1. Download and Install the Latest Wheel:": [[379, "step-1-download-and-install-the-latest-wheel"]], "Step 2. (For models users only) Set Up Environment for Models:": [[379, "step-2-for-models-users-only-set-up-environment-for-models"]], "You are All Set!": [[379, "you-are-all-set"]], "To verify your installation, try executing a programming example:": [[379, "to-verify-your-installation-try-executing-a-programming-example"]], "Interested in Contributing?": [[379, "interested-in-contributing"]], "Onboarding New Functionality": [[380, "onboarding-new-functionality"]], "Profiling TT-NN Operations": [[381, "profiling-tt-nn-operations"]], "Perf Report Headers": [[381, "perf-report-headers"]], "profile_this description": [[381, "profile-this-description"]], "Tensor": [[382, "tensor"]], "Shape": [[382, "shape"]], "Layout": [[382, "layout"], [391, "Layout"]], "Data Type": [[382, "data-type"], [391, "Data-Type"]], "Required Width Multiples for Data Types": [[382, "id4"]], "Limitation of BFLOAT8_B": [[382, "limitation-of-bfloat8-b"]], "Storage": [[382, "storage"]], "Tensor Sharding": [[382, "tensor-sharding"]], "Tutorials": [[383, "id1"]], "Graphing Torch DiT_XL_2 With TTNN": [[384, "graphing-torch-dit-xl-2-with-ttnn"]], "Matmul Operation": [[385, "matmul-operation"]], "Multi-Head Attention": [[386, "multi-head-attention"], [393, "Multi-Head-Attention"]], "ttnn Profiling": [[387, "ttnn-profiling"]], "Resnet Basic Block": [[388, "resnet-basic-block"]], "Tensor and Add Operation": [[389, "tensor-and-add-operation"], [391, "Tensor-and-Add-Operation"]], "ttnn Tracer": [[390, "ttnn-tracer"]], "Creating a tensor": [[391, "Creating-a-tensor"]], "Host Storage: Borrowed vs Owned": [[391, "Host-Storage:-Borrowed-vs-Owned"]], "Device storage": [[391, "Device-storage"]], "Open the device": [[391, "Open-the-device"]], "Initialize tensors a and b with random values using torch": [[391, "Initialize-tensors-a-and-b-with-random-values-using-torch"], [392, "Initialize-tensors-a-and-b-with-random-values-using-torch"]], "Add tensor a and b": [[391, "Add-tensor-a-and-b"]], "Inspect the output tensor of the add in ttnn": [[391, "Inspect-the-output-tensor-of-the-add-in-ttnn"]], "Convert to torch and inspect the attributes of the torch tensor": [[391, "Convert-to-torch-and-inspect-the-attributes-of-the-torch-tensor"]], "Close the device": [[391, "Close-the-device"], [392, "Close-the-device"], [393, "Close-the-device"]], "Enable program cache": [[392, "Enable-program-cache"], [393, "Enable-program-cache"]], "Configuration": [[392, "Configuration"], [393, "Configuration"]], "Matrix multiply tensor a and b": [[392, "Matrix-multiply-tensor-a-and-b"]], "Inspect the layout of matrix multiplication output": [[392, "Inspect-the-layout-of-matrix-multiplication-output"]], "Inspect the result of the matrix multiplication": [[392, "Inspect-the-result-of-the-matrix-multiplication"]], "Matrix multiply tensor a and b by using more performant config": [[392, "Matrix-multiply-tensor-a-and-b-by-using-more-performant-config"]], "Write Multi-Head Attention using ttnn": [[393, "Write-Multi-Head-Attention-using-ttnn"]], "Initialize activations and weights using torch": [[393, "Initialize-activations-and-weights-using-torch"]], "Convert activations and weights to ttnn": [[393, "Convert-activations-and-weights-to-ttnn"]], "Run the first iteration of Multi-Head Attention": [[393, "Run-the-first-iteration-of-Multi-Head-Attention"]], "Run a subsequent iteration of Multi-Head Attention": [[393, "Run-a-subsequent-iteration-of-Multi-Head-Attention"]], "Write optimized version of Multi-Head Attention": [[393, "Write-optimized-version-of-Multi-Head-Attention"]], "Pre-process the parameters of the optimized model": [[393, "Pre-process-the-parameters-of-the-optimized-model"]], "Run the first iteration of the optimized Multi-Head Attention": [[393, "Run-the-first-iteration-of-the-optimized-Multi-Head-Attention"]], "Run a subsequent iteration of the optimized Multi-Head Attention": [[393, "Run-a-subsequent-iteration-of-the-optimized-Multi-Head-Attention"]], "Check that the output of the optimized version matches the output of the original implementation": [[393, "Check-that-the-output-of-the-optimized-version-matches-the-output-of-the-original-implementation"]], "Tracing ttnn operations and torch modules/functions": [[394, "Tracing-ttnn-operations-and-torch-modules/functions"]], "Trace torch functions": [[394, "Trace-torch-functions"]], "Trace torch functions and ttnn operations": [[394, "Trace-torch-functions-and-ttnn-operations"]], "Trace torch functions, torch modules and ttnn operations": [[394, "Trace-torch-functions,-torch-modules-and-ttnn-operations"]], "Trace models written using ttnn": [[394, "Trace-models-written-using-ttnn"]], "Profiling ttnn operations": [[395, "Profiling-ttnn-operations"]], "Resnet Block": [[396, "Resnet-Block"]], "Torch Module (from torchvision)": [[396, "Torch-Module-(from-torchvision)"]], "Create torch module and preprocess it to get ttnn parameters": [[396, "Create-torch-module-and-preprocess-it-to-get-ttnn-parameters"]], "Display the parameters of the module": [[396, "Display-the-parameters-of-the-module"]], "Display the traced torch graph": [[396, "Display-the-traced-torch-graph"]], "Implement ttnn version of the module. Pass in the parameters into the constructor.": [[396, "Implement-ttnn-version-of-the-module.-Pass-in-the-parameters-into-the-constructor."]], "Run ttnn module and display the traced graph": [[396, "Run-ttnn-module-and-display-the-traced-graph"]], "Build a graph of a pytorch based model": [[397, "Build-a-graph-of-a-pytorch-based-model"]], "Clone the library from https://github.com/facebookresearch/DiT.git": [[397, "Clone-the-library-from-https://github.com/facebookresearch/DiT.git"]], "Download DiT-XL/2 Models": [[397, "Download-DiT-XL/2-Models"]], "Sample from Pre-trained DiT Models and build the graph": [[397, "Sample-from-Pre-trained-DiT-Models-and-build-the-graph"]], "Display the graph": [[397, "Display-the-graph"]], "Using TT-NN": [[398, "using-tt-nn"]], "Basic Examples": [[398, "basic-examples"]], "1. Converting from and to torch tensor": [[398, "converting-from-and-to-torch-tensor"]], "2. Running an operation on the device": [[398, "running-an-operation-on-the-device"]], "3. Using __getitem__ to slice the tensor": [[398, "using-getitem-to-slice-the-tensor"]], "4. Enabling program cache": [[398, "enabling-program-cache"]], "5. Debugging intermediate tensors": [[398, "debugging-intermediate-tensors"]], "6. Tracing the graph of operations": [[398, "tracing-the-graph-of-operations"]], "7. Using tt_lib operation in TT-NN": [[398, "using-tt-lib-operation-in-tt-nn"]], "8. Enabling Logging": [[398, "enabling-logging"]], "9. Supported Python Operators": [[398, "supported-python-operators"]], "10. Changing the string representation of the tensor": [[398, "changing-the-string-representation-of-the-tensor"]], "11. Visualize using Web Browser": [[398, "visualize-using-web-browser"]], "12. Register pre- and/or post-operation hooks": [[398, "register-pre-and-or-post-operation-hooks"]], "13. Query all operations": [[398, "query-all-operations"]], "14. Falling back to torch": [[398, "falling-back-to-torch"]], "15. Capturing graph of C++ functions, buffer allocations, etc": [[398, "capturing-graph-of-c-functions-buffer-allocations-etc"]]}, "indexentries": {"conv2dconfig (class in ttnn)": [[8, "ttnn.Conv2dConfig"]], "act_block_h_override (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.act_block_h_override"]], "act_block_w_div (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.act_block_w_div"]], "activation (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.activation"]], "always_preprocess_weights (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.always_preprocess_weights"]], "core_grid (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.core_grid"]], "deallocate_activation (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.deallocate_activation"]], "dtype (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.dtype"]], "enable_act_double_buffer (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.enable_act_double_buffer"]], "enable_kernel_stride_folding (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.enable_kernel_stride_folding"]], "enable_split_reader (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.enable_split_reader"]], "enable_subblock_padding (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.enable_subblock_padding"]], "enable_weights_double_buffer (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.enable_weights_double_buffer"]], "in_place (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.in_place"]], "output_layout (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.output_layout"]], "override_sharding_config (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.override_sharding_config"]], "preprocess_weights_on_device (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.preprocess_weights_on_device"]], "reallocate_halo_output (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.reallocate_halo_output"]], "reshard_if_not_optimal (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.reshard_if_not_optimal"]], "shard_layout (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.shard_layout"]], "transpose_shards (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.transpose_shards"]], "weights_dtype (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.weights_dtype"]], "conv2dsliceconfig (class in ttnn)": [[9, "ttnn.Conv2dSliceConfig"]], "conv2dsliceconfig.slicetypeenum (class in ttnn)": [[9, "ttnn.Conv2dSliceConfig.SliceTypeEnum"]], "sliceheight (ttnn.conv2dsliceconfig.slicetypeenum attribute)": [[9, "ttnn.Conv2dSliceConfig.SliceTypeEnum.SliceHeight"]], "slicewidth (ttnn.conv2dsliceconfig.slicetypeenum attribute)": [[9, "ttnn.Conv2dSliceConfig.SliceTypeEnum.SliceWidth"]], "name (ttnn.conv2dsliceconfig.slicetypeenum property)": [[9, "ttnn.Conv2dSliceConfig.SliceTypeEnum.name"]], "num_slices (ttnn.conv2dsliceconfig property)": [[9, "ttnn.Conv2dSliceConfig.num_slices"]], "slice_type (ttnn.conv2dsliceconfig property)": [[9, "ttnn.Conv2dSliceConfig.slice_type"]], "value (ttnn.conv2dsliceconfig.slicetypeenum property)": [[9, "ttnn.Conv2dSliceConfig.SliceTypeEnum.value"]], "getdefaultdevice() (in module ttnn)": [[10, "ttnn.GetDefaultDevice"]], "setdefaultdevice() (in module ttnn)": [[11, "ttnn.SetDefaultDevice"]], "abs (in module ttnn)": [[12, "ttnn.abs"]], "abs_bw (in module ttnn)": [[13, "ttnn.abs_bw"]], "acos (in module ttnn)": [[14, "ttnn.acos"]], "acos_bw (in module ttnn)": [[15, "ttnn.acos_bw"]], "acosh (in module ttnn)": [[16, "ttnn.acosh"]], "acosh_bw (in module ttnn)": [[17, "ttnn.acosh_bw"]], "add (in module ttnn)": [[18, "ttnn.add"]], "add_bw (in module ttnn)": [[19, "ttnn.add_bw"]], "addalpha (in module ttnn)": [[20, "ttnn.addalpha"]], "addalpha_bw (in module ttnn)": [[21, "ttnn.addalpha_bw"]], "addcdiv (in module ttnn)": [[22, "ttnn.addcdiv"]], "addcdiv_bw (in module ttnn)": [[23, "ttnn.addcdiv_bw"]], "addcmul (in module ttnn)": [[24, "ttnn.addcmul"]], "addcmul_bw (in module ttnn)": [[25, "ttnn.addcmul_bw"]], "all_gather (in module ttnn)": [[26, "ttnn.all_gather"]], "alt_complex_rotate90 (in module ttnn)": [[27, "ttnn.alt_complex_rotate90"]], "angle (in module ttnn)": [[28, "ttnn.angle"]], "angle_bw (in module ttnn)": [[29, "ttnn.angle_bw"]], "arange (in module ttnn)": [[30, "ttnn.arange"]], "argmax (in module ttnn)": [[31, "ttnn.argmax"]], "as_tensor (in module ttnn)": [[32, "ttnn.as_tensor"]], "asin (in module ttnn)": [[33, "ttnn.asin"]], "asin_bw (in module ttnn)": [[34, "ttnn.asin_bw"]], "asinh (in module ttnn)": [[35, "ttnn.asinh"]], "asinh_bw (in module ttnn)": [[36, "ttnn.asinh_bw"]], "assign_bw (in module ttnn)": [[37, "ttnn.assign_bw"]], "atan (in module ttnn)": [[38, "ttnn.atan"]], "atan2 (in module ttnn)": [[39, "ttnn.atan2"]], "atan2_bw (in module ttnn)": [[40, "ttnn.atan2_bw"]], "atan_bw (in module ttnn)": [[41, "ttnn.atan_bw"]], "atanh (in module ttnn)": [[42, "ttnn.atanh"]], "atanh_bw (in module ttnn)": [[43, "ttnn.atanh_bw"]], "batch_norm (in module ttnn)": [[44, "ttnn.batch_norm"]], "bias_gelu_bw (in module ttnn)": [[45, "ttnn.bias_gelu_bw"]], "bitwise_and (in module ttnn)": [[46, "ttnn.bitwise_and"]], "bitwise_left_shift (in module ttnn)": [[47, "ttnn.bitwise_left_shift"]], "bitwise_not (in module ttnn)": [[48, "ttnn.bitwise_not"]], "bitwise_or (in module ttnn)": [[49, "ttnn.bitwise_or"]], "bitwise_right_shift (in module ttnn)": [[50, "ttnn.bitwise_right_shift"]], "bitwise_xor (in module ttnn)": [[51, "ttnn.bitwise_xor"]], "cbrt (in module ttnn)": [[52, "ttnn.cbrt"]], "ceil (in module ttnn)": [[53, "ttnn.ceil"]], "ceil_bw (in module ttnn)": [[54, "ttnn.ceil_bw"]], "celu (in module ttnn)": [[55, "ttnn.celu"]], "celu_bw (in module ttnn)": [[56, "ttnn.celu_bw"]], "clamp (in module ttnn)": [[57, "ttnn.clamp"]], "clamp_bw (in module ttnn)": [[58, "ttnn.clamp_bw"]], "clip (in module ttnn)": [[59, "ttnn.clip"]], "clip_bw (in module ttnn)": [[60, "ttnn.clip_bw"]], "clone (in module ttnn)": [[61, "ttnn.clone"]], "close_device() (in module ttnn)": [[62, "ttnn.close_device"]], "concat (in module ttnn)": [[63, "ttnn.concat"]], "concat_bw (in module ttnn)": [[64, "ttnn.concat_bw"]], "conj (in module ttnn)": [[65, "ttnn.conj"]], "conj_bw (in module ttnn)": [[66, "ttnn.conj_bw"]], "conv1d (in module ttnn)": [[67, "ttnn.conv1d"]], "conv2d (in module ttnn)": [[68, "ttnn.conv2d"]], "conv_transpose2d (in module ttnn)": [[69, "ttnn.conv_transpose2d"]], "cos (in module ttnn)": [[70, "ttnn.cos"]], "cos_bw (in module ttnn)": [[71, "ttnn.cos_bw"]], "cosh (in module ttnn)": [[72, "ttnn.cosh"]], "cosh_bw (in module ttnn)": [[73, "ttnn.cosh_bw"]], "create_sharded_memory_config() (in module ttnn)": [[74, "ttnn.create_sharded_memory_config"]], "deallocate (in module ttnn)": [[75, "ttnn.deallocate"]], "deg2rad (in module ttnn)": [[76, "ttnn.deg2rad"]], "deg2rad_bw (in module ttnn)": [[77, "ttnn.deg2rad_bw"]], "digamma (in module ttnn)": [[78, "ttnn.digamma"]], "digamma_bw (in module ttnn)": [[79, "ttnn.digamma_bw"]], "div (in module ttnn)": [[80, "ttnn.div"]], "div_bw (in module ttnn)": [[81, "ttnn.div_bw"]], "div_no_nan (in module ttnn)": [[82, "ttnn.div_no_nan"]], "div_no_nan_bw (in module ttnn)": [[83, "ttnn.div_no_nan_bw"]], "downsample (in module ttnn)": [[84, "ttnn.downsample"]], "dump_tensor (in module ttnn)": [[85, "ttnn.dump_tensor"]], "elu (in module ttnn)": [[86, "ttnn.elu"]], "elu_bw (in module ttnn)": [[87, "ttnn.elu_bw"]], "embedding (in module ttnn)": [[88, "ttnn.embedding"]], "embedding_bw (in module ttnn)": [[89, "ttnn.embedding_bw"]], "empty (in module ttnn)": [[90, "ttnn.empty"]], "empty_like (in module ttnn)": [[91, "ttnn.empty_like"]], "eq (in module ttnn)": [[92, "ttnn.eq"]], "eq_ (in module ttnn)": [[93, "ttnn.eq_"]], "eqz (in module ttnn)": [[94, "ttnn.eqz"]], "erf (in module ttnn)": [[95, "ttnn.erf"]], "erf_bw (in module ttnn)": [[96, "ttnn.erf_bw"]], "erfc (in module ttnn)": [[97, "ttnn.erfc"]], "erfc_bw (in module ttnn)": [[98, "ttnn.erfc_bw"]], "erfinv (in module ttnn)": [[99, "ttnn.erfinv"]], "erfinv_bw (in module ttnn)": [[100, "ttnn.erfinv_bw"]], "exp (in module ttnn)": [[101, "ttnn.exp"]], "exp2 (in module ttnn)": [[102, "ttnn.exp2"]], "exp2_bw (in module ttnn)": [[103, "ttnn.exp2_bw"]], "exp_bw (in module ttnn)": [[104, "ttnn.exp_bw"]], "all_reduce (in module ttnn.experimental)": [[105, "ttnn.experimental.all_reduce"]], "conv3d (in module ttnn.experimental)": [[106, "ttnn.experimental.conv3d"]], "cumprod (in module ttnn.experimental)": [[107, "ttnn.experimental.cumprod"]], "cumsum (in module ttnn.experimental)": [[108, "ttnn.experimental.cumsum"]], "dropout (in module ttnn.experimental)": [[109, "ttnn.experimental.dropout"]], "gelu_bw (in module ttnn.experimental)": [[110, "ttnn.experimental.gelu_bw"]], "rotary_embedding (in module ttnn.experimental)": [[111, "ttnn.experimental.rotary_embedding"]], "sort (in module ttnn.experimental)": [[112, "ttnn.experimental.sort"]], "expm1 (in module ttnn)": [[113, "ttnn.expm1"]], "expm1_bw (in module ttnn)": [[114, "ttnn.expm1_bw"]], "fill (in module ttnn)": [[115, "ttnn.fill"]], "fill_bw (in module ttnn)": [[116, "ttnn.fill_bw"]], "fill_ones_rm (in module ttnn)": [[117, "ttnn.fill_ones_rm"]], "fill_rm (in module ttnn)": [[118, "ttnn.fill_rm"]], "fill_zero_bw (in module ttnn)": [[119, "ttnn.fill_zero_bw"]], "floor (in module ttnn)": [[120, "ttnn.floor"]], "floor_bw (in module ttnn)": [[121, "ttnn.floor_bw"]], "floor_div (in module ttnn)": [[122, "ttnn.floor_div"]], "fmod (in module ttnn)": [[123, "ttnn.fmod"]], "fmod_bw (in module ttnn)": [[124, "ttnn.fmod_bw"]], "format_input_tensor() (in module ttnn)": [[125, "ttnn.format_input_tensor"]], "format_output_tensor() (in module ttnn)": [[126, "ttnn.format_output_tensor"]], "frac (in module ttnn)": [[127, "ttnn.frac"]], "frac_bw (in module ttnn)": [[128, "ttnn.frac_bw"]], "from_device (in module ttnn)": [[129, "ttnn.from_device"]], "from_torch (in module ttnn)": [[130, "ttnn.from_torch"]], "full (in module ttnn)": [[131, "ttnn.full"]], "full_like (in module ttnn)": [[132, "ttnn.full_like"]], "gcd (in module ttnn)": [[133, "ttnn.gcd"]], "ge (in module ttnn)": [[134, "ttnn.ge"]], "ge_ (in module ttnn)": [[135, "ttnn.ge_"]], "geglu (in module ttnn)": [[136, "ttnn.geglu"]], "gelu (in module ttnn)": [[137, "ttnn.gelu"]], "gelu_bw (in module ttnn)": [[138, "ttnn.gelu_bw"]], "gez (in module ttnn)": [[139, "ttnn.gez"]], "global_avg_pool2d (in module ttnn)": [[140, "ttnn.global_avg_pool2d"]], "glu (in module ttnn)": [[141, "ttnn.glu"]], "group_norm (in module ttnn)": [[142, "ttnn.group_norm"]], "gt (in module ttnn)": [[143, "ttnn.gt"]], "gt_ (in module ttnn)": [[144, "ttnn.gt_"]], "gtz (in module ttnn)": [[145, "ttnn.gtz"]], "hardshrink (in module ttnn)": [[146, "ttnn.hardshrink"]], "hardshrink_bw (in module ttnn)": [[147, "ttnn.hardshrink_bw"]], "hardsigmoid (in module ttnn)": [[148, "ttnn.hardsigmoid"]], "hardsigmoid_bw (in module ttnn)": [[149, "ttnn.hardsigmoid_bw"]], "hardswish (in module ttnn)": [[150, "ttnn.hardswish"]], "hardswish_bw (in module ttnn)": [[151, "ttnn.hardswish_bw"]], "hardtanh (in module ttnn)": [[152, "ttnn.hardtanh"]], "hardtanh_bw (in module ttnn)": [[153, "ttnn.hardtanh_bw"]], "heaviside (in module ttnn)": [[154, "ttnn.heaviside"]], "hypot (in module ttnn)": [[155, "ttnn.hypot"]], "hypot_bw (in module ttnn)": [[156, "ttnn.hypot_bw"]], "i0 (in module ttnn)": [[157, "ttnn.i0"]], "i0_bw (in module ttnn)": [[158, "ttnn.i0_bw"]], "identity (in module ttnn)": [[159, "ttnn.identity"]], "imag (in module ttnn)": [[160, "ttnn.imag"]], "imag_bw (in module ttnn)": [[161, "ttnn.imag_bw"]], "indexed_fill (in module ttnn)": [[162, "ttnn.indexed_fill"]], "is_imag (in module ttnn)": [[163, "ttnn.is_imag"]], "is_real (in module ttnn)": [[164, "ttnn.is_real"]], "isclose (in module ttnn)": [[165, "ttnn.isclose"]], "isfinite (in module ttnn)": [[166, "ttnn.isfinite"]], "isinf (in module ttnn)": [[167, "ttnn.isinf"]], "isnan (in module ttnn)": [[168, "ttnn.isnan"]], "isneginf (in module ttnn)": [[169, "ttnn.isneginf"]], "isposinf (in module ttnn)": [[170, "ttnn.isposinf"]], "fill_cache_for_user_ (in module ttnn.kv_cache)": [[171, "ttnn.kv_cache.fill_cache_for_user_"]], "update_cache_for_token_ (in module ttnn.kv_cache)": [[172, "ttnn.kv_cache.update_cache_for_token_"]], "l1_loss (in module ttnn)": [[173, "ttnn.l1_loss"]], "layer_norm (in module ttnn)": [[174, "ttnn.layer_norm"]], "lcm (in module ttnn)": [[175, "ttnn.lcm"]], "ldexp (in module ttnn)": [[176, "ttnn.ldexp"]], "ldexp_bw (in module ttnn)": [[177, "ttnn.ldexp_bw"]], "le (in module ttnn)": [[178, "ttnn.le"]], "le_ (in module ttnn)": [[179, "ttnn.le_"]], "leaky_relu (in module ttnn)": [[180, "ttnn.leaky_relu"]], "leaky_relu_bw (in module ttnn)": [[181, "ttnn.leaky_relu_bw"]], "lerp (in module ttnn)": [[182, "ttnn.lerp"]], "lerp_bw (in module ttnn)": [[183, "ttnn.lerp_bw"]], "lez (in module ttnn)": [[184, "ttnn.lez"]], "lgamma (in module ttnn)": [[185, "ttnn.lgamma"]], "lgamma_bw (in module ttnn)": [[186, "ttnn.lgamma_bw"]], "linear (in module ttnn)": [[187, "ttnn.linear"]], "load_tensor (in module ttnn)": [[188, "ttnn.load_tensor"]], "log (in module ttnn)": [[189, "ttnn.log"]], "log10 (in module ttnn)": [[190, "ttnn.log10"]], "log10_bw (in module ttnn)": [[191, "ttnn.log10_bw"]], "log1p (in module ttnn)": [[192, "ttnn.log1p"]], "log1p_bw (in module ttnn)": [[193, "ttnn.log1p_bw"]], "log2 (in module ttnn)": [[194, "ttnn.log2"]], "log2_bw (in module ttnn)": [[195, "ttnn.log2_bw"]], "log_bw (in module ttnn)": [[196, "ttnn.log_bw"]], "log_sigmoid (in module ttnn)": [[197, "ttnn.log_sigmoid"]], "log_sigmoid_bw (in module ttnn)": [[198, "ttnn.log_sigmoid_bw"]], "logaddexp (in module ttnn)": [[199, "ttnn.logaddexp"]], "logaddexp2 (in module ttnn)": [[200, "ttnn.logaddexp2"]], "logaddexp2_bw (in module ttnn)": [[201, "ttnn.logaddexp2_bw"]], "logaddexp_bw (in module ttnn)": [[202, "ttnn.logaddexp_bw"]], "logical_and (in module ttnn)": [[203, "ttnn.logical_and"]], "logical_and_ (in module ttnn)": [[204, "ttnn.logical_and_"]], "logical_not (in module ttnn)": [[205, "ttnn.logical_not"]], "logical_not_ (in module ttnn)": [[206, "ttnn.logical_not_"]], "logical_or (in module ttnn)": [[207, "ttnn.logical_or"]], "logical_or_ (in module ttnn)": [[208, "ttnn.logical_or_"]], "logical_xor (in module ttnn)": [[209, "ttnn.logical_xor"]], "logical_xor_ (in module ttnn)": [[210, "ttnn.logical_xor_"]], "logit (in module ttnn)": [[211, "ttnn.logit"]], "logit_bw (in module ttnn)": [[212, "ttnn.logit_bw"]], "logiteps_bw (in module ttnn)": [[213, "ttnn.logiteps_bw"]], "lt (in module ttnn)": [[214, "ttnn.lt"]], "lt_ (in module ttnn)": [[215, "ttnn.lt_"]], "ltz (in module ttnn)": [[216, "ttnn.ltz"]], "mac (in module ttnn)": [[217, "ttnn.mac"]], "manage_device() (in module ttnn)": [[218, "ttnn.manage_device"]], "matmul (in module ttnn)": [[219, "ttnn.matmul"]], "max (in module ttnn)": [[220, "ttnn.max"]], "max_bw (in module ttnn)": [[221, "ttnn.max_bw"]], "max_pool2d (in module ttnn)": [[222, "ttnn.max_pool2d"]], "maximum (in module ttnn)": [[223, "ttnn.maximum"]], "mean (in module ttnn)": [[224, "ttnn.mean"]], "min (in module ttnn)": [[225, "ttnn.min"]], "min_bw (in module ttnn)": [[226, "ttnn.min_bw"]], "minimum (in module ttnn)": [[227, "ttnn.minimum"]], "mish (in module ttnn)": [[228, "ttnn.mish"]], "preprocess_model() (in module ttnn.model_preprocessing)": [[229, "ttnn.model_preprocessing.preprocess_model"]], "preprocess_model_parameters() (in module ttnn.model_preprocessing)": [[230, "ttnn.model_preprocessing.preprocess_model_parameters"]], "moreh_sum (in module ttnn)": [[231, "ttnn.moreh_sum"]], "mse_loss (in module ttnn)": [[232, "ttnn.mse_loss"]], "mul_bw (in module ttnn)": [[233, "ttnn.mul_bw"]], "multigammaln (in module ttnn)": [[234, "ttnn.multigammaln"]], "multigammaln_bw (in module ttnn)": [[235, "ttnn.multigammaln_bw"]], "multiply (in module ttnn)": [[236, "ttnn.multiply"]], "ne (in module ttnn)": [[237, "ttnn.ne"]], "ne_ (in module ttnn)": [[238, "ttnn.ne_"]], "neg (in module ttnn)": [[239, "ttnn.neg"]], "neg_bw (in module ttnn)": [[240, "ttnn.neg_bw"]], "nextafter (in module ttnn)": [[241, "ttnn.nextafter"]], "nez (in module ttnn)": [[242, "ttnn.nez"]], "nonzero (in module ttnn)": [[243, "ttnn.nonzero"]], "normalize_global (in module ttnn)": [[244, "ttnn.normalize_global"]], "normalize_hw (in module ttnn)": [[245, "ttnn.normalize_hw"]], "ones (in module ttnn)": [[246, "ttnn.ones"]], "ones_like (in module ttnn)": [[247, "ttnn.ones_like"]], "open_device() (in module ttnn)": [[248, "ttnn.open_device"]], "outer (in module ttnn)": [[249, "ttnn.outer"]], "pad (in module ttnn)": [[250, "ttnn.pad"]], "pad_to_tile_shape() (in module ttnn)": [[251, "ttnn.pad_to_tile_shape"]], "permute (in module ttnn)": [[252, "ttnn.permute"]], "polar (in module ttnn)": [[253, "ttnn.polar"]], "polar_bw (in module ttnn)": [[254, "ttnn.polar_bw"]], "polygamma (in module ttnn)": [[255, "ttnn.polygamma"]], "polygamma_bw (in module ttnn)": [[256, "ttnn.polygamma_bw"]], "polyval (in module ttnn)": [[257, "ttnn.polyval"]], "pow (in module ttnn)": [[258, "ttnn.pow"]], "pow_bw (in module ttnn)": [[259, "ttnn.pow_bw"]], "prelu (in module ttnn)": [[260, "ttnn.prelu"]], "prepare_conv_bias() (in module ttnn)": [[261, "ttnn.prepare_conv_bias"]], "prepare_conv_transpose2d_bias() (in module ttnn)": [[262, "ttnn.prepare_conv_transpose2d_bias"]], "prepare_conv_transpose2d_weights() (in module ttnn)": [[263, "ttnn.prepare_conv_transpose2d_weights"]], "prepare_conv_weights() (in module ttnn)": [[264, "ttnn.prepare_conv_weights"]], "prod (in module ttnn)": [[265, "ttnn.prod"]], "prod_bw (in module ttnn)": [[266, "ttnn.prod_bw"]], "rad2deg (in module ttnn)": [[267, "ttnn.rad2deg"]], "rad2deg_bw (in module ttnn)": [[268, "ttnn.rad2deg_bw"]], "rdiv (in module ttnn)": [[269, "ttnn.rdiv"]], "rdiv_bw (in module ttnn)": [[270, "ttnn.rdiv_bw"]], "real (in module ttnn)": [[271, "ttnn.real"]], "real_bw (in module ttnn)": [[272, "ttnn.real_bw"]], "reallocate (in module ttnn)": [[273, "ttnn.reallocate"]], "reciprocal (in module ttnn)": [[274, "ttnn.reciprocal"]], "reciprocal_bw (in module ttnn)": [[275, "ttnn.reciprocal_bw"]], "reduce_scatter (in module ttnn)": [[276, "ttnn.reduce_scatter"]], "register_post_operation_hook() (in module ttnn)": [[277, "ttnn.register_post_operation_hook"]], "register_pre_operation_hook() (in module ttnn)": [[278, "ttnn.register_pre_operation_hook"]], "reglu (in module ttnn)": [[279, "ttnn.reglu"]], "relu (in module ttnn)": [[280, "ttnn.relu"]], "relu6 (in module ttnn)": [[281, "ttnn.relu6"]], "relu6_bw (in module ttnn)": [[282, "ttnn.relu6_bw"]], "relu_bw (in module ttnn)": [[283, "ttnn.relu_bw"]], "relu_max (in module ttnn)": [[284, "ttnn.relu_max"]], "relu_min (in module ttnn)": [[285, "ttnn.relu_min"]], "remainder (in module ttnn)": [[286, "ttnn.remainder"]], "remainder_bw (in module ttnn)": [[287, "ttnn.remainder_bw"]], "repeat (in module ttnn)": [[288, "ttnn.repeat"]], "repeat_bw (in module ttnn)": [[289, "ttnn.repeat_bw"]], "repeat_interleave (in module ttnn)": [[290, "ttnn.repeat_interleave"]], "reshape (in module ttnn)": [[291, "ttnn.reshape"]], "rms_norm (in module ttnn)": [[292, "ttnn.rms_norm"]], "round (in module ttnn)": [[293, "ttnn.round"]], "round_bw (in module ttnn)": [[294, "ttnn.round_bw"]], "rpow (in module ttnn)": [[295, "ttnn.rpow"]], "rpow_bw (in module ttnn)": [[296, "ttnn.rpow_bw"]], "rsqrt (in module ttnn)": [[297, "ttnn.rsqrt"]], "rsqrt_bw (in module ttnn)": [[298, "ttnn.rsqrt_bw"]], "rsub (in module ttnn)": [[299, "ttnn.rsub"]], "rsub_bw (in module ttnn)": [[300, "ttnn.rsub_bw"]], "scatter (in module ttnn)": [[301, "ttnn.scatter"]], "selu (in module ttnn)": [[302, "ttnn.selu"]], "selu_bw (in module ttnn)": [[303, "ttnn.selu_bw"]], "set_printoptions() (in module ttnn)": [[304, "ttnn.set_printoptions"]], "sigmoid (in module ttnn)": [[305, "ttnn.sigmoid"]], "sigmoid_accurate (in module ttnn)": [[306, "ttnn.sigmoid_accurate"]], "sigmoid_bw (in module ttnn)": [[307, "ttnn.sigmoid_bw"]], "sign (in module ttnn)": [[308, "ttnn.sign"]], "sign_bw (in module ttnn)": [[309, "ttnn.sign_bw"]], "signbit (in module ttnn)": [[310, "ttnn.signbit"]], "silu (in module ttnn)": [[311, "ttnn.silu"]], "silu_bw (in module ttnn)": [[312, "ttnn.silu_bw"]], "sin (in module ttnn)": [[313, "ttnn.sin"]], "sin_bw (in module ttnn)": [[314, "ttnn.sin_bw"]], "sinh (in module ttnn)": [[315, "ttnn.sinh"]], "sinh_bw (in module ttnn)": [[316, "ttnn.sinh_bw"]], "slice (in module ttnn)": [[317, "ttnn.slice"]], "softmax (in module ttnn)": [[318, "ttnn.softmax"]], "softplus (in module ttnn)": [[319, "ttnn.softplus"]], "softplus_bw (in module ttnn)": [[320, "ttnn.softplus_bw"]], "softshrink (in module ttnn)": [[321, "ttnn.softshrink"]], "softshrink_bw (in module ttnn)": [[322, "ttnn.softshrink_bw"]], "softsign (in module ttnn)": [[323, "ttnn.softsign"]], "softsign_bw (in module ttnn)": [[324, "ttnn.softsign_bw"]], "sqrt (in module ttnn)": [[325, "ttnn.sqrt"]], "sqrt_bw (in module ttnn)": [[326, "ttnn.sqrt_bw"]], "square (in module ttnn)": [[327, "ttnn.square"]], "square_bw (in module ttnn)": [[328, "ttnn.square_bw"]], "squared_difference (in module ttnn)": [[329, "ttnn.squared_difference"]], "squared_difference_bw (in module ttnn)": [[330, "ttnn.squared_difference_bw"]], "std (in module ttnn)": [[331, "ttnn.std"]], "sub_bw (in module ttnn)": [[332, "ttnn.sub_bw"]], "subalpha (in module ttnn)": [[333, "ttnn.subalpha"]], "subalpha_bw (in module ttnn)": [[334, "ttnn.subalpha_bw"]], "subtract (in module ttnn)": [[335, "ttnn.subtract"]], "sum (in module ttnn)": [[336, "ttnn.sum"]], "swiglu (in module ttnn)": [[337, "ttnn.swiglu"]], "swish (in module ttnn)": [[338, "ttnn.swish"]], "synchronize_device() (in module ttnn)": [[339, "ttnn.synchronize_device"]], "tan (in module ttnn)": [[340, "ttnn.tan"]], "tan_bw (in module ttnn)": [[341, "ttnn.tan_bw"]], "tanh (in module ttnn)": [[342, "ttnn.tanh"]], "tanh_bw (in module ttnn)": [[343, "ttnn.tanh_bw"]], "tanhshrink (in module ttnn)": [[344, "ttnn.tanhshrink"]], "tanhshrink_bw (in module ttnn)": [[345, "ttnn.tanhshrink_bw"]], "threshold (in module ttnn)": [[346, "ttnn.threshold"]], "threshold_bw (in module ttnn)": [[347, "ttnn.threshold_bw"]], "tilize (in module ttnn)": [[348, "ttnn.tilize"]], "tilize_with_val_padding (in module ttnn)": [[349, "ttnn.tilize_with_val_padding"]], "to_device (in module ttnn)": [[350, "ttnn.to_device"]], "to_layout (in module ttnn)": [[351, "ttnn.to_layout"]], "to_memory_config (in module ttnn)": [[352, "ttnn.to_memory_config"]], "to_torch (in module ttnn)": [[353, "ttnn.to_torch"]], "topk (in module ttnn)": [[354, "ttnn.topk"]], "attention_softmax (in module ttnn.transformer)": [[355, "ttnn.transformer.attention_softmax"]], "attention_softmax_ (in module ttnn.transformer)": [[356, "ttnn.transformer.attention_softmax_"]], "concatenate_heads (in module ttnn.transformer)": [[357, "ttnn.transformer.concatenate_heads"]], "scaled_dot_product_attention (in module ttnn.transformer)": [[358, "ttnn.transformer.scaled_dot_product_attention"]], "scaled_dot_product_attention_decode (in module ttnn.transformer)": [[359, "ttnn.transformer.scaled_dot_product_attention_decode"]], "split_query_key_value_and_split_heads (in module ttnn.transformer)": [[360, "ttnn.transformer.split_query_key_value_and_split_heads"]], "tril (in module ttnn)": [[361, "ttnn.tril"]], "triu (in module ttnn)": [[362, "ttnn.triu"]], "trunc (in module ttnn)": [[363, "ttnn.trunc"]], "trunc_bw (in module ttnn)": [[364, "ttnn.trunc_bw"]], "unary_chain (in module ttnn)": [[365, "ttnn.unary_chain"]], "untilize (in module ttnn)": [[366, "ttnn.untilize"]], "untilize_with_unpadding (in module ttnn)": [[367, "ttnn.untilize_with_unpadding"]], "upsample (in module ttnn)": [[368, "ttnn.upsample"]], "var (in module ttnn)": [[369, "ttnn.var"]], "where (in module ttnn)": [[370, "ttnn.where"]], "where_bw (in module ttnn)": [[371, "ttnn.where_bw"]], "xlogy (in module ttnn)": [[372, "ttnn.xlogy"]], "xlogy_bw (in module ttnn)": [[373, "ttnn.xlogy_bw"]], "zeros (in module ttnn)": [[374, "ttnn.zeros"]], "zeros_like (in module ttnn)": [[375, "ttnn.zeros_like"]], "shape (class in ttnn)": [[382, "ttnn.Shape"]], "rank (ttnn.shape property)": [[382, "ttnn.Shape.rank"]], "to_rank() (ttnn.shape method)": [[382, "ttnn.Shape.to_rank"]]}})