Search.setIndex({"docnames": ["index", "resources/contributing", "resources/support", "tt_metal_models/get_performance", "tt_metal_models/get_started", "ttnn/about", "ttnn/adding_new_ttnn_operation", "ttnn/api", "ttnn/api/ttnn.Conv2dConfig", "ttnn/api/ttnn.Conv2dSliceConfig", "ttnn/api/ttnn.GetDefaultDevice", "ttnn/api/ttnn.SetDefaultDevice", "ttnn/api/ttnn.abs", "ttnn/api/ttnn.abs_bw", "ttnn/api/ttnn.acos", "ttnn/api/ttnn.acos_bw", "ttnn/api/ttnn.acosh", "ttnn/api/ttnn.acosh_bw", "ttnn/api/ttnn.add", "ttnn/api/ttnn.add_bw", "ttnn/api/ttnn.addalpha", "ttnn/api/ttnn.addalpha_bw", "ttnn/api/ttnn.addcdiv", "ttnn/api/ttnn.addcdiv_bw", "ttnn/api/ttnn.addcmul", "ttnn/api/ttnn.addcmul_bw", "ttnn/api/ttnn.all_gather", "ttnn/api/ttnn.alt_complex_rotate90", "ttnn/api/ttnn.angle", "ttnn/api/ttnn.angle_bw", "ttnn/api/ttnn.arange", "ttnn/api/ttnn.argmax", "ttnn/api/ttnn.as_tensor", "ttnn/api/ttnn.asin", "ttnn/api/ttnn.asin_bw", "ttnn/api/ttnn.asinh", "ttnn/api/ttnn.asinh_bw", "ttnn/api/ttnn.assign_bw", "ttnn/api/ttnn.atan", "ttnn/api/ttnn.atan2", "ttnn/api/ttnn.atan2_bw", "ttnn/api/ttnn.atan_bw", "ttnn/api/ttnn.atanh", "ttnn/api/ttnn.atanh_bw", "ttnn/api/ttnn.batch_norm", "ttnn/api/ttnn.bias_gelu_bw", "ttnn/api/ttnn.bitwise_and", "ttnn/api/ttnn.bitwise_left_shift", "ttnn/api/ttnn.bitwise_not", "ttnn/api/ttnn.bitwise_or", "ttnn/api/ttnn.bitwise_right_shift", "ttnn/api/ttnn.bitwise_xor", "ttnn/api/ttnn.cbrt", "ttnn/api/ttnn.ceil", "ttnn/api/ttnn.ceil_bw", "ttnn/api/ttnn.celu", "ttnn/api/ttnn.celu_bw", "ttnn/api/ttnn.clamp", "ttnn/api/ttnn.clamp_bw", "ttnn/api/ttnn.clip", "ttnn/api/ttnn.clip_bw", "ttnn/api/ttnn.clone", "ttnn/api/ttnn.close_device", "ttnn/api/ttnn.concat", "ttnn/api/ttnn.concat_bw", "ttnn/api/ttnn.conj", "ttnn/api/ttnn.conj_bw", "ttnn/api/ttnn.conv1d", "ttnn/api/ttnn.conv2d", "ttnn/api/ttnn.conv_transpose2d", "ttnn/api/ttnn.cos", "ttnn/api/ttnn.cos_bw", "ttnn/api/ttnn.cosh", "ttnn/api/ttnn.cosh_bw", "ttnn/api/ttnn.create_sharded_memory_config", "ttnn/api/ttnn.deallocate", "ttnn/api/ttnn.deg2rad", "ttnn/api/ttnn.deg2rad_bw", "ttnn/api/ttnn.digamma", "ttnn/api/ttnn.digamma_bw", "ttnn/api/ttnn.div", "ttnn/api/ttnn.div_bw", "ttnn/api/ttnn.div_no_nan", "ttnn/api/ttnn.div_no_nan_bw", "ttnn/api/ttnn.dump_tensor", "ttnn/api/ttnn.elu", "ttnn/api/ttnn.elu_bw", "ttnn/api/ttnn.embedding", "ttnn/api/ttnn.embedding_bw", "ttnn/api/ttnn.empty", "ttnn/api/ttnn.empty_like", "ttnn/api/ttnn.eq", "ttnn/api/ttnn.eq_", "ttnn/api/ttnn.eqz", "ttnn/api/ttnn.erf", "ttnn/api/ttnn.erf_bw", "ttnn/api/ttnn.erfc", "ttnn/api/ttnn.erfc_bw", "ttnn/api/ttnn.erfinv", "ttnn/api/ttnn.erfinv_bw", "ttnn/api/ttnn.exp", "ttnn/api/ttnn.exp2", "ttnn/api/ttnn.exp2_bw", "ttnn/api/ttnn.exp_bw", "ttnn/api/ttnn.experimental.all_reduce", "ttnn/api/ttnn.experimental.conv3d", "ttnn/api/ttnn.experimental.cumprod", "ttnn/api/ttnn.experimental.cumsum", "ttnn/api/ttnn.experimental.dropout", "ttnn/api/ttnn.experimental.gelu_bw", "ttnn/api/ttnn.experimental.rotary_embedding", "ttnn/api/ttnn.experimental.sort", "ttnn/api/ttnn.expm1", "ttnn/api/ttnn.expm1_bw", "ttnn/api/ttnn.fill", "ttnn/api/ttnn.fill_bw", "ttnn/api/ttnn.fill_ones_rm", "ttnn/api/ttnn.fill_rm", "ttnn/api/ttnn.fill_zero_bw", "ttnn/api/ttnn.floor", "ttnn/api/ttnn.floor_bw", "ttnn/api/ttnn.floor_div", "ttnn/api/ttnn.fmod", "ttnn/api/ttnn.fmod_bw", "ttnn/api/ttnn.format_input_tensor", "ttnn/api/ttnn.format_output_tensor", "ttnn/api/ttnn.frac", "ttnn/api/ttnn.frac_bw", "ttnn/api/ttnn.from_device", "ttnn/api/ttnn.from_torch", "ttnn/api/ttnn.full", "ttnn/api/ttnn.full_like", "ttnn/api/ttnn.gcd", "ttnn/api/ttnn.ge", "ttnn/api/ttnn.ge_", "ttnn/api/ttnn.geglu", "ttnn/api/ttnn.gelu", "ttnn/api/ttnn.gelu_bw", "ttnn/api/ttnn.gez", "ttnn/api/ttnn.global_avg_pool2d", "ttnn/api/ttnn.glu", "ttnn/api/ttnn.group_norm", "ttnn/api/ttnn.gt", "ttnn/api/ttnn.gt_", "ttnn/api/ttnn.gtz", "ttnn/api/ttnn.hardshrink", "ttnn/api/ttnn.hardshrink_bw", "ttnn/api/ttnn.hardsigmoid", "ttnn/api/ttnn.hardsigmoid_bw", "ttnn/api/ttnn.hardswish", "ttnn/api/ttnn.hardswish_bw", "ttnn/api/ttnn.hardtanh", "ttnn/api/ttnn.hardtanh_bw", "ttnn/api/ttnn.heaviside", "ttnn/api/ttnn.hypot", "ttnn/api/ttnn.hypot_bw", "ttnn/api/ttnn.i0", "ttnn/api/ttnn.i0_bw", "ttnn/api/ttnn.identity", "ttnn/api/ttnn.imag", "ttnn/api/ttnn.imag_bw", "ttnn/api/ttnn.indexed_fill", "ttnn/api/ttnn.is_imag", "ttnn/api/ttnn.is_real", "ttnn/api/ttnn.isclose", "ttnn/api/ttnn.isfinite", "ttnn/api/ttnn.isinf", "ttnn/api/ttnn.isnan", "ttnn/api/ttnn.isneginf", "ttnn/api/ttnn.isposinf", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_", "ttnn/api/ttnn.kv_cache.update_cache_for_token_", "ttnn/api/ttnn.l1_loss", "ttnn/api/ttnn.layer_norm", "ttnn/api/ttnn.lcm", "ttnn/api/ttnn.ldexp", "ttnn/api/ttnn.ldexp_bw", "ttnn/api/ttnn.le", "ttnn/api/ttnn.le_", "ttnn/api/ttnn.leaky_relu", "ttnn/api/ttnn.leaky_relu_bw", "ttnn/api/ttnn.lerp", "ttnn/api/ttnn.lerp_bw", "ttnn/api/ttnn.lez", "ttnn/api/ttnn.lgamma", "ttnn/api/ttnn.lgamma_bw", "ttnn/api/ttnn.linear", "ttnn/api/ttnn.load_tensor", "ttnn/api/ttnn.log", "ttnn/api/ttnn.log10", "ttnn/api/ttnn.log10_bw", "ttnn/api/ttnn.log1p", "ttnn/api/ttnn.log1p_bw", "ttnn/api/ttnn.log2", "ttnn/api/ttnn.log2_bw", "ttnn/api/ttnn.log_bw", "ttnn/api/ttnn.log_sigmoid", "ttnn/api/ttnn.log_sigmoid_bw", "ttnn/api/ttnn.logaddexp", "ttnn/api/ttnn.logaddexp2", "ttnn/api/ttnn.logaddexp2_bw", "ttnn/api/ttnn.logaddexp_bw", "ttnn/api/ttnn.logical_and", "ttnn/api/ttnn.logical_and_", "ttnn/api/ttnn.logical_not", "ttnn/api/ttnn.logical_not_", "ttnn/api/ttnn.logical_or", "ttnn/api/ttnn.logical_or_", "ttnn/api/ttnn.logical_xor", "ttnn/api/ttnn.logical_xor_", "ttnn/api/ttnn.logit", "ttnn/api/ttnn.logit_bw", "ttnn/api/ttnn.logiteps_bw", "ttnn/api/ttnn.lt", "ttnn/api/ttnn.lt_", "ttnn/api/ttnn.ltz", "ttnn/api/ttnn.mac", "ttnn/api/ttnn.manage_device", "ttnn/api/ttnn.matmul", "ttnn/api/ttnn.max", "ttnn/api/ttnn.max_bw", "ttnn/api/ttnn.max_pool2d", "ttnn/api/ttnn.maximum", "ttnn/api/ttnn.mean", "ttnn/api/ttnn.min", "ttnn/api/ttnn.min_bw", "ttnn/api/ttnn.minimum", "ttnn/api/ttnn.mish", "ttnn/api/ttnn.model_preprocessing.preprocess_model", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters", "ttnn/api/ttnn.moreh_sum", "ttnn/api/ttnn.mse_loss", "ttnn/api/ttnn.mul_bw", "ttnn/api/ttnn.multigammaln", "ttnn/api/ttnn.multigammaln_bw", "ttnn/api/ttnn.multiply", "ttnn/api/ttnn.ne", "ttnn/api/ttnn.ne_", "ttnn/api/ttnn.neg", "ttnn/api/ttnn.neg_bw", "ttnn/api/ttnn.nextafter", "ttnn/api/ttnn.nez", "ttnn/api/ttnn.nonzero", "ttnn/api/ttnn.normalize_global", "ttnn/api/ttnn.normalize_hw", "ttnn/api/ttnn.ones", "ttnn/api/ttnn.ones_like", "ttnn/api/ttnn.open_device", "ttnn/api/ttnn.outer", "ttnn/api/ttnn.pad", "ttnn/api/ttnn.pad_to_tile_shape", "ttnn/api/ttnn.permute", "ttnn/api/ttnn.polar", "ttnn/api/ttnn.polar_bw", "ttnn/api/ttnn.polygamma", "ttnn/api/ttnn.polygamma_bw", "ttnn/api/ttnn.polyval", "ttnn/api/ttnn.pow", "ttnn/api/ttnn.pow_bw", "ttnn/api/ttnn.prelu", "ttnn/api/ttnn.prepare_conv_bias", "ttnn/api/ttnn.prepare_conv_transpose2d_bias", "ttnn/api/ttnn.prepare_conv_transpose2d_weights", "ttnn/api/ttnn.prepare_conv_weights", "ttnn/api/ttnn.prod", "ttnn/api/ttnn.prod_bw", "ttnn/api/ttnn.rad2deg", "ttnn/api/ttnn.rad2deg_bw", "ttnn/api/ttnn.rdiv", "ttnn/api/ttnn.rdiv_bw", "ttnn/api/ttnn.real", "ttnn/api/ttnn.real_bw", "ttnn/api/ttnn.reallocate", "ttnn/api/ttnn.reciprocal", "ttnn/api/ttnn.reciprocal_bw", "ttnn/api/ttnn.reduce_scatter", "ttnn/api/ttnn.register_post_operation_hook", "ttnn/api/ttnn.register_pre_operation_hook", "ttnn/api/ttnn.reglu", "ttnn/api/ttnn.relu", "ttnn/api/ttnn.relu6", "ttnn/api/ttnn.relu6_bw", "ttnn/api/ttnn.relu_bw", "ttnn/api/ttnn.relu_max", "ttnn/api/ttnn.relu_min", "ttnn/api/ttnn.remainder", "ttnn/api/ttnn.remainder_bw", "ttnn/api/ttnn.repeat", "ttnn/api/ttnn.repeat_bw", "ttnn/api/ttnn.repeat_interleave", "ttnn/api/ttnn.reshape", "ttnn/api/ttnn.rms_norm", "ttnn/api/ttnn.round", "ttnn/api/ttnn.round_bw", "ttnn/api/ttnn.rpow", "ttnn/api/ttnn.rpow_bw", "ttnn/api/ttnn.rsqrt", "ttnn/api/ttnn.rsqrt_bw", "ttnn/api/ttnn.rsub", "ttnn/api/ttnn.rsub_bw", "ttnn/api/ttnn.scatter", "ttnn/api/ttnn.selu", "ttnn/api/ttnn.selu_bw", "ttnn/api/ttnn.set_printoptions", "ttnn/api/ttnn.sigmoid", "ttnn/api/ttnn.sigmoid_accurate", "ttnn/api/ttnn.sigmoid_bw", "ttnn/api/ttnn.sign", "ttnn/api/ttnn.sign_bw", "ttnn/api/ttnn.signbit", "ttnn/api/ttnn.silu", "ttnn/api/ttnn.silu_bw", "ttnn/api/ttnn.sin", "ttnn/api/ttnn.sin_bw", "ttnn/api/ttnn.sinh", "ttnn/api/ttnn.sinh_bw", "ttnn/api/ttnn.slice", "ttnn/api/ttnn.softmax", "ttnn/api/ttnn.softplus", "ttnn/api/ttnn.softplus_bw", "ttnn/api/ttnn.softshrink", "ttnn/api/ttnn.softshrink_bw", "ttnn/api/ttnn.softsign", "ttnn/api/ttnn.softsign_bw", "ttnn/api/ttnn.sqrt", "ttnn/api/ttnn.sqrt_bw", "ttnn/api/ttnn.square", "ttnn/api/ttnn.square_bw", "ttnn/api/ttnn.squared_difference", "ttnn/api/ttnn.squared_difference_bw", "ttnn/api/ttnn.std", "ttnn/api/ttnn.sub_bw", "ttnn/api/ttnn.subalpha", "ttnn/api/ttnn.subalpha_bw", "ttnn/api/ttnn.subtract", "ttnn/api/ttnn.sum", "ttnn/api/ttnn.swiglu", "ttnn/api/ttnn.swish", "ttnn/api/ttnn.synchronize_device", "ttnn/api/ttnn.tan", "ttnn/api/ttnn.tan_bw", "ttnn/api/ttnn.tanh", "ttnn/api/ttnn.tanh_bw", "ttnn/api/ttnn.tanhshrink", "ttnn/api/ttnn.tanhshrink_bw", "ttnn/api/ttnn.threshold", "ttnn/api/ttnn.threshold_bw", "ttnn/api/ttnn.tilize", "ttnn/api/ttnn.tilize_with_val_padding", "ttnn/api/ttnn.to_device", "ttnn/api/ttnn.to_layout", "ttnn/api/ttnn.to_memory_config", "ttnn/api/ttnn.to_torch", "ttnn/api/ttnn.topk", "ttnn/api/ttnn.transformer.attention_softmax", "ttnn/api/ttnn.transformer.attention_softmax_", "ttnn/api/ttnn.transformer.concatenate_heads", "ttnn/api/ttnn.transformer.scaled_dot_product_attention", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads", "ttnn/api/ttnn.tril", "ttnn/api/ttnn.triu", "ttnn/api/ttnn.trunc", "ttnn/api/ttnn.trunc_bw", "ttnn/api/ttnn.unary_chain", "ttnn/api/ttnn.untilize", "ttnn/api/ttnn.untilize_with_unpadding", "ttnn/api/ttnn.upsample", "ttnn/api/ttnn.var", "ttnn/api/ttnn.where", "ttnn/api/ttnn.where_bw", "ttnn/api/ttnn.xlogy", "ttnn/api/ttnn.xlogy_bw", "ttnn/api/ttnn.zeros", "ttnn/api/ttnn.zeros_like", "ttnn/converting_torch_model_to_ttnn", "ttnn/demos", "ttnn/get_started", "ttnn/installing", "ttnn/onboarding", "ttnn/profiling_ttnn_operations", "ttnn/tensor", "ttnn/tutorials", "ttnn/tutorials/graphing_torch_dit", "ttnn/tutorials/matmul", "ttnn/tutorials/multihead-attention", "ttnn/tutorials/profiling", "ttnn/tutorials/resnet-basic-block", "ttnn/tutorials/tensor_and_add_operation", "ttnn/tutorials/ttnn-tracer", "ttnn/tutorials/ttnn_tutorials/001", "ttnn/tutorials/ttnn_tutorials/002", "ttnn/tutorials/ttnn_tutorials/003", "ttnn/tutorials/ttnn_tutorials/004", "ttnn/tutorials/ttnn_tutorials/005", "ttnn/tutorials/ttnn_tutorials/006", "ttnn/tutorials/ttnn_tutorials/007", "ttnn/usage"], "filenames": ["index.rst", "resources/contributing.rst", "resources/support.rst", "tt_metal_models/get_performance.rst", "tt_metal_models/get_started.rst", "ttnn/about.rst", "ttnn/adding_new_ttnn_operation.rst", "ttnn/api.rst", "ttnn/api/ttnn.Conv2dConfig.rst", "ttnn/api/ttnn.Conv2dSliceConfig.rst", "ttnn/api/ttnn.GetDefaultDevice.rst", "ttnn/api/ttnn.SetDefaultDevice.rst", "ttnn/api/ttnn.abs.rst", "ttnn/api/ttnn.abs_bw.rst", "ttnn/api/ttnn.acos.rst", "ttnn/api/ttnn.acos_bw.rst", "ttnn/api/ttnn.acosh.rst", "ttnn/api/ttnn.acosh_bw.rst", "ttnn/api/ttnn.add.rst", "ttnn/api/ttnn.add_bw.rst", "ttnn/api/ttnn.addalpha.rst", "ttnn/api/ttnn.addalpha_bw.rst", "ttnn/api/ttnn.addcdiv.rst", "ttnn/api/ttnn.addcdiv_bw.rst", "ttnn/api/ttnn.addcmul.rst", "ttnn/api/ttnn.addcmul_bw.rst", "ttnn/api/ttnn.all_gather.rst", "ttnn/api/ttnn.alt_complex_rotate90.rst", "ttnn/api/ttnn.angle.rst", "ttnn/api/ttnn.angle_bw.rst", "ttnn/api/ttnn.arange.rst", "ttnn/api/ttnn.argmax.rst", "ttnn/api/ttnn.as_tensor.rst", "ttnn/api/ttnn.asin.rst", "ttnn/api/ttnn.asin_bw.rst", "ttnn/api/ttnn.asinh.rst", "ttnn/api/ttnn.asinh_bw.rst", "ttnn/api/ttnn.assign_bw.rst", "ttnn/api/ttnn.atan.rst", "ttnn/api/ttnn.atan2.rst", "ttnn/api/ttnn.atan2_bw.rst", "ttnn/api/ttnn.atan_bw.rst", "ttnn/api/ttnn.atanh.rst", "ttnn/api/ttnn.atanh_bw.rst", "ttnn/api/ttnn.batch_norm.rst", "ttnn/api/ttnn.bias_gelu_bw.rst", "ttnn/api/ttnn.bitwise_and.rst", "ttnn/api/ttnn.bitwise_left_shift.rst", "ttnn/api/ttnn.bitwise_not.rst", "ttnn/api/ttnn.bitwise_or.rst", "ttnn/api/ttnn.bitwise_right_shift.rst", "ttnn/api/ttnn.bitwise_xor.rst", "ttnn/api/ttnn.cbrt.rst", "ttnn/api/ttnn.ceil.rst", "ttnn/api/ttnn.ceil_bw.rst", "ttnn/api/ttnn.celu.rst", "ttnn/api/ttnn.celu_bw.rst", "ttnn/api/ttnn.clamp.rst", "ttnn/api/ttnn.clamp_bw.rst", "ttnn/api/ttnn.clip.rst", "ttnn/api/ttnn.clip_bw.rst", "ttnn/api/ttnn.clone.rst", "ttnn/api/ttnn.close_device.rst", "ttnn/api/ttnn.concat.rst", "ttnn/api/ttnn.concat_bw.rst", "ttnn/api/ttnn.conj.rst", "ttnn/api/ttnn.conj_bw.rst", "ttnn/api/ttnn.conv1d.rst", "ttnn/api/ttnn.conv2d.rst", "ttnn/api/ttnn.conv_transpose2d.rst", "ttnn/api/ttnn.cos.rst", "ttnn/api/ttnn.cos_bw.rst", "ttnn/api/ttnn.cosh.rst", "ttnn/api/ttnn.cosh_bw.rst", "ttnn/api/ttnn.create_sharded_memory_config.rst", "ttnn/api/ttnn.deallocate.rst", "ttnn/api/ttnn.deg2rad.rst", "ttnn/api/ttnn.deg2rad_bw.rst", "ttnn/api/ttnn.digamma.rst", "ttnn/api/ttnn.digamma_bw.rst", "ttnn/api/ttnn.div.rst", "ttnn/api/ttnn.div_bw.rst", "ttnn/api/ttnn.div_no_nan.rst", "ttnn/api/ttnn.div_no_nan_bw.rst", "ttnn/api/ttnn.dump_tensor.rst", "ttnn/api/ttnn.elu.rst", "ttnn/api/ttnn.elu_bw.rst", "ttnn/api/ttnn.embedding.rst", "ttnn/api/ttnn.embedding_bw.rst", "ttnn/api/ttnn.empty.rst", "ttnn/api/ttnn.empty_like.rst", "ttnn/api/ttnn.eq.rst", "ttnn/api/ttnn.eq_.rst", "ttnn/api/ttnn.eqz.rst", "ttnn/api/ttnn.erf.rst", "ttnn/api/ttnn.erf_bw.rst", "ttnn/api/ttnn.erfc.rst", "ttnn/api/ttnn.erfc_bw.rst", "ttnn/api/ttnn.erfinv.rst", "ttnn/api/ttnn.erfinv_bw.rst", "ttnn/api/ttnn.exp.rst", "ttnn/api/ttnn.exp2.rst", "ttnn/api/ttnn.exp2_bw.rst", "ttnn/api/ttnn.exp_bw.rst", "ttnn/api/ttnn.experimental.all_reduce.rst", "ttnn/api/ttnn.experimental.conv3d.rst", "ttnn/api/ttnn.experimental.cumprod.rst", "ttnn/api/ttnn.experimental.cumsum.rst", "ttnn/api/ttnn.experimental.dropout.rst", "ttnn/api/ttnn.experimental.gelu_bw.rst", "ttnn/api/ttnn.experimental.rotary_embedding.rst", "ttnn/api/ttnn.experimental.sort.rst", "ttnn/api/ttnn.expm1.rst", "ttnn/api/ttnn.expm1_bw.rst", "ttnn/api/ttnn.fill.rst", "ttnn/api/ttnn.fill_bw.rst", "ttnn/api/ttnn.fill_ones_rm.rst", "ttnn/api/ttnn.fill_rm.rst", "ttnn/api/ttnn.fill_zero_bw.rst", "ttnn/api/ttnn.floor.rst", "ttnn/api/ttnn.floor_bw.rst", "ttnn/api/ttnn.floor_div.rst", "ttnn/api/ttnn.fmod.rst", "ttnn/api/ttnn.fmod_bw.rst", "ttnn/api/ttnn.format_input_tensor.rst", "ttnn/api/ttnn.format_output_tensor.rst", "ttnn/api/ttnn.frac.rst", "ttnn/api/ttnn.frac_bw.rst", "ttnn/api/ttnn.from_device.rst", "ttnn/api/ttnn.from_torch.rst", "ttnn/api/ttnn.full.rst", "ttnn/api/ttnn.full_like.rst", "ttnn/api/ttnn.gcd.rst", "ttnn/api/ttnn.ge.rst", "ttnn/api/ttnn.ge_.rst", "ttnn/api/ttnn.geglu.rst", "ttnn/api/ttnn.gelu.rst", "ttnn/api/ttnn.gelu_bw.rst", "ttnn/api/ttnn.gez.rst", "ttnn/api/ttnn.global_avg_pool2d.rst", "ttnn/api/ttnn.glu.rst", "ttnn/api/ttnn.group_norm.rst", "ttnn/api/ttnn.gt.rst", "ttnn/api/ttnn.gt_.rst", "ttnn/api/ttnn.gtz.rst", "ttnn/api/ttnn.hardshrink.rst", "ttnn/api/ttnn.hardshrink_bw.rst", "ttnn/api/ttnn.hardsigmoid.rst", "ttnn/api/ttnn.hardsigmoid_bw.rst", "ttnn/api/ttnn.hardswish.rst", "ttnn/api/ttnn.hardswish_bw.rst", "ttnn/api/ttnn.hardtanh.rst", "ttnn/api/ttnn.hardtanh_bw.rst", "ttnn/api/ttnn.heaviside.rst", "ttnn/api/ttnn.hypot.rst", "ttnn/api/ttnn.hypot_bw.rst", "ttnn/api/ttnn.i0.rst", "ttnn/api/ttnn.i0_bw.rst", "ttnn/api/ttnn.identity.rst", "ttnn/api/ttnn.imag.rst", "ttnn/api/ttnn.imag_bw.rst", "ttnn/api/ttnn.indexed_fill.rst", "ttnn/api/ttnn.is_imag.rst", "ttnn/api/ttnn.is_real.rst", "ttnn/api/ttnn.isclose.rst", "ttnn/api/ttnn.isfinite.rst", "ttnn/api/ttnn.isinf.rst", "ttnn/api/ttnn.isnan.rst", "ttnn/api/ttnn.isneginf.rst", "ttnn/api/ttnn.isposinf.rst", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_.rst", "ttnn/api/ttnn.kv_cache.update_cache_for_token_.rst", "ttnn/api/ttnn.l1_loss.rst", "ttnn/api/ttnn.layer_norm.rst", "ttnn/api/ttnn.lcm.rst", "ttnn/api/ttnn.ldexp.rst", "ttnn/api/ttnn.ldexp_bw.rst", "ttnn/api/ttnn.le.rst", "ttnn/api/ttnn.le_.rst", "ttnn/api/ttnn.leaky_relu.rst", "ttnn/api/ttnn.leaky_relu_bw.rst", "ttnn/api/ttnn.lerp.rst", "ttnn/api/ttnn.lerp_bw.rst", "ttnn/api/ttnn.lez.rst", "ttnn/api/ttnn.lgamma.rst", "ttnn/api/ttnn.lgamma_bw.rst", "ttnn/api/ttnn.linear.rst", "ttnn/api/ttnn.load_tensor.rst", "ttnn/api/ttnn.log.rst", "ttnn/api/ttnn.log10.rst", "ttnn/api/ttnn.log10_bw.rst", "ttnn/api/ttnn.log1p.rst", "ttnn/api/ttnn.log1p_bw.rst", "ttnn/api/ttnn.log2.rst", "ttnn/api/ttnn.log2_bw.rst", "ttnn/api/ttnn.log_bw.rst", "ttnn/api/ttnn.log_sigmoid.rst", "ttnn/api/ttnn.log_sigmoid_bw.rst", "ttnn/api/ttnn.logaddexp.rst", "ttnn/api/ttnn.logaddexp2.rst", "ttnn/api/ttnn.logaddexp2_bw.rst", "ttnn/api/ttnn.logaddexp_bw.rst", "ttnn/api/ttnn.logical_and.rst", "ttnn/api/ttnn.logical_and_.rst", "ttnn/api/ttnn.logical_not.rst", "ttnn/api/ttnn.logical_not_.rst", "ttnn/api/ttnn.logical_or.rst", "ttnn/api/ttnn.logical_or_.rst", "ttnn/api/ttnn.logical_xor.rst", "ttnn/api/ttnn.logical_xor_.rst", "ttnn/api/ttnn.logit.rst", "ttnn/api/ttnn.logit_bw.rst", "ttnn/api/ttnn.logiteps_bw.rst", "ttnn/api/ttnn.lt.rst", "ttnn/api/ttnn.lt_.rst", "ttnn/api/ttnn.ltz.rst", "ttnn/api/ttnn.mac.rst", "ttnn/api/ttnn.manage_device.rst", "ttnn/api/ttnn.matmul.rst", "ttnn/api/ttnn.max.rst", "ttnn/api/ttnn.max_bw.rst", "ttnn/api/ttnn.max_pool2d.rst", "ttnn/api/ttnn.maximum.rst", "ttnn/api/ttnn.mean.rst", "ttnn/api/ttnn.min.rst", "ttnn/api/ttnn.min_bw.rst", "ttnn/api/ttnn.minimum.rst", "ttnn/api/ttnn.mish.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters.rst", "ttnn/api/ttnn.moreh_sum.rst", "ttnn/api/ttnn.mse_loss.rst", "ttnn/api/ttnn.mul_bw.rst", "ttnn/api/ttnn.multigammaln.rst", "ttnn/api/ttnn.multigammaln_bw.rst", "ttnn/api/ttnn.multiply.rst", "ttnn/api/ttnn.ne.rst", "ttnn/api/ttnn.ne_.rst", "ttnn/api/ttnn.neg.rst", "ttnn/api/ttnn.neg_bw.rst", "ttnn/api/ttnn.nextafter.rst", "ttnn/api/ttnn.nez.rst", "ttnn/api/ttnn.nonzero.rst", "ttnn/api/ttnn.normalize_global.rst", "ttnn/api/ttnn.normalize_hw.rst", "ttnn/api/ttnn.ones.rst", "ttnn/api/ttnn.ones_like.rst", "ttnn/api/ttnn.open_device.rst", "ttnn/api/ttnn.outer.rst", "ttnn/api/ttnn.pad.rst", "ttnn/api/ttnn.pad_to_tile_shape.rst", "ttnn/api/ttnn.permute.rst", "ttnn/api/ttnn.polar.rst", "ttnn/api/ttnn.polar_bw.rst", "ttnn/api/ttnn.polygamma.rst", "ttnn/api/ttnn.polygamma_bw.rst", "ttnn/api/ttnn.polyval.rst", "ttnn/api/ttnn.pow.rst", "ttnn/api/ttnn.pow_bw.rst", "ttnn/api/ttnn.prelu.rst", "ttnn/api/ttnn.prepare_conv_bias.rst", "ttnn/api/ttnn.prepare_conv_transpose2d_bias.rst", "ttnn/api/ttnn.prepare_conv_transpose2d_weights.rst", "ttnn/api/ttnn.prepare_conv_weights.rst", "ttnn/api/ttnn.prod.rst", "ttnn/api/ttnn.prod_bw.rst", "ttnn/api/ttnn.rad2deg.rst", "ttnn/api/ttnn.rad2deg_bw.rst", "ttnn/api/ttnn.rdiv.rst", "ttnn/api/ttnn.rdiv_bw.rst", "ttnn/api/ttnn.real.rst", "ttnn/api/ttnn.real_bw.rst", "ttnn/api/ttnn.reallocate.rst", "ttnn/api/ttnn.reciprocal.rst", "ttnn/api/ttnn.reciprocal_bw.rst", "ttnn/api/ttnn.reduce_scatter.rst", "ttnn/api/ttnn.register_post_operation_hook.rst", "ttnn/api/ttnn.register_pre_operation_hook.rst", "ttnn/api/ttnn.reglu.rst", "ttnn/api/ttnn.relu.rst", "ttnn/api/ttnn.relu6.rst", "ttnn/api/ttnn.relu6_bw.rst", "ttnn/api/ttnn.relu_bw.rst", "ttnn/api/ttnn.relu_max.rst", "ttnn/api/ttnn.relu_min.rst", "ttnn/api/ttnn.remainder.rst", "ttnn/api/ttnn.remainder_bw.rst", "ttnn/api/ttnn.repeat.rst", "ttnn/api/ttnn.repeat_bw.rst", "ttnn/api/ttnn.repeat_interleave.rst", "ttnn/api/ttnn.reshape.rst", "ttnn/api/ttnn.rms_norm.rst", "ttnn/api/ttnn.round.rst", "ttnn/api/ttnn.round_bw.rst", "ttnn/api/ttnn.rpow.rst", "ttnn/api/ttnn.rpow_bw.rst", "ttnn/api/ttnn.rsqrt.rst", "ttnn/api/ttnn.rsqrt_bw.rst", "ttnn/api/ttnn.rsub.rst", "ttnn/api/ttnn.rsub_bw.rst", "ttnn/api/ttnn.scatter.rst", "ttnn/api/ttnn.selu.rst", "ttnn/api/ttnn.selu_bw.rst", "ttnn/api/ttnn.set_printoptions.rst", "ttnn/api/ttnn.sigmoid.rst", "ttnn/api/ttnn.sigmoid_accurate.rst", "ttnn/api/ttnn.sigmoid_bw.rst", "ttnn/api/ttnn.sign.rst", "ttnn/api/ttnn.sign_bw.rst", "ttnn/api/ttnn.signbit.rst", "ttnn/api/ttnn.silu.rst", "ttnn/api/ttnn.silu_bw.rst", "ttnn/api/ttnn.sin.rst", "ttnn/api/ttnn.sin_bw.rst", "ttnn/api/ttnn.sinh.rst", "ttnn/api/ttnn.sinh_bw.rst", "ttnn/api/ttnn.slice.rst", "ttnn/api/ttnn.softmax.rst", "ttnn/api/ttnn.softplus.rst", "ttnn/api/ttnn.softplus_bw.rst", "ttnn/api/ttnn.softshrink.rst", "ttnn/api/ttnn.softshrink_bw.rst", "ttnn/api/ttnn.softsign.rst", "ttnn/api/ttnn.softsign_bw.rst", "ttnn/api/ttnn.sqrt.rst", "ttnn/api/ttnn.sqrt_bw.rst", "ttnn/api/ttnn.square.rst", "ttnn/api/ttnn.square_bw.rst", "ttnn/api/ttnn.squared_difference.rst", "ttnn/api/ttnn.squared_difference_bw.rst", "ttnn/api/ttnn.std.rst", "ttnn/api/ttnn.sub_bw.rst", "ttnn/api/ttnn.subalpha.rst", "ttnn/api/ttnn.subalpha_bw.rst", "ttnn/api/ttnn.subtract.rst", "ttnn/api/ttnn.sum.rst", "ttnn/api/ttnn.swiglu.rst", "ttnn/api/ttnn.swish.rst", "ttnn/api/ttnn.synchronize_device.rst", "ttnn/api/ttnn.tan.rst", "ttnn/api/ttnn.tan_bw.rst", "ttnn/api/ttnn.tanh.rst", "ttnn/api/ttnn.tanh_bw.rst", "ttnn/api/ttnn.tanhshrink.rst", "ttnn/api/ttnn.tanhshrink_bw.rst", "ttnn/api/ttnn.threshold.rst", "ttnn/api/ttnn.threshold_bw.rst", "ttnn/api/ttnn.tilize.rst", "ttnn/api/ttnn.tilize_with_val_padding.rst", "ttnn/api/ttnn.to_device.rst", "ttnn/api/ttnn.to_layout.rst", "ttnn/api/ttnn.to_memory_config.rst", "ttnn/api/ttnn.to_torch.rst", "ttnn/api/ttnn.topk.rst", "ttnn/api/ttnn.transformer.attention_softmax.rst", "ttnn/api/ttnn.transformer.attention_softmax_.rst", "ttnn/api/ttnn.transformer.concatenate_heads.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode.rst", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads.rst", "ttnn/api/ttnn.tril.rst", "ttnn/api/ttnn.triu.rst", "ttnn/api/ttnn.trunc.rst", "ttnn/api/ttnn.trunc_bw.rst", "ttnn/api/ttnn.unary_chain.rst", "ttnn/api/ttnn.untilize.rst", "ttnn/api/ttnn.untilize_with_unpadding.rst", "ttnn/api/ttnn.upsample.rst", "ttnn/api/ttnn.var.rst", "ttnn/api/ttnn.where.rst", "ttnn/api/ttnn.where_bw.rst", "ttnn/api/ttnn.xlogy.rst", "ttnn/api/ttnn.xlogy_bw.rst", "ttnn/api/ttnn.zeros.rst", "ttnn/api/ttnn.zeros_like.rst", "ttnn/converting_torch_model_to_ttnn.rst", "ttnn/demos.rst", "ttnn/get_started.rst", "ttnn/installing.md", "ttnn/onboarding.rst", "ttnn/profiling_ttnn_operations.rst", "ttnn/tensor.rst", "ttnn/tutorials.rst", "ttnn/tutorials/graphing_torch_dit.rst", "ttnn/tutorials/matmul.rst", "ttnn/tutorials/multihead-attention.rst", "ttnn/tutorials/profiling.rst", "ttnn/tutorials/resnet-basic-block.rst", "ttnn/tutorials/tensor_and_add_operation.rst", "ttnn/tutorials/ttnn-tracer.rst", "ttnn/tutorials/ttnn_tutorials/001.ipynb", "ttnn/tutorials/ttnn_tutorials/002.ipynb", "ttnn/tutorials/ttnn_tutorials/003.ipynb", "ttnn/tutorials/ttnn_tutorials/004.ipynb", "ttnn/tutorials/ttnn_tutorials/005.ipynb", "ttnn/tutorials/ttnn_tutorials/006.ipynb", "ttnn/tutorials/ttnn_tutorials/007.ipynb", "ttnn/usage.rst"], "titles": ["Welcome to TT-NN documentation!", "Contributing as a developer", "Support", "Performance", "Getting Started", "What is TT-NN?", "Adding New TT-NN Operation", "APIs", "ttnn.Conv2dConfig", "ttnn.Conv2dSliceConfig", "ttnn.GetDefaultDevice", "ttnn.SetDefaultDevice", "ttnn.abs", "ttnn.abs_bw", "ttnn.acos", "ttnn.acos_bw", "ttnn.acosh", "ttnn.acosh_bw", "ttnn.add", "ttnn.add_bw", "ttnn.addalpha", "ttnn.addalpha_bw", "ttnn.addcdiv", "ttnn.addcdiv_bw", "ttnn.addcmul", "ttnn.addcmul_bw", "ttnn.all_gather", "ttnn.alt_complex_rotate90", "ttnn.angle", "ttnn.angle_bw", "ttnn.arange", "ttnn.argmax", "ttnn.as_tensor", "ttnn.asin", "ttnn.asin_bw", "ttnn.asinh", "ttnn.asinh_bw", "ttnn.assign_bw", "ttnn.atan", "ttnn.atan2", "ttnn.atan2_bw", "ttnn.atan_bw", "ttnn.atanh", "ttnn.atanh_bw", "ttnn.batch_norm", "ttnn.bias_gelu_bw", "ttnn.bitwise_and", "ttnn.bitwise_left_shift", "ttnn.bitwise_not", "ttnn.bitwise_or", "ttnn.bitwise_right_shift", "ttnn.bitwise_xor", "ttnn.cbrt", "ttnn.ceil", "ttnn.ceil_bw", "ttnn.celu", "ttnn.celu_bw", "ttnn.clamp", "ttnn.clamp_bw", "ttnn.clip", "ttnn.clip_bw", "ttnn.clone", "ttnn.close_device", "ttnn.concat", "ttnn.concat_bw", "ttnn.conj", "ttnn.conj_bw", "ttnn.conv1d", "ttnn.conv2d", "ttnn.conv_transpose2d", "ttnn.cos", "ttnn.cos_bw", "ttnn.cosh", "ttnn.cosh_bw", "ttnn.create_sharded_memory_config", "ttnn.deallocate", "ttnn.deg2rad", "ttnn.deg2rad_bw", "ttnn.digamma", "ttnn.digamma_bw", "ttnn.div", "ttnn.div_bw", "ttnn.div_no_nan", "ttnn.div_no_nan_bw", "ttnn.dump_tensor", "ttnn.elu", "ttnn.elu_bw", "ttnn.embedding", "ttnn.embedding_bw", "ttnn.empty", "ttnn.empty_like", "ttnn.eq", "ttnn.eq_", "ttnn.eqz", "ttnn.erf", "ttnn.erf_bw", "ttnn.erfc", "ttnn.erfc_bw", "ttnn.erfinv", "ttnn.erfinv_bw", "ttnn.exp", "ttnn.exp2", "ttnn.exp2_bw", "ttnn.exp_bw", "ttnn.experimental.all_reduce", "ttnn.experimental.conv3d", "ttnn.experimental.cumprod", "ttnn.experimental.cumsum", "ttnn.experimental.dropout", "ttnn.experimental.gelu_bw", "ttnn.experimental.rotary_embedding", "ttnn.experimental.sort", "ttnn.expm1", "ttnn.expm1_bw", "ttnn.fill", "ttnn.fill_bw", "ttnn.fill_ones_rm", "ttnn.fill_rm", "ttnn.fill_zero_bw", "ttnn.floor", "ttnn.floor_bw", "ttnn.floor_div", "ttnn.fmod", "ttnn.fmod_bw", "ttnn.format_input_tensor", "ttnn.format_output_tensor", "ttnn.frac", "ttnn.frac_bw", "ttnn.from_device", "ttnn.from_torch", "ttnn.full", "ttnn.full_like", "ttnn.gcd", "ttnn.ge", "ttnn.ge_", "ttnn.geglu", "ttnn.gelu", "ttnn.gelu_bw", "ttnn.gez", "ttnn.global_avg_pool2d", "ttnn.glu", "ttnn.group_norm", "ttnn.gt", "ttnn.gt_", "ttnn.gtz", "ttnn.hardshrink", "ttnn.hardshrink_bw", "ttnn.hardsigmoid", "ttnn.hardsigmoid_bw", "ttnn.hardswish", "ttnn.hardswish_bw", "ttnn.hardtanh", "ttnn.hardtanh_bw", "ttnn.heaviside", "ttnn.hypot", "ttnn.hypot_bw", "ttnn.i0", "ttnn.i0_bw", "ttnn.identity", "ttnn.imag", "ttnn.imag_bw", "ttnn.indexed_fill", "ttnn.is_imag", "ttnn.is_real", "ttnn.isclose", "ttnn.isfinite", "ttnn.isinf", "ttnn.isnan", "ttnn.isneginf", "ttnn.isposinf", "ttnn.kv_cache.fill_cache_for_user_", "ttnn.kv_cache.update_cache_for_token_", "ttnn.l1_loss", "ttnn.layer_norm", "ttnn.lcm", "ttnn.ldexp", "ttnn.ldexp_bw", "ttnn.le", "ttnn.le_", "ttnn.leaky_relu", "ttnn.leaky_relu_bw", "ttnn.lerp", "ttnn.lerp_bw", "ttnn.lez", "ttnn.lgamma", "ttnn.lgamma_bw", "ttnn.linear", "ttnn.load_tensor", "ttnn.log", "ttnn.log10", "ttnn.log10_bw", "ttnn.log1p", "ttnn.log1p_bw", "ttnn.log2", "ttnn.log2_bw", "ttnn.log_bw", "ttnn.log_sigmoid", "ttnn.log_sigmoid_bw", "ttnn.logaddexp", "ttnn.logaddexp2", "ttnn.logaddexp2_bw", "ttnn.logaddexp_bw", "ttnn.logical_and", "ttnn.logical_and_", "ttnn.logical_not", "ttnn.logical_not_", "ttnn.logical_or", "ttnn.logical_or_", "ttnn.logical_xor", "ttnn.logical_xor_", "ttnn.logit", "ttnn.logit_bw", "ttnn.logiteps_bw", "ttnn.lt", "ttnn.lt_", "ttnn.ltz", "ttnn.mac", "ttnn.manage_device", "ttnn.matmul", "ttnn.max", "ttnn.max_bw", "ttnn.max_pool2d", "ttnn.maximum", "ttnn.mean", "ttnn.min", "ttnn.min_bw", "ttnn.minimum", "ttnn.mish", "ttnn.model_preprocessing.preprocess_model", "ttnn.model_preprocessing.preprocess_model_parameters", "ttnn.moreh_sum", "ttnn.mse_loss", "ttnn.mul_bw", "ttnn.multigammaln", "ttnn.multigammaln_bw", "ttnn.multiply", "ttnn.ne", "ttnn.ne_", "ttnn.neg", "ttnn.neg_bw", "ttnn.nextafter", "ttnn.nez", "ttnn.nonzero", "ttnn.normalize_global", "ttnn.normalize_hw", "ttnn.ones", "ttnn.ones_like", "ttnn.open_device", "ttnn.outer", "ttnn.pad", "ttnn.pad_to_tile_shape", "ttnn.permute", "ttnn.polar", "ttnn.polar_bw", "ttnn.polygamma", "ttnn.polygamma_bw", "ttnn.polyval", "ttnn.pow", "ttnn.pow_bw", "ttnn.prelu", "ttnn.prepare_conv_bias", "ttnn.prepare_conv_transpose2d_bias", "ttnn.prepare_conv_transpose2d_weights", "ttnn.prepare_conv_weights", "ttnn.prod", "ttnn.prod_bw", "ttnn.rad2deg", "ttnn.rad2deg_bw", "ttnn.rdiv", "ttnn.rdiv_bw", "ttnn.real", "ttnn.real_bw", "ttnn.reallocate", "ttnn.reciprocal", "ttnn.reciprocal_bw", "ttnn.reduce_scatter", "ttnn.register_post_operation_hook", "ttnn.register_pre_operation_hook", "ttnn.reglu", "ttnn.relu", "ttnn.relu6", "ttnn.relu6_bw", "ttnn.relu_bw", "ttnn.relu_max", "ttnn.relu_min", "ttnn.remainder", "ttnn.remainder_bw", "ttnn.repeat", "ttnn.repeat_bw", "ttnn.repeat_interleave", "ttnn.reshape", "ttnn.rms_norm", "ttnn.round", "ttnn.round_bw", "ttnn.rpow", "ttnn.rpow_bw", "ttnn.rsqrt", "ttnn.rsqrt_bw", "ttnn.rsub", "ttnn.rsub_bw", "ttnn.scatter", "ttnn.selu", "ttnn.selu_bw", "ttnn.set_printoptions", "ttnn.sigmoid", "ttnn.sigmoid_accurate", "ttnn.sigmoid_bw", "ttnn.sign", "ttnn.sign_bw", "ttnn.signbit", "ttnn.silu", "ttnn.silu_bw", "ttnn.sin", "ttnn.sin_bw", "ttnn.sinh", "ttnn.sinh_bw", "ttnn.slice", "ttnn.softmax", "ttnn.softplus", "ttnn.softplus_bw", "ttnn.softshrink", "ttnn.softshrink_bw", "ttnn.softsign", "ttnn.softsign_bw", "ttnn.sqrt", "ttnn.sqrt_bw", "ttnn.square", "ttnn.square_bw", "ttnn.squared_difference", "ttnn.squared_difference_bw", "ttnn.std", "ttnn.sub_bw", "ttnn.subalpha", "ttnn.subalpha_bw", "ttnn.subtract", "ttnn.sum", "ttnn.swiglu", "ttnn.swish", "ttnn.synchronize_device", "ttnn.tan", "ttnn.tan_bw", "ttnn.tanh", "ttnn.tanh_bw", "ttnn.tanhshrink", "ttnn.tanhshrink_bw", "ttnn.threshold", "ttnn.threshold_bw", "ttnn.tilize", "ttnn.tilize_with_val_padding", "ttnn.to_device", "ttnn.to_layout", "ttnn.to_memory_config", "ttnn.to_torch", "ttnn.topk", "ttnn.transformer.attention_softmax", "ttnn.transformer.attention_softmax_", "ttnn.transformer.concatenate_heads", "ttnn.transformer.scaled_dot_product_attention", "ttnn.transformer.scaled_dot_product_attention_decode", "ttnn.transformer.split_query_key_value_and_split_heads", "ttnn.tril", "ttnn.triu", "ttnn.trunc", "ttnn.trunc_bw", "ttnn.unary_chain", "ttnn.untilize", "ttnn.untilize_with_unpadding", "ttnn.upsample", "ttnn.var", "ttnn.where", "ttnn.where_bw", "ttnn.xlogy", "ttnn.xlogy_bw", "ttnn.zeros", "ttnn.zeros_like", "Converting PyTorch Model to TT-NN", "Building and Uplifting Demos", "Getting Started", "Install", "Onboarding New Functionality", "Profiling TT-NN Operations", "Tensor", "Tutorials", "Graphing Torch DiT_XL_2 With TTNN", "Matmul Operation", "Multi-Head Attention", "ttnn Profiling", "Resnet Basic Block", "Tensor and Add Operation", "ttnn Tracer", "Tensor and Add Operation", "Matrix Multiplication", "Multi-Head Attention", "Tracing ttnn operations and torch modules/functions", "Profiling ttnn operations", "Resnet Block", "Build a graph of a pytorch based model", "Using TT-NN"], "terms": {"what": [0, 376, 378, 380, 396], "i": [0, 3, 4, 8, 9, 10, 11, 16, 19, 21, 31, 35, 40, 42, 44, 45, 48, 62, 63, 64, 69, 74, 80, 81, 87, 88, 91, 106, 107, 110, 111, 114, 116, 117, 124, 125, 127, 129, 133, 135, 139, 140, 142, 155, 157, 162, 163, 176, 177, 182, 186, 189, 193, 200, 201, 202, 213, 217, 218, 220, 221, 222, 225, 228, 229, 232, 234, 236, 247, 249, 250, 252, 254, 256, 257, 259, 264, 265, 268, 273, 276, 277, 278, 283, 284, 289, 290, 294, 299, 316, 317, 329, 331, 333, 336, 338, 339, 340, 350, 352, 353, 354, 355, 357, 358, 359, 367, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397], "get": [0, 8, 10, 304, 356, 375, 378, 382, 387, 390, 391, 392, 393, 394], "start": [0, 30, 181, 316, 375, 378, 380, 392, 394], "1": [0, 3, 8, 9, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 71, 73, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 92, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 127, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 267, 268, 269, 270, 271, 273, 274, 275, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 308, 311, 313, 315, 316, 317, 318, 319, 320, 321, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 344, 345, 346, 350, 357, 358, 359, 363, 368, 369, 370, 371, 372, 373, 374, 379, 381, 390, 391, 392, 393, 394, 395, 396], "instal": [0, 3, 376, 380, 382, 394, 396, 397], "build": [0, 382, 383, 386, 394], "2": [0, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 164, 165, 166, 167, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 264, 266, 267, 268, 269, 271, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 352, 357, 359, 360, 361, 362, 363, 364, 368, 369, 370, 371, 372, 373, 374, 381, 382, 383, 390, 391, 392, 393, 394, 395], "explor": 0, "our": [0, 3, 4, 376, 378, 379, 381, 390], "demo": [0, 4, 378, 380, 393], "3": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 249, 251, 253, 254, 255, 256, 257, 258, 259, 266, 267, 268, 269, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 352, 359, 360, 361, 362, 363, 364, 369, 370, 371, 372, 373, 374, 381, 390, 391, 392, 393, 394, 395, 396], "tutori": [0, 383, 386, 387, 392, 396], "multi": [0, 26, 32, 84, 104, 275, 367, 381, 382, 390], "head": [0, 354, 355, 356, 357, 359, 378, 382], "attent": [0, 354, 355, 357, 358, 359, 382], "simpl": [0, 378, 394, 396], "4": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 265, 266, 267, 268, 269, 273, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 360, 361, 362, 363, 364, 369, 370, 371, 372, 373, 374, 381, 390, 391, 392, 393, 394, 395, 396], "optim": [0, 8, 381, 382, 385, 390], "where": [0, 2, 3, 4, 30, 69, 74, 89, 90, 124, 125, 186, 218, 242, 259, 350, 370, 376, 380, 381, 396], "To": [0, 3, 8, 379, 390, 391, 397], "go": [0, 390], "from": [0, 2, 3, 4, 6, 8, 30, 32, 62, 63, 67, 68, 69, 88, 129, 170, 171, 187, 260, 261, 262, 263, 298, 299, 334, 366, 375, 376, 380, 381, 382, 383, 387, 390, 392, 393, 394], "here": [0, 2, 6, 378, 391, 396], "prerequisit": 0, "set": [0, 3, 4, 8, 11, 63, 69, 116, 218, 234, 251, 260, 261, 264, 303, 338, 356, 359, 375, 380, 382, 390, 393, 394, 395, 396, 397], "up": [0, 5, 117, 380, 382, 391, 396], "hardwar": [0, 2, 6, 247, 375, 376, 377, 381, 390, 397], "driver": [0, 390, 391, 392, 393, 394, 395], "firmwar": 0, "system": [0, 16, 35, 42, 114, 135, 140, 268, 278, 283, 284, 294, 336, 380], "level": [0, 380], "depend": [0, 260, 261, 262, 263, 350, 376, 380, 381, 382, 394], "kmd": 0, "updat": [0, 44, 171, 376, 379, 397], "devic": [0, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 381, 382, 384, 385, 388, 393, 394, 395, 396], "flash": [0, 358], "manag": [0, 217, 276, 277, 376], "interfac": 0, "smi": 0, "option": [0, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 380, 396, 397], "card": 0, "configur": [0, 3, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 384, 385, 393], "topologi": [0, 26, 104, 275], "metalium": [0, 3, 4, 6], "There": [0, 6, 218, 375, 381], "ar": [0, 3, 4, 8, 9, 11, 19, 26, 39, 47, 50, 61, 63, 81, 104, 107, 117, 186, 218, 221, 242, 251, 257, 275, 276, 277, 294, 316, 338, 353, 359, 367, 375, 376, 377, 380, 381, 382, 383, 386, 387, 390, 391, 392, 397], "three": 0, "sourc": [0, 3, 4, 5, 170, 382, 386], "step": [0, 30, 316, 376, 379, 390, 396], "clone": [0, 158, 359, 382, 383, 390, 391, 392, 393], "repositori": [0, 1, 377], "librari": [0, 5, 382, 383], "crate": 0, "virtual": [0, 4], "environ": [0, 3, 4, 8, 377, 392, 393, 394, 396, 397], "docker": [0, 397], "releas": [0, 75, 397], "imag": [0, 69, 162, 252, 376, 380, 381, 396, 397], "wheel": [0, 394, 397], "download": [0, 382, 383, 393, 394], "latest": [0, 380], "For": [0, 6, 8, 13, 23, 32, 45, 68, 81, 107, 111, 123, 129, 137, 155, 182, 190, 192, 194, 195, 197, 200, 201, 211, 212, 218, 258, 265, 269, 274, 286, 319, 325, 359, 372, 375, 376, 379, 380, 381], "user": [0, 4, 6, 158, 186, 218, 228, 229, 247, 348, 376, 377, 379, 390, 391, 392, 393, 394, 395, 396], "onli": [0, 6, 8, 9, 19, 21, 22, 24, 26, 31, 40, 45, 57, 58, 59, 60, 63, 64, 74, 80, 81, 84, 88, 117, 129, 133, 135, 140, 142, 155, 176, 177, 181, 182, 189, 193, 200, 201, 202, 213, 216, 218, 220, 225, 232, 249, 254, 262, 263, 273, 275, 278, 286, 299, 329, 331, 333, 336, 338, 358, 359, 369, 372, 375, 376, 380, 381, 382, 383, 386, 387, 395, 397], "you": [0, 1, 2, 3, 4, 6, 318, 376, 377, 380, 382, 393, 396, 397], "all": [0, 6, 8, 26, 31, 104, 139, 218, 228, 229, 249, 256, 264, 265, 275, 338, 375, 376, 379, 380, 381, 390, 392, 394], "verifi": [0, 379], "your": [0, 376, 377, 380, 382], "try": [0, 8, 376, 390, 394], "execut": [0, 3, 8, 276, 277, 376, 380, 391, 392, 394, 397], "program": [0, 3, 5, 6, 26, 186, 218, 275, 354, 355, 380, 382, 384, 385, 390, 393, 394, 395], "exampl": [0, 107, 111, 128, 251, 264, 289, 338, 349, 376, 377, 379, 380, 381, 390, 396], "interest": 0, "contribut": [0, 2, 377], "us": [0, 3, 4, 5, 6, 8, 9, 10, 11, 26, 32, 45, 63, 67, 68, 69, 74, 81, 87, 88, 90, 94, 96, 100, 104, 108, 109, 110, 111, 117, 129, 131, 136, 137, 155, 158, 186, 218, 221, 228, 229, 246, 247, 249, 260, 261, 268, 269, 275, 276, 277, 288, 296, 303, 304, 317, 318, 347, 348, 350, 351, 352, 353, 358, 359, 365, 366, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 388, 389, 394, 396], "basic": [0, 377, 378, 382], "convert": [0, 5, 6, 8, 32, 61, 129, 228, 229, 260, 261, 262, 263, 351, 352, 382, 385, 388, 391], "torch": [0, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 359, 360, 361, 362, 363, 364, 368, 369, 370, 371, 372, 374, 375, 381, 382, 384, 385, 387, 388, 389, 394, 396], "tensor": [0, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 380, 382, 384, 392, 393, 395, 396], "run": [0, 5, 6, 26, 44, 104, 129, 228, 275, 276, 277, 376, 377, 378, 379, 380, 382, 385, 387, 390, 391, 394], "an": [0, 2, 3, 5, 6, 26, 63, 67, 68, 69, 87, 104, 105, 117, 118, 122, 139, 217, 218, 252, 259, 264, 275, 285, 349, 352, 376, 377, 378, 379, 380, 381, 390, 392, 396], "oper": [0, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 379, 381, 382, 386, 389, 391, 392], "__getitem__": 0, "slice": [0, 9], "enabl": [0, 3, 5, 8, 379, 380, 382, 384, 385, 390, 393, 394, 395, 396], "cach": [0, 3, 5, 32, 62, 110, 170, 171, 228, 229, 380, 381, 382, 384, 385, 390, 393, 394, 395, 396], "5": [0, 30, 44, 55, 58, 60, 74, 78, 87, 89, 107, 111, 131, 145, 146, 147, 149, 164, 210, 233, 259, 269, 320, 321, 378, 390, 391, 392, 393, 394, 395, 396], "debug": [0, 5, 6, 379, 390, 391, 392, 393, 395], "intermedi": 0, "6": [0, 30, 111, 233, 292, 381, 390, 391, 392, 393, 394, 395, 396], "trace": [0, 5, 247, 382, 387, 389, 396], "graph": [0, 5, 228, 382, 387, 393], "7": [0, 87, 130, 292, 390, 391, 392, 393, 394, 395, 396], "tt_lib": [0, 116, 117, 349], "8": [0, 26, 30, 74, 87, 104, 151, 249, 275, 380, 381, 390, 391, 392, 393, 394, 395, 396], "log": [0, 8, 197, 371, 380, 391, 393, 394], "9": [0, 57, 59, 72, 87, 89, 314, 378, 390, 391, 392, 393, 394, 395, 396], "support": [0, 1, 5, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 126, 127, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 248, 249, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 358, 360, 361, 362, 363, 364, 369, 370, 371, 372, 373, 374, 378, 381, 390, 395], "python": [0, 4, 5, 378, 379, 380, 394, 396], "10": [0, 30, 75, 87, 128, 139, 157, 186, 218, 254, 272, 345, 349, 350, 351, 378, 390, 391, 392, 393, 394, 396], "chang": [0, 8, 290, 347, 348, 365, 366, 390, 394], "string": [0, 8, 45, 80, 137, 228, 229, 268, 269, 303], "represent": [0, 318, 381], "11": [0, 89, 378, 390, 391, 392, 393, 394, 395], "visual": [0, 5, 393, 395, 396], "web": 0, "browser": [0, 382], "12": [0, 64, 141, 173, 249, 291, 375, 378, 390, 391, 392, 394, 395, 396], "regist": [0, 5, 6, 276, 277], "pre": [0, 6, 221, 277, 378, 382, 383, 385, 394], "post": [0, 276, 380], "hook": [0, 276, 277, 394], "13": [0, 390, 391, 392, 394, 396], "queri": [0, 359, 392], "14": [0, 3, 64, 378, 390, 391, 392, 394], "fall": [0, 176], "back": [0, 6, 356, 380, 390], "15": [0, 378, 392, 394], "captur": [0, 396], "c": [0, 5, 9, 44, 67, 68, 69, 105, 116, 117, 221, 304, 367, 380, 381, 390, 391, 392, 393, 394, 395], "function": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 382, 389, 390], "buffer": [0, 6, 8, 26, 75, 104, 247, 275, 380, 381], "alloc": [0, 6, 30, 89, 90, 130, 131, 245, 246, 373, 374, 381, 390, 391, 392, 393, 394, 395], "etc": [0, 5, 6], "shape": [0, 30, 44, 63, 69, 74, 89, 90, 106, 107, 114, 124, 125, 130, 131, 139, 186, 218, 221, 242, 245, 246, 249, 250, 251, 264, 287, 288, 289, 290, 316, 348, 356, 359, 366, 373, 374, 375, 380, 390, 391, 392, 395, 396], "layout": [0, 6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 273, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 352, 353, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 380, 382, 384, 388, 392, 395, 397], "data": [0, 5, 8, 18, 30, 31, 32, 61, 87, 88, 89, 90, 91, 116, 117, 129, 130, 131, 132, 133, 139, 142, 174, 175, 177, 186, 198, 199, 202, 206, 208, 213, 218, 222, 226, 235, 236, 245, 246, 268, 298, 328, 334, 347, 348, 350, 351, 352, 353, 365, 366, 367, 373, 374, 375, 380, 382, 388, 394, 397], "type": [0, 5, 6, 8, 9, 18, 30, 31, 32, 45, 61, 67, 68, 69, 81, 87, 88, 89, 90, 91, 105, 106, 107, 116, 117, 124, 129, 130, 131, 132, 133, 137, 139, 142, 174, 175, 177, 186, 198, 199, 202, 206, 208, 213, 218, 222, 226, 235, 236, 245, 246, 247, 251, 260, 261, 262, 263, 268, 272, 290, 298, 317, 328, 334, 338, 347, 348, 350, 351, 352, 353, 365, 366, 373, 374, 375, 380, 382, 388, 394, 396], "limit": [0, 13, 23, 45, 81, 123, 137, 155, 186, 190, 192, 194, 195, 197, 200, 201, 211, 212, 258, 265, 269, 274, 286, 319, 325, 372, 376], "bfloat8_b": [0, 8, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 27, 33, 36, 37, 38, 39, 40, 41, 45, 53, 55, 64, 70, 71, 72, 76, 77, 78, 79, 81, 83, 85, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 112, 113, 114, 119, 123, 126, 127, 129, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 220, 225, 227, 232, 235, 236, 237, 238, 239, 240, 241, 256, 257, 258, 259, 265, 266, 267, 269, 273, 274, 278, 279, 280, 282, 283, 286, 292, 295, 296, 297, 298, 299, 301, 302, 305, 306, 307, 310, 311, 312, 313, 314, 319, 320, 321, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 339, 340, 341, 343, 344, 352, 360, 361, 362, 364, 369, 370, 372, 375, 380, 392], "storag": [0, 8, 382, 388], "shard": [0, 8, 19, 63, 74, 186, 218, 221, 260, 261, 262, 263, 349, 351, 359], "memori": [0, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 390, 392], "config": [0, 8, 26, 65, 87, 88, 104, 105, 124, 125, 218, 252, 260, 261, 275, 290, 316, 354, 355, 356, 375, 378, 382, 384, 390, 392, 393, 394, 395, 397], "api": [0, 6, 357, 375, 377, 378, 379, 392, 397], "rank": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 126, 127, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 222, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 248, 249, 253, 254, 255, 256, 257, 258, 259, 265, 266, 267, 268, 269, 273, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 352, 360, 361, 362, 363, 364, 369, 370, 371, 372, 373, 374, 381], "to_rank": [0, 381], "open_devic": [0, 11, 62, 75, 87, 88, 128, 187, 272, 338, 349, 350, 351, 390, 391, 392, 393, 397], "close_devic": [0, 390, 391, 392, 393, 395, 397], "manage_devic": [0, 397], "synchronize_devic": 0, "setdefaultdevic": 0, "getdefaultdevic": 0, "format_input_tensor": 0, "format_output_tensor": 0, "pad_to_tile_shap": 0, "create_sharded_memory_config": [0, 381], "core": [0, 6, 8, 74, 186, 218, 247, 350, 351, 365, 375, 380, 381, 391, 392, 394], "as_tensor": [0, 390, 391, 392, 393, 395], "from_torch": [0, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 360, 361, 362, 363, 364, 368, 369, 370, 371, 372, 374, 375, 390, 391, 392, 393, 395, 397], "to_torch": [0, 6, 249, 375, 390, 391, 392, 393, 395, 397], "to_devic": [0, 26, 28, 29, 65, 66, 75, 83, 87, 128, 159, 160, 161, 162, 163, 172, 186, 218, 219, 221, 223, 224, 231, 242, 251, 252, 253, 255, 270, 271, 272, 295, 317, 330, 335, 350, 351, 368, 390, 391, 392, 393, 395], "from_devic": [0, 390, 391, 392, 393, 394, 395], "to_layout": [0, 75, 129, 352, 381, 390, 391, 392], "dump_tensor": [0, 390, 391, 392, 393, 395], "load_tensor": [0, 390, 391, 392, 393, 394, 395], "dealloc": [0, 8, 272, 381, 390, 391, 392, 393, 395, 397], "realloc": [0, 390, 391, 392, 393, 395], "to_memory_config": [0, 381, 395], "creation": [0, 30, 89, 90, 129, 130, 131, 245, 246, 373, 374], "arang": [0, 390, 391, 392, 393], "empti": [0, 6, 8, 396, 397], "empty_lik": 0, "zero": [0, 63, 67, 68, 69, 80, 108, 118, 131, 217, 242, 251, 260, 261, 262, 263, 273, 316, 317, 381, 393, 397], "zeros_lik": [0, 106], "ones": [0, 84, 124], "ones_lik": 0, "full": [0, 376, 380, 397], "full_lik": 0, "matrix": [0, 5, 8, 87, 186, 218, 378, 381, 382, 384, 390, 397], "multipl": [0, 5, 6, 8, 61, 75, 117, 130, 135, 140, 174, 218, 228, 245, 260, 261, 262, 263, 278, 336, 350, 373, 380, 382, 384], "matmul": [0, 186, 382, 390, 391, 392, 393, 394], "linear": [0, 26, 104, 275, 318, 375, 390, 391, 392, 393], "pointwis": 0, "unari": [0, 6, 12, 14, 16, 27, 33, 35, 38, 42, 48, 52, 53, 55, 57, 59, 70, 72, 76, 78, 85, 93, 94, 96, 98, 100, 101, 112, 114, 119, 126, 135, 136, 138, 140, 144, 145, 147, 149, 151, 153, 156, 158, 165, 166, 167, 168, 169, 179, 183, 184, 188, 189, 191, 193, 196, 204, 205, 210, 215, 227, 233, 238, 241, 243, 244, 254, 266, 268, 269, 273, 278, 279, 280, 283, 284, 292, 294, 296, 301, 304, 305, 307, 309, 310, 312, 314, 318, 320, 322, 324, 326, 336, 337, 339, 341, 343, 345, 360, 361, 362, 364], "ab": [0, 13], "aco": [0, 15], "acosh": [0, 17], "asin": [0, 34], "asinh": [0, 36], "atan": [0, 41], "atanh": [0, 43], "bitwise_not": 0, "bitwise_left_shift": 0, "bitwise_right_shift": 0, "cbrt": 0, "ceil": [0, 54, 221], "celu": [0, 56, 390, 391, 392, 393], "clamp": [0, 58], "clip": [0, 60, 390, 391, 392, 393], "co": 0, "cosh": [0, 73], "deg2rad": [0, 77], "digamma": [0, 79], "experiment": [0, 4, 8, 376, 394], "dropout": 0, "gelu_bw": 0, "elu": [0, 86], "eqz": 0, "erf": [0, 95], "erfc": [0, 97], "erfinv": [0, 99], "exp": [0, 364, 393, 397], "exp2": [0, 102], "expm1": [0, 113], "fill": [0, 115, 117, 118, 130, 131, 245, 246, 287, 316, 373, 374, 380], "floor": [0, 80, 81, 120, 121, 268, 269], "frac": [0, 39, 80, 127], "geglu": [0, 390, 391, 392, 393], "gelu": [0, 8, 109, 135, 137, 375], "glu": [0, 390, 391, 392, 393], "gez": 0, "gtz": 0, "hardshrink": [0, 146, 180, 390, 391, 392, 393], "hardsigmoid": [0, 148], "hardswish": [0, 150], "hardtanh": [0, 152], "heavisid": 0, "i0": [0, 157], "ident": [0, 107, 395], "isfinit": 0, "isinf": 0, "isnan": 0, "isneginf": 0, "isposinf": 0, "leaky_relu": [0, 180], "lez": 0, "lgamma": [0, 185], "log10": [0, 190], "log1p": [0, 192], "log2": [0, 194], "log_sigmoid": 0, "logical_not": [0, 205], "logical_not_": 0, "logit": [0, 211, 390, 391, 392, 393], "ltz": 0, "mish": [0, 8], "multigammaln": 0, "neg": [0, 239, 258], "nez": 0, "normalize_glob": 0, "normalize_hw": 0, "polygamma": [0, 255, 390, 391, 392, 393], "prelu": 0, "rad2deg": [0, 267], "rdiv": [0, 269], "reciproc": [0, 274, 297, 381], "reglu": [0, 390, 391, 392, 393], "relu": [0, 8, 18, 179, 235, 278, 282, 283, 284, 318, 334, 364, 395], "relu_max": 0, "relu_min": 0, "relu6": [0, 281], "remaind": [0, 286], "round": [0, 37, 80, 81, 268, 269, 293, 381], "rsqrt": 0, "selu": [0, 302], "sigmoid": [0, 8, 197, 306], "sigmoid_accur": 0, "sign": [0, 308], "signbit": 0, "silu": [0, 8, 311, 336, 397], "sin": [0, 313], "sinh": [0, 315], "softmax": [0, 354, 355, 392], "softplu": [0, 8, 319], "softshrink": [0, 321, 390, 391, 392, 393], "softsign": [0, 323], "sqrt": [0, 8, 154], "squar": [0, 8, 231, 297, 325, 327, 328, 354, 355, 381], "swiglu": [0, 390, 391, 392, 393], "swish": 0, "tan": [0, 340], "tanh": [0, 8, 45, 109, 137, 342], "tanhshrink": [0, 344], "threshold": [0, 318, 319, 346, 390, 391, 392, 393], "tril": 0, "triu": 0, "trunc": [0, 80, 81, 268, 269], "unary_chain": 0, "clamp_bw": 0, "clip_bw": 0, "hardtanh_bw": 0, "threshold_bw": 0, "softplus_bw": 0, "rdiv_bw": 0, "pow_bw": 0, "exp_bw": 0, "tanh_bw": 0, "sqrt_bw": 0, "multigammaln_bw": 0, "lgamma_bw": 0, "fill_bw": 0, "hardsigmoid_bw": 0, "cos_bw": 0, "acosh_bw": 0, "acos_bw": 0, "atan_bw": 0, "rad2deg_bw": 0, "frac_bw": 0, "trunc_bw": 0, "log_sigmoid_bw": 0, "fill_zero_bw": 0, "i0_bw": 0, "tan_bw": 0, "sigmoid_bw": 0, "rsqrt_bw": 0, "neg_bw": 0, "relu_bw": 0, "logit_bw": 0, "hardshrink_bw": 0, "softshrink_bw": 0, "leaky_relu_bw": 0, "elu_bw": 0, "celu_bw": 0, "rpow_bw": 0, "floor_bw": 0, "round_bw": 0, "log_bw": 0, "relu6_bw": 0, "abs_bw": 0, "silu_bw": 0, "selu_bw": 0, "square_bw": 0, "prod_bw": 0, "hardswish_bw": 0, "tanhshrink_bw": 0, "atanh_bw": 0, "asin_bw": 0, "asinh_bw": 0, "sin_bw": 0, "sinh_bw": 0, "log10_bw": 0, "log1p_bw": 0, "erfc_bw": 0, "ceil_bw": 0, "softsign_bw": 0, "cosh_bw": 0, "logiteps_bw": 0, "log2_bw": 0, "sign_bw": 0, "div_no_nan_bw": 0, "exp2_bw": 0, "expm1_bw": 0, "reciprocal_bw": 0, "digamma_bw": 0, "erfinv_bw": 0, "erf_bw": 0, "deg2rad_bw": 0, "polygamma_bw": 0, "repeat_bw": 0, "real": [0, 163, 252, 271, 376], "angl": [0, 29], "is_imag": 0, "is_real": 0, "polar_bw": 0, "imag_bw": 0, "real_bw": 0, "angle_bw": 0, "conj_bw": 0, "conj": [0, 66], "polar": [0, 253], "alt_complex_rotate90": 0, "binari": [0, 18, 20, 39, 46, 47, 49, 50, 51, 80, 82, 91, 92, 121, 122, 132, 133, 134, 142, 143, 154, 164, 174, 175, 177, 178, 198, 199, 202, 203, 206, 207, 208, 209, 213, 214, 222, 226, 235, 236, 237, 240, 248, 256, 257, 259, 285, 298, 300, 328, 332, 334, 371], "add": [0, 19, 249, 354, 355, 376, 378, 379, 382, 392, 394, 395, 397], "addalpha": [0, 21], "subalpha": [0, 333], "multipli": [0, 8, 20, 22, 24, 186, 218, 232, 332, 367, 382, 384, 397], "subtract": [0, 3, 298, 299, 331, 359, 397], "div": 0, "div_no_nan": [0, 83], "floor_div": 0, "fmod": [0, 123], "gcd": 0, "lcm": 0, "logical_and_": 0, "logical_or_": 0, "logical_xor_": 0, "rpow": [0, 295], "rsub": 0, "ldexp": [0, 176], "logical_and": 0, "logical_or": 0, "logical_xor": [0, 390, 391, 392, 393], "bitwise_and": [0, 47, 50], "bitwise_or": 0, "bitwise_xor": 0, "logaddexp": [0, 201], "logaddexp2": [0, 200], "hypot": [0, 155, 390, 391, 392, 393], "xlogi": [0, 372, 390, 391, 392, 393], "squared_differ": [0, 329], "gt": [0, 390, 391, 392, 393, 394, 395, 396], "gt_": 0, "lt_": 0, "ge_": 0, "le_": 0, "eq_": 0, "ne_": 0, "ge": 0, "lt": [0, 390, 391, 392, 393, 394, 395, 396], "le": 0, "eq": 0, "ne": 0, "isclos": [0, 390, 391, 392, 393], "nextaft": [0, 390, 391, 392, 393], "maximum": [0, 8, 31, 57, 58, 59, 60, 152, 220, 221, 390, 391, 392, 393], "minimum": [0, 6, 57, 58, 59, 60, 152, 225, 381, 390, 391, 392, 393], "outer": 0, "pow": 0, "polyv": [0, 390, 391, 392, 393], "scatter": [0, 275], "atan2": [0, 40, 390, 391, 392, 393], "add_bw": 0, "assign_bw": 0, "atan2_bw": 0, "bias_gelu_bw": 0, "div_bw": 0, "embedding_bw": 0, "fmod_bw": 0, "remainder_bw": 0, "addalpha_bw": 0, "subalpha_bw": 0, "xlogy_bw": 0, "hypot_bw": 0, "ldexp_bw": 0, "logaddexp_bw": 0, "logaddexp2_bw": 0, "mul_bw": 0, "sub_bw": 0, "squared_difference_bw": 0, "concat_bw": 0, "rsub_bw": 0, "min_bw": 0, "max_bw": 0, "ternari": [0, 22, 24, 181, 216, 369], "addcdiv": [0, 23, 390, 391, 392, 393], "addcmul": [0, 25, 390, 391, 392, 393], "mac": [0, 390, 391, 392, 393], "lerp": [0, 182, 390, 391, 392, 393], "addcmul_bw": 0, "addcdiv_bw": 0, "where_bw": 0, "lerp_bw": 0, "loss": [0, 172, 231], "l1_loss": [0, 390, 391, 392, 393], "mse_loss": [0, 390, 391, 392, 393], "reduct": [0, 5, 8, 31, 172, 219, 223, 224, 231, 264, 330, 335, 353, 368], "cumprod": 0, "max": [0, 57, 58, 59, 60, 151, 152, 221, 283, 394, 396], "mean": [0, 8, 44, 172, 231, 381], "min": [0, 57, 58, 59, 60, 151, 152, 283, 284, 396], "std": [0, 6, 251, 303, 353, 395], "sum": [0, 107, 230], "var": 0, "argmax": 0, "prod": [0, 74, 265], "topk": 0, "sort": [0, 353], "cumsum": 0, "movement": 0, "concat": [0, 64, 379], "nonzero": 0, "pad": [0, 61, 67, 68, 69, 87, 117, 124, 125, 129, 221, 250, 251, 260, 261, 262, 263, 290, 316, 348, 350, 381, 390, 395], "permut": [0, 221, 359, 392, 395], "reshap": [0, 8, 221, 359, 390, 391, 392, 393, 394, 395], "repeat": [0, 5, 288, 289], "repeat_interleav": 0, "tiliz": [0, 32, 44, 391, 392], "tilize_with_val_pad": 0, "fill_rm": [0, 116], "fill_ones_rm": 0, "until": [0, 106, 352, 366], "untilize_with_unpad": 0, "indexed_fil": 0, "normal": [0, 44, 141, 158, 173, 291, 317, 394, 396], "group_norm": 0, "layer_norm": 0, "rms_norm": 0, "batch_norm": 0, "moreh": [0, 230], "moreh_sum": 0, "transform": [0, 5, 186, 252, 375, 392, 393, 394], "split_query_key_value_and_split_head": [0, 392], "concatenate_head": [0, 392], "attention_softmax": 0, "attention_softmax_": [0, 392], "rotary_embed": 0, "scaled_dot_product_attent": 0, "scaled_dot_product_attention_decod": 0, "ccl": [0, 5, 26, 275], "all_gath": [0, 390, 391, 392, 393], "reduce_scatt": 0, "all_reduc": 0, "embed": [0, 88, 110, 390], "convolut": [0, 5, 63, 67, 68, 69, 105, 221, 260, 261, 262, 263, 395], "conv1d": [0, 8, 395], "conv2d": [0, 8, 9, 69, 260, 261, 262, 263, 390, 391, 392, 393, 395], "conv3d": 0, "conv_transpose2d": [0, 8], "prepare_conv_weight": 0, "prepare_conv_bia": 0, "prepare_conv_transpose2d_weight": 0, "prepare_conv_transpose2d_bia": 0, "conv2dconfig": [0, 67, 68, 69, 260, 261, 262, 263, 395], "act_block_h_overrid": [0, 8, 395], "act_block_w_div": [0, 8], "activ": [0, 4, 8, 18, 91, 132, 133, 142, 152, 174, 175, 177, 186, 198, 199, 202, 206, 208, 213, 218, 222, 226, 235, 236, 298, 328, 334, 375, 378, 382, 385, 395], "always_preprocess_weight": [0, 8], "core_grid": [0, 8, 74, 141, 186, 218, 375, 391, 392], "deallocate_activ": [0, 8, 395], "dtype": [0, 6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 368, 369, 370, 371, 372, 373, 374, 375, 381, 390, 391, 392, 393, 395, 397], "enable_act_double_buff": [0, 8], "enable_kernel_stride_fold": [0, 8], "enable_split_read": [0, 8], "enable_subblock_pad": [0, 8], "enable_weights_double_buff": [0, 8], "in_plac": [0, 8, 221], "output_layout": [0, 8, 141], "override_sharding_config": [0, 8], "preprocess_weights_on_devic": [0, 8], "reallocate_halo_output": [0, 8], "reshard_if_not_optim": [0, 8], "shard_layout": [0, 8, 395], "transpose_shard": [0, 8], "weights_dtyp": [0, 8, 260, 261, 395], "conv2dsliceconfig": 0, "slicetypeenum": [0, 9], "sliceheight": [0, 9], "slicewidth": [0, 9], "name": [0, 3, 6, 9, 32, 84, 187, 228, 229, 357, 375, 378, 379, 380, 394, 395, 396, 397], "valu": [0, 8, 9, 20, 21, 22, 23, 24, 25, 30, 31, 44, 55, 56, 57, 58, 59, 60, 63, 65, 78, 83, 86, 89, 90, 107, 111, 114, 116, 117, 124, 129, 130, 131, 139, 145, 146, 147, 149, 151, 152, 153, 161, 162, 163, 164, 170, 171, 180, 184, 212, 219, 221, 223, 224, 234, 245, 246, 247, 249, 251, 254, 257, 258, 268, 283, 284, 290, 294, 295, 301, 316, 318, 319, 320, 321, 330, 332, 333, 335, 345, 346, 348, 353, 359, 360, 361, 368, 373, 374, 376, 381, 382, 384, 388, 392, 397], "num_slic": [0, 9], "slice_typ": [0, 9], "pool": [0, 139, 221, 367], "global_avg_pool2d": 0, "max_pool2d": 0, "vision": 0, "upsampl": 0, "kv": 0, "kv_cach": 0, "fill_cache_for_user_": 0, "update_cache_for_token_": 0, "convers": [0, 77, 267, 350, 390], "model_preprocess": [0, 375, 392, 393, 394, 395], "preprocess_model": [0, 393, 394, 395], "preprocess_model_paramet": [0, 375, 393, 395], "report": [0, 68, 218, 376, 390, 391, 392, 393, 394, 395, 397], "set_printopt": [0, 397], "register_pre_operation_hook": [0, 397], "register_post_operation_hook": [0, 397], "creat": [0, 4, 6, 8, 30, 61, 74, 89, 90, 107, 111, 114, 130, 131, 245, 246, 373, 374, 379, 381, 382, 387, 388, 392, 396], "host": [0, 8, 32, 67, 68, 128, 249, 316, 338, 350, 378, 380, 381, 382, 388, 391, 392, 393, 394, 395], "borrow": [0, 381, 382, 388], "v": [0, 8, 32, 117, 358, 378, 382, 388], "own": [0, 8, 381, 382, 388], "open": [0, 5, 217, 247, 382, 388, 391, 392, 393, 394, 395, 396, 397], "initi": [0, 90, 228, 229, 375, 382, 384, 385, 388, 393, 394, 395], "b": [0, 6, 110, 289, 357, 358, 378, 382, 384, 388], "random": [0, 251, 382, 384, 388], "inspect": [0, 382, 384, 388], "output": [0, 3, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 380, 381, 382, 384, 385, 388, 393, 397], "attribut": [0, 6, 375, 380, 381, 382, 388, 394], "close": [0, 62, 217, 378, 382, 384, 385, 388, 393, 394, 395], "result": [0, 3, 30, 32, 44, 117, 129, 131, 158, 186, 218, 221, 246, 260, 261, 262, 263, 264, 268, 273, 374, 380, 381, 382, 384], "more": [0, 1, 5, 6, 13, 23, 45, 68, 81, 123, 137, 155, 190, 192, 194, 195, 197, 200, 201, 211, 212, 258, 265, 269, 273, 274, 286, 319, 325, 372, 377, 378, 380, 381, 382, 384, 392, 394, 396], "perform": [0, 8, 13, 15, 16, 17, 19, 21, 23, 25, 26, 28, 29, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 64, 66, 71, 72, 73, 77, 78, 79, 81, 83, 86, 92, 95, 97, 99, 102, 103, 104, 113, 115, 118, 120, 122, 123, 126, 127, 134, 135, 137, 139, 140, 143, 145, 146, 147, 148, 149, 150, 151, 152, 155, 157, 158, 159, 160, 176, 178, 180, 182, 184, 185, 190, 192, 194, 195, 197, 200, 201, 205, 210, 211, 212, 214, 217, 218, 220, 221, 225, 232, 233, 234, 237, 239, 243, 244, 249, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 274, 275, 278, 281, 282, 285, 286, 288, 293, 294, 295, 297, 299, 301, 302, 304, 306, 308, 311, 313, 314, 315, 316, 319, 320, 321, 322, 323, 325, 327, 329, 331, 333, 336, 337, 340, 342, 344, 345, 346, 360, 361, 363, 370, 372, 375, 376, 377, 378, 379, 380, 382, 384, 392], "write": [0, 1, 3, 6, 74, 186, 218, 375, 381, 382, 385, 394], "weight": [0, 8, 44, 67, 68, 69, 87, 88, 105, 141, 173, 181, 186, 259, 260, 261, 262, 263, 291, 375, 382, 385, 393, 394, 395], "first": [0, 3, 129, 135, 140, 186, 218, 242, 249, 278, 336, 375, 378, 380, 382, 385, 391, 397], "iter": [0, 382, 385], "subsequ": [0, 382, 385, 391, 397], "version": [0, 9, 228, 229, 358, 378, 380, 382, 385, 387, 390, 391, 393, 394], "process": [0, 63, 107, 260, 261, 380, 382, 385, 394], "paramet": [0, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 382, 385, 387, 393], "check": [0, 2, 6, 218, 376, 378, 382, 385, 394], "match": [0, 8, 61, 218, 228, 229, 290, 381, 382, 385, 390, 391, 393, 394, 395], "origin": [0, 111, 228, 229, 250, 264, 376, 379, 382, 385, 390], "implement": [0, 3, 8, 67, 106, 218, 249, 357, 358, 359, 375, 379, 380, 382, 385, 387], "tracer": [0, 382, 393, 395, 396, 397], "modul": [0, 6, 69, 228, 229, 375, 377, 382, 387, 389, 390, 391, 392, 396], "written": [0, 6, 170, 171, 186, 218, 382, 389, 392], "profil": [0, 3, 158, 303, 378, 382, 397], "resnet": [0, 380, 382, 394], "block": [0, 8, 67, 68, 69, 74, 217, 218, 221, 260, 261, 262, 263, 273, 381, 382], "torchvis": [0, 382, 387, 394, 396], "preprocess": [0, 6, 8, 32, 67, 68, 69, 228, 229, 260, 261, 262, 263, 381, 382, 387], "displai": [0, 378, 382, 383, 387], "pass": [0, 6, 8, 67, 68, 109, 110, 117, 276, 277, 359, 375, 379, 382, 387, 390, 393, 394], "constructor": [0, 382, 387], "dit_xl_2": [0, 382, 396], "With": [0, 107, 382], "pytorch": [0, 3, 5, 8, 31, 67, 68, 69, 111, 218, 260, 261, 262, 263, 353, 357, 359, 382, 383, 394, 397], "base": [0, 3, 4, 6, 8, 9, 44, 63, 74, 218, 250, 378, 381, 382, 383, 392], "http": [0, 26, 275, 377, 378, 382, 383, 394], "github": [0, 2, 26, 275, 377, 378, 382, 383], "com": [0, 26, 275, 377, 378, 382, 383], "facebookresearch": [0, 382, 383], "dit": [0, 382, 383], "git": [0, 228, 229, 378, 382, 383, 394], "xl": [0, 382, 383], "sampl": [0, 382, 383], "train": [0, 44, 382, 383], "onboard": 0, "new": [0, 90, 131, 246, 287, 290, 374, 376, 380, 390, 393], "rewrit": 0, "switch": [0, 249, 318], "ad": [0, 67, 68, 69, 186, 260, 261, 262, 263, 379, 390], "faq": 0, "need": [0, 1, 2, 9, 186, 218, 376, 378, 380, 381, 390, 391, 392, 397], "bind": [0, 394], "golden": [0, 375, 397], "perf": [0, 390, 391, 392, 393, 394, 395], "header": [0, 3], "profile_thi": [0, 394], "descript": [0, 116, 117, 379], "uplift": 0, "file": [0, 2, 4, 6, 32, 84, 187, 376, 378, 380, 394, 396, 397], "bug": 0, "featur": [0, 5, 8, 379, 386, 397], "propos": [0, 379], "request": [0, 350, 379, 394, 396], "troubleshoot": [0, 376], "tip": 0, "commun": 0, "develop": [0, 4, 5, 8, 377, 378, 379, 380, 394], "index": [0, 170, 171, 353, 358, 380, 394, 396], "search": 0, "page": [0, 378, 382], "If": [1, 2, 6, 8, 9, 31, 61, 67, 68, 69, 74, 107, 111, 186, 218, 228, 229, 247, 249, 251, 264, 265, 316, 317, 338, 352, 353, 358, 359, 377, 378, 379, 380, 393, 397], "would": [1, 8, 379, 380, 381], "like": [1, 118, 318, 375, 378, 381, 390, 397], "thi": [1, 3, 4, 6, 8, 9, 10, 11, 31, 44, 61, 63, 67, 68, 69, 88, 107, 109, 110, 111, 114, 124, 125, 139, 158, 176, 221, 250, 260, 261, 262, 263, 264, 283, 284, 318, 357, 375, 376, 378, 379, 380, 381, 382, 383, 386, 387, 390, 391, 392, 396, 397], "project": [1, 2, 4, 5, 377], "pleas": [1, 2, 218, 376, 377, 378, 379, 382, 397], "review": [1, 377, 379], "standard": [1, 2, 284, 376, 377, 378], "gain": 1, "access": [1, 2, 5, 378, 396], "read": [1, 74, 377, 381], "section": [1, 2, 376, 381], "detail": [1, 6, 13, 23, 45, 81, 123, 137, 155, 190, 192, 194, 195, 197, 200, 201, 211, 212, 258, 265, 269, 274, 286, 319, 325, 372, 377, 396, 397], "contact": 1, "u": [1, 379], "have": [2, 3, 4, 6, 31, 75, 88, 107, 125, 181, 218, 260, 261, 264, 268, 347, 348, 353, 365, 366, 376, 378, 380, 381, 382, 390, 396], "formal": 2, "permiss": 2, "cloud": 2, "issu": [2, 8, 218, 318, 376, 379, 380, 390, 391, 392, 393, 394, 395], "can": [2, 3, 4, 5, 6, 8, 9, 30, 45, 57, 58, 59, 60, 67, 68, 69, 80, 81, 90, 131, 137, 218, 246, 249, 260, 261, 262, 263, 268, 269, 276, 277, 318, 338, 374, 375, 378, 380, 381, 382, 390, 391, 392, 393, 395, 396, 397], "out": [2, 6, 8, 106, 108, 111, 284, 316, 353, 378, 390, 392, 395], "relev": [2, 376], "ever": 2, "help": [2, 379, 382], "we": [2, 3, 4, 125, 129, 218, 352, 376, 378, 379, 381, 383, 386, 387, 390, 391, 396, 397], "offici": [2, 378], "discord": 2, "channel": [2, 8, 26, 44, 67, 68, 69, 104, 116, 117, 139, 221, 260, 261, 262, 263, 275, 367, 380], "repres": [2, 5, 380, 381, 390], "both": [2, 8, 19, 67, 68, 69, 107, 218, 257, 260, 261, 262, 263, 375, 376, 380, 381, 390, 395], "tenstorr": [2, 6, 8, 26, 275, 375, 376, 377, 378, 382, 390, 391, 396, 397], "metal": [2, 5, 26, 275, 377, 378, 382, 390, 391, 392, 393, 394, 395, 396], "join": [2, 394], "discuss": [2, 376], "board": 2, "member": [2, 9], "bounc": 2, "idea": [2, 376], "off": [2, 283, 292, 375, 381], "each": [2, 3, 9, 44, 63, 117, 139, 221, 249, 287, 289, 316, 380, 381], "other": [2, 6, 8, 218, 375, 376, 377, 378, 381, 383, 386, 387, 397], "refer": [2, 3, 5, 13, 23, 45, 68, 75, 81, 90, 114, 123, 137, 155, 190, 192, 194, 195, 197, 200, 201, 211, 212, 218, 234, 258, 265, 269, 274, 286, 319, 325, 372, 379, 381, 397], "code": [2, 6, 31, 111, 276, 277, 353, 359, 377, 378, 379, 380, 390, 394, 397], "conduct": 2, "when": [2, 6, 8, 9, 10, 11, 44, 63, 67, 68, 69, 74, 81, 110, 155, 202, 217, 218, 222, 228, 251, 257, 264, 269, 350, 376, 379, 381, 390, 392, 393, 395, 397], "interact": 2, "ensur": [3, 4, 61, 111, 338, 376, 378, 381], "tt": [3, 4, 11, 26, 275, 338, 347, 348, 365, 366, 367, 382, 383, 386, 387, 390, 391, 392, 393, 394, 395, 396], "requir": [3, 6, 19, 21, 37, 44, 64, 74, 81, 116, 117, 130, 228, 229, 232, 245, 299, 331, 333, 370, 373, 376, 378, 380, 386, 394, 396], "model": [3, 5, 228, 229, 376, 379, 380, 382, 383, 385, 389, 390, 391, 394, 395], "follow": [3, 6, 8, 69, 111, 117, 218, 290, 375, 377, 378, 379, 380, 381, 382, 396, 397], "instruct": [3, 4, 376, 377, 378, 382, 397], "readi": [3, 4, 359, 376], "come": [3, 380], "typic": [3, 139, 381], "found": [3, 6, 375, 382, 394, 396], "under": [3, 8, 376, 379, 380, 382, 397], "your_model": 3, "perf_model": 3, "py": [3, 6, 375, 376, 380, 393, 394, 397], "pytest": [3, 4, 375, 376, 380, 394, 397], "test": [3, 4, 6, 375, 376, 379, 380, 392, 394, 397], "python_api_test": 3, "perf_your_model": 3, "csv": [3, 380, 394], "perf_your_model_d": 3, "contain": [3, 4, 6, 8, 30, 87, 107, 221, 273, 381, 390], "tabl": [3, 378, 394], "two": [3, 61, 63, 135, 140, 218, 278, 290, 336, 350, 359, 375, 378, 381], "row": [3, 8, 54, 105, 115, 117, 118, 120, 127, 242, 293, 308, 363, 380, 381, 390, 391, 394], "batch": [3, 44, 67, 68, 69, 116, 117, 161, 186, 218, 221, 260, 261, 262, 263, 358, 380], "sec": 3, "second": [3, 129, 135, 140, 186, 218, 249, 259, 278, 290, 336, 380, 392, 394, 397], "compil": [3, 378, 391, 394, 397], "time": [3, 106, 164, 228, 287, 376, 380, 391, 392, 394, 397], "infer": [3, 44, 376, 380, 394], "g": [3, 69, 218, 378, 380, 381], "throughput": 3, "inf": [3, 227, 233], "cpu": [3, 378, 380, 394, 396], "vit": 3, "patch16": 3, "30": [3, 64, 89, 394], "51": [3, 393], "16": [3, 316, 381, 392, 394, 396], "05": [3, 44, 396], "46": [3, 394], "0": [3, 6, 8, 9, 11, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 57, 58, 59, 60, 62, 63, 64, 65, 69, 70, 75, 76, 78, 80, 81, 85, 87, 88, 89, 90, 91, 93, 94, 96, 98, 100, 101, 103, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 124, 128, 129, 130, 131, 132, 133, 136, 137, 138, 142, 144, 145, 146, 147, 149, 153, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 175, 177, 179, 180, 181, 183, 184, 187, 188, 189, 191, 193, 196, 198, 199, 202, 204, 206, 208, 210, 212, 213, 215, 217, 221, 222, 226, 227, 231, 232, 235, 236, 238, 239, 241, 242, 245, 246, 247, 249, 251, 252, 256, 257, 258, 264, 265, 266, 268, 269, 270, 272, 273, 275, 279, 280, 283, 284, 289, 290, 292, 296, 297, 298, 299, 304, 305, 307, 309, 310, 311, 312, 316, 317, 318, 320, 321, 324, 325, 326, 328, 331, 332, 333, 334, 338, 339, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 357, 358, 359, 360, 361, 362, 364, 365, 366, 369, 370, 373, 374, 375, 378, 380, 381, 390, 391, 392, 393, 394, 395, 396, 397], "0623": 3, "29": [3, 394], "4960": 3, "includ": [3, 5, 6, 61, 376, 381], "without": [3, 8, 90, 378], "ani": [3, 8, 116, 117, 249, 376, 394], "abovement": 3, "grayskul": [3, 6, 32, 375, 382, 383, 386, 387, 392, 393, 397], "It": [3, 5, 6, 8, 9, 67, 68, 69, 228, 229, 352, 390], "sinc": [3, 158], "dure": [3, 63, 129, 164, 352, 381], "do": [3, 376, 392], "pai": 3, "suggest": 3, "calcul": [3, 9, 74, 106, 268, 380], "comput": [3, 5, 6, 20, 22, 24, 39, 61, 67, 68, 69, 80, 82, 105, 107, 121, 132, 139, 141, 154, 164, 173, 174, 175, 181, 186, 198, 199, 202, 203, 206, 207, 208, 209, 216, 218, 222, 226, 240, 248, 256, 260, 261, 262, 263, 264, 291, 300, 317, 328, 332, 354, 355, 358, 359, 369, 371, 380, 390, 391], "": [3, 4, 6, 8, 61, 67, 68, 69, 106, 228, 229, 357, 358, 376, 378, 381, 390, 391, 392, 396], "also": [3, 6, 8, 67, 68, 69, 107, 234, 376, 380, 396], "maintain": [3, 379], "script": [3, 4, 376, 378, 380], "run_perform": [3, 376], "sh": [3, 4, 376, 378, 380, 394, 397], "facilit": 3, "easi": [3, 390], "wai": [3, 5, 228, 229, 375, 378, 390], "attempt": [3, 394], "fastest": 3, "command": [3, 12, 14, 18, 19, 21, 27, 31, 33, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 63, 64, 70, 76, 80, 81, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 106, 108, 109, 112, 114, 115, 116, 117, 119, 129, 130, 131, 132, 133, 136, 137, 138, 142, 144, 153, 156, 158, 161, 165, 166, 167, 168, 169, 172, 174, 175, 177, 179, 183, 188, 189, 191, 193, 196, 198, 199, 202, 204, 206, 208, 213, 215, 222, 226, 227, 231, 232, 235, 236, 238, 239, 241, 242, 246, 249, 251, 257, 258, 266, 268, 273, 279, 280, 283, 284, 290, 292, 296, 297, 298, 299, 304, 305, 307, 309, 310, 311, 312, 318, 324, 325, 326, 328, 331, 333, 334, 338, 339, 341, 342, 343, 347, 348, 352, 353, 357, 358, 362, 364, 365, 366, 369, 370, 374, 378, 380, 397], "merg": [3, 379], "built": [4, 5, 272, 378, 394, 396], "now": [4, 111, 129, 352, 367, 381, 390, 392], "root": [4, 297, 325, 354, 355], "provid": [4, 26, 31, 44, 106, 114, 186, 218, 228, 229, 264, 265, 275, 317, 338, 341, 348, 353, 376, 378, 379, 380, 381, 390, 392, 397], "which": [4, 8, 47, 50, 74, 106, 107, 111, 130, 131, 186, 218, 221, 228, 229, 245, 246, 268, 316, 317, 357, 358, 373, 374, 375, 380, 381], "ll": 4, "work": [4, 218, 316, 375, 376, 378, 382, 383, 386, 387, 397], "python_env": [4, 378, 393, 394, 396], "bin": [4, 84, 187, 378, 394], "python_env_dir": 4, "variabl": [4, 6, 378, 393, 395, 397], "create_venv": [4, 378], "control": [4, 8, 378, 390], "pythonpath": [4, 378, 396], "common": [4, 132, 174, 376], "practic": 4, "export": [4, 378, 397], "pwd": [4, 378], "folder": [4, 376, 380, 394], "split": [4, 63, 135, 140, 278, 336, 359, 381], "them": [4, 359, 378, 380, 390], "sub": [4, 338, 365], "In": [4, 6, 108, 218, 290, 350, 355, 375, 380, 381, 390, 396], "find": [4, 378, 390, 391, 392, 393, 394, 395], "prepar": [4, 8, 376, 394], "readm": [4, 376, 378, 394, 396], "md": [4, 26, 275, 376, 378], "give": [4, 380], "how": [4, 6, 9, 376, 380, 381, 391, 392, 397], "progress": [4, 396], "yet": 4, "mani": [4, 6, 375, 391, 396], "part": [4, 135, 140, 278, 336, 376, 380, 392], "entir": [4, 139, 338], "path_to_test_fil": 4, "test_in_fil": 4, "neural": 5, "network": 5, "design": 5, "feel": 5, "familiar": 5, "experienc": 5, "kei": [5, 359, 375, 381, 390, 392, 394], "than": [5, 8, 9, 63, 78, 116, 117, 133, 134, 142, 143, 177, 178, 184, 213, 214, 234, 264, 378, 380, 392, 397], "200": 5, "fuse": [5, 8, 375, 392], "A": [5, 6, 8, 30, 130, 131, 218, 245, 246, 318, 358, 373, 374, 376, 378, 379, 381], "differ": [5, 8, 69, 218, 304, 328, 381, 390, 397], "distribut": [5, 74, 84, 186, 218, 378, 381], "The": [5, 6, 8, 9, 10, 11, 26, 27, 30, 32, 61, 62, 67, 68, 69, 75, 84, 85, 87, 88, 89, 90, 104, 109, 111, 114, 117, 129, 130, 131, 139, 153, 179, 186, 217, 218, 221, 234, 245, 246, 247, 250, 260, 261, 262, 263, 275, 276, 277, 283, 284, 287, 338, 349, 352, 353, 357, 358, 367, 373, 374, 375, 376, 377, 378, 379, 380, 381, 390, 391, 396, 397], "abil": 5, "custom": [5, 6, 276, 277, 378, 392], "nativ": 5, "mesh": [5, 26, 129, 275, 350, 352, 378], "tool": [5, 378, 380, 394], "util": [5, 378, 381, 390, 391, 396], "significantli": [5, 8, 391], "speed": [5, 391], "load": [5, 187, 393, 394, 396], "comparison": [5, 164, 379], "mode": [5, 37, 44, 45, 81, 94, 96, 100, 136, 137, 172, 221, 231, 269, 296, 304, 390, 391, 392, 393, 394, 395], "long": [5, 379], "sequenc": [5, 6, 357, 358], "against": [5, 376, 397], "known": [5, 69], "document": [6, 376, 379, 394], "meant": 6, "contributor": 6, "Not": [6, 237, 375, 397], "mai": [6, 8, 75, 81, 155, 176, 218, 269, 273, 349, 375, 378, 381, 397], "wormhol": [6, 32, 375, 378, 382, 397], "take": [6, 264, 356, 376, 377, 381, 390], "one": [6, 57, 58, 59, 60, 264, 377], "input": [6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 376, 380, 381, 391, 392, 395, 396, 397], "produc": [6, 273, 376, 390, 391], "call": [6, 8, 106, 129, 276, 277, 352, 379, 380, 381, 390, 392, 394, 397], "optiona": 6, "composit": 6, "struct": 6, "specifi": [6, 8, 30, 61, 84, 89, 90, 107, 111, 130, 131, 186, 218, 228, 229, 245, 246, 249, 250, 251, 264, 287, 338, 348, 357, 358, 373, 374, 375, 391, 392], "simpli": [6, 350, 390], "defin": [6, 32, 379, 381], "method": [6, 272, 378, 394], "ttnn": [6, 378, 379, 381, 382, 385, 387, 388, 391, 396, 397], "register_oper": 6, "exist": [6, 247, 394, 396], "bind_registered_oper": 6, "auto": 6, "attach": [6, 228, 229, 394], "attach_golden_funct": 6, "let": [6, 381, 390, 392], "just": [6, 260, 261, 262, 263, 392, 396], "copi": [6, 61, 128, 158, 349, 378, 390], "order": [6, 74, 111, 218, 255, 299, 353, 380, 381, 382, 390, 392, 397], "directori": [6, 378, 382, 396], "structur": [6, 8, 9, 375], "shown": [6, 381], "below": [6, 106, 218, 376, 380, 381, 382], "cpp": 6, "categori": 6, "operation_nam": 6, "_device_oper": 6, "hpp": 6, "program_factory_0": 6, "_program_factori": 6, "factori": 6, "But": 6, "concret": [6, 218], "example_device_oper": 6, "spdx": [6, 397], "filecopyrighttext": [6, 397], "2023": [6, 394, 396], "inc": [6, 397], "licens": [6, 397], "identifi": [6, 394, 397], "apach": [6, 397], "pragma": 6, "onc": [6, 260, 261, 262, 263, 378, 391], "variant": 6, "device_oper": 6, "decor": [6, 379, 390, 391, 392, 393, 394, 395], "namespac": [6, 396], "exampledeviceoper": 6, "store": [6, 8, 44, 380, 381, 390], "aren": [6, 10], "t": [6, 10, 158, 218, 228, 229, 380, 390, 392, 394], "operation_attributes_t": 6, "bool": [6, 19, 21, 31, 32, 37, 44, 64, 67, 68, 69, 74, 75, 80, 81, 94, 96, 100, 136, 141, 164, 172, 186, 218, 221, 228, 229, 231, 232, 249, 262, 263, 264, 296, 299, 304, 331, 333, 347, 348, 353, 354, 355, 357, 358, 359, 365, 366, 370], "int": [6, 12, 14, 18, 19, 21, 26, 27, 30, 31, 33, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 63, 64, 67, 68, 69, 70, 74, 76, 80, 81, 85, 87, 88, 89, 91, 93, 94, 96, 98, 100, 101, 103, 104, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 119, 125, 129, 130, 131, 132, 133, 135, 136, 138, 140, 141, 142, 144, 153, 156, 158, 161, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 179, 183, 186, 188, 189, 191, 193, 196, 198, 199, 202, 204, 206, 208, 213, 215, 217, 218, 221, 222, 226, 227, 231, 232, 235, 236, 238, 239, 241, 242, 246, 247, 249, 250, 251, 254, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 273, 275, 278, 279, 280, 283, 284, 288, 292, 296, 298, 299, 304, 305, 307, 309, 310, 311, 312, 316, 317, 318, 324, 325, 326, 328, 331, 333, 334, 336, 338, 339, 341, 342, 343, 347, 348, 352, 353, 354, 355, 357, 358, 359, 362, 364, 365, 366, 367, 369, 370, 374, 381, 395, 396], "some_other_attribut": 6, "argument": [6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 247, 248, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 390, 393, 395], "don": [6, 218, 390], "thei": [6, 8, 9, 218, 376, 391, 392], "tensor_args_t": 6, "const": [6, 303], "input_tensor": [6, 12, 13, 14, 15, 16, 17, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 81, 83, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 124, 126, 127, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 169, 170, 173, 178, 179, 180, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 204, 205, 210, 211, 212, 214, 215, 221, 227, 233, 234, 237, 238, 239, 241, 242, 243, 244, 246, 249, 251, 252, 253, 254, 255, 256, 257, 258, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 374, 393, 395, 397], "howev": [6, 8, 249, 390], "show": [6, 218, 381, 391, 392], "els": [6, 80, 393, 395, 396], "done": [6, 8, 376, 378, 380, 390, 394], "io_tensor": 6, "optional_output_tensor": [6, 186, 218], "vector": [6, 218, 256, 304], "vector_of_tensor": 6, "tupl": [6, 67, 68, 69, 74, 249, 260, 261, 262, 263, 353, 359], "tuple_of_tensor": 6, "vector_of_optional_tensor": 6, "some_crazy_tuple_of_tensor": 6, "return": [6, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 392, 393, 394, 395, 396], "spec": [6, 74], "singl": [6, 358, 375, 379, 380, 381, 390], "tensorspec": 6, "spec_return_value_t": 6, "tensor_return_value_t": 6, "note": [6, 8, 66, 106, 160, 218, 245, 246, 271, 290, 378, 380, 381, 390, 392, 396, 397], "should": [6, 8, 69, 135, 140, 158, 164, 181, 218, 221, 242, 249, 257, 278, 336, 350, 376, 378, 379, 380, 390, 391, 392, 393, 395], "same": [6, 8, 18, 20, 22, 24, 39, 46, 47, 49, 50, 51, 67, 68, 80, 82, 88, 90, 91, 92, 106, 107, 114, 116, 121, 131, 132, 133, 134, 142, 143, 154, 158, 164, 174, 175, 177, 178, 181, 186, 198, 199, 202, 203, 206, 207, 208, 209, 213, 214, 216, 218, 222, 226, 228, 229, 235, 236, 237, 240, 242, 246, 248, 256, 257, 260, 261, 262, 263, 298, 300, 328, 332, 334, 350, 353, 357, 369, 371, 374, 378, 380, 381, 390, 392], "pattern": [6, 63, 228, 379], "e": [6, 218, 380, 381, 397], "singlecor": 6, "share": [6, 381], "between": [6, 30, 44, 67, 68, 69, 218, 260, 261, 262, 263, 351, 378], "override_runtime_argu": 6, "shared_variables_t": 6, "tt_metal": [6, 338, 367, 378, 380, 394], "kernelhandl": 6, "unary_reader_kernel_id": 6, "unary_writer_kernel_id": 6, "cached_program_t": 6, "cachedprogram": 6, "static": 6, "operation_attribut": 6, "tensor_arg": 6, "tensor_return_valu": 6, "void": 6, "cached_program": 6, "multicor": [6, 249, 347, 348, 365, 366], "size_t": 6, "num_cor": [6, 8], "num_cores_i": 6, "program_factory_t": 6, "mandatori": 6, "select": [6, 8, 44, 379], "arg": [6, 117, 251, 260, 261, 262, 263, 276, 277, 338, 397], "select_program_factori": 6, "valid": [6, 8, 26, 104, 116, 117, 218, 228, 229, 275, 375, 376, 380, 381, 394], "usual": 6, "validate_on_program_cache_miss": 6, "reus": [6, 260, 261, 262, 263], "less": [6, 177, 178, 213, 214, 264, 378, 380, 397], "validate_on_program_cache_hit": 6, "compute_output_spec": 6, "create_output_tensor": 6, "map": [6, 32, 390, 391, 392, 393, 394, 395], "abl": 6, "prim": 6, "after": [6, 8, 105, 249, 276, 379, 380, 390, 397], "op": [6, 8, 9, 10, 31, 67, 68, 69, 74, 88, 221, 317, 338, 357, 358, 364, 379, 380, 394, 397], "keep": [6, 31, 264, 375, 381], "mind": [6, 392], "overload": [6, 338, 390], "queue_id": [6, 12, 14, 18, 19, 21, 27, 31, 33, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 63, 64, 69, 70, 76, 80, 81, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 105, 106, 108, 109, 112, 114, 115, 116, 117, 119, 130, 131, 132, 133, 136, 137, 138, 142, 144, 153, 156, 158, 161, 165, 166, 167, 168, 169, 172, 174, 175, 177, 179, 183, 188, 189, 191, 193, 196, 198, 199, 202, 204, 206, 208, 213, 215, 221, 222, 226, 227, 231, 232, 235, 236, 238, 239, 241, 242, 246, 249, 251, 257, 258, 266, 268, 273, 279, 280, 283, 284, 290, 292, 296, 297, 298, 299, 304, 305, 307, 309, 310, 311, 312, 316, 318, 324, 325, 326, 328, 331, 333, 334, 339, 341, 342, 343, 347, 348, 353, 357, 358, 362, 364, 365, 366, 369, 370, 374], "automat": [6, 217, 350, 376, 380, 381, 390, 391], "primit": 6, "so": [6, 8, 117, 375, 390, 396], "invok": 6, "case": [6, 80, 129, 164, 218, 240, 259, 350, 375, 376, 381, 390, 397], "hash": [6, 228, 229, 380], "stl": 6, "hash_t": 6, "compute_program_hash": 6, "create_op_performance_model": 6, "opperformancemodel": 6, "make": [6, 228, 229, 318, 353, 359, 375, 381, 394, 397], "avail": [6, 8, 367, 382, 383, 386, 387, 397], "constexpr": 6, "some_condition_based_on_operation_attributes_and_or_tensor_arg": 6, "true": [6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 390, 391, 392, 393, 394, 395, 396, 397], "logical_shap": 6, "tensorlayout": 6, "pageconfig": 6, "memoryconfig": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "output_spec": 6, "create_device_tensor": 6, "42": [6, 391, 394, 396], "single_core_program_factori": 6, "work_split": 6, "output_tensor": [6, 12, 14, 18, 27, 31, 33, 38, 46, 47, 48, 49, 50, 51, 53, 63, 70, 76, 80, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 108, 112, 114, 115, 119, 125, 130, 131, 132, 133, 136, 137, 138, 142, 144, 153, 156, 158, 165, 166, 167, 168, 169, 172, 174, 175, 177, 179, 183, 188, 189, 191, 193, 196, 198, 199, 202, 204, 206, 208, 213, 215, 222, 226, 227, 231, 235, 236, 238, 239, 241, 246, 257, 258, 266, 268, 273, 279, 280, 283, 284, 292, 296, 297, 298, 304, 305, 307, 309, 310, 311, 312, 318, 324, 325, 326, 328, 334, 339, 341, 342, 343, 353, 362, 364, 369, 370, 374, 390, 395, 397], "src_buffer": 6, "dst_buffer": 6, "dataformat": 6, "cb_data_format": 6, "datatype_to_dataformat_convert": 6, "uint32_t": [6, 108], "single_tile_s": 6, "tiles": 6, "cb_data_format_output": 6, "single_tile_size_output": 6, "num_til": 6, "physical_volum": 6, "constant": [6, 381], "tile_hw": 6, "idevic": [6, 67, 68, 69, 260, 261, 338], "corecoord": 6, "compute_with_storage_grid_s": 6, "num_cores_x": [6, 375, 392], "x": [6, 39, 69, 186, 218, 252, 357, 358, 378, 380, 381, 391, 392, 395, 396], "y": [6, 39, 252, 380, 381, 391, 392, 396], "all_cor": 6, "core_group_1": 6, "core_group_2": 6, "num_tiles_per_core_group_1": 6, "num_tiles_per_core_group_2": 6, "split_work_to_cor": 6, "src0_cb_index": 6, "cbindex": 6, "c_0": 6, "num_input_til": 6, "circularbufferconfig": 6, "cb_src0_config": 6, "set_page_s": 6, "cb_src0": 6, "createcircularbuff": 6, "output_cb_index": 6, "c_2": 6, "num_output_til": 6, "cb_output_config": 6, "cb_output": 6, "src_is_dram": 6, "buffer_typ": 6, "buffertyp": 6, "dram": [6, 8, 9, 349, 351, 381, 390], "reader_compile_time_arg": 6, "dst_is_dram": 6, "writer_compile_time_arg": 6, "createkernel": 6, "eltwis": [6, 122, 259, 285], "kernel": [6, 8, 61, 67, 68, 69, 105, 109, 186, 218, 221, 260, 261, 262, 263, 317, 378, 380, 391], "dataflow": 6, "reader_unary_interleaved_start_id": 6, "readerdatamovementconfig": 6, "writer_unary_interleaved_start_id": 6, "writerdatamovementconfig": 6, "compute_kernel_args_group_1": 6, "per_core_block_cnt": 6, "per_core_block_s": 6, "math_approx_mod": 6, "fals": [6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 390, 391, 392, 393, 394, 395, 396, 397], "eltwise_unary_kernel_group_1_id": 6, "eltwise_sfpu": 6, "computeconfig": 6, "math_fidel": [6, 395], "mathfidel": [6, 395], "hifi4": [6, 380, 394], "compile_arg": 6, "rang": [6, 18, 30, 46, 47, 48, 49, 50, 51, 72, 116, 117, 132, 157, 174, 176, 191, 222, 227, 233, 235, 254, 292, 294, 314, 334, 339, 340, 341, 381], "compute_kernel_args_group_2": 6, "eltwise_unary_kernel_group_2_id": 6, "num_tiles_written": 6, "num_tiles_per_cor": 6, "tt_assert": 6, "setruntimearg": 6, "address": 6, "move": [6, 8, 124, 125, 376, 390, 392, 393, 394], "shared_vari": 6, "runtime_arg": 6, "getruntimearg": 6, "multi_core_program_factori": 6, "compositeexampleoper": 6, "composite_exampl": 6, "another_copi": 6, "_pybind": 6, "example_pybind": 6, "pybind": 6, "pybind_fwd": 6, "pybind11": 6, "bind_example_oper": 6, "r": [6, 252, 378, 394], "doc": [6, 394], "expos": 6, "logic": [6, 202, 203, 206, 207, 209, 218, 228, 229], "self": [6, 375, 381, 395], "correct": 6, "specif": [6, 8, 31, 111, 218, 247, 358, 376, 378, 381, 382, 394], "pybind_overload_t": 6, "decltyp": 6, "examples_pybind": 6, "py_modul": 6, "final": [6, 218, 375, 376, 379, 390], "wherev": 6, "want": [6, 378, 391, 393, 397], "compar": [6, 91, 133, 142, 177, 213, 218, 236, 391], "its": [6, 61, 69, 90, 222, 249, 316, 375, 376, 379, 380, 381, 397], "equival": [6, 31, 111, 353, 359, 378, 381], "import": [6, 107, 111, 221, 375, 376, 378, 380, 390, 391, 392, 393, 394, 395, 396, 397], "signatur": 6, "And": [6, 375, 381, 390, 391], "ignor": 6, "kwarg": [6, 260, 261, 262, 263, 276, 277, 338, 397], "def": [6, 375, 392, 393, 394, 395, 396, 397], "golden_funct": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "befor": [6, 8, 32, 107, 249, 260, 261, 262, 263, 277, 318, 376, 381], "some": [6, 338, 378, 397], "postprocess": 6, "manual": [6, 375, 378, 397], "pack": [6, 365, 366], "preprocess_golden_function_input": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "ttnn_input_tensor": 6, "postprocess_golden_function_output": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "torch_output_tensor": [6, 397], "becaus": [6, 381, 390, 391, 392], "wa": [6, 106, 376, 380, 381, 390, 396], "class": [8, 9, 375, 376, 380, 381, 394, 395, 396], "pybind11_object": [8, 9, 381], "flag": [8, 32, 394], "properti": [8, 9, 381], "size": [8, 9, 30, 67, 68, 69, 87, 88, 107, 218, 221, 247, 259, 260, 261, 262, 263, 264, 316, 357, 358, 359, 367, 381, 390, 397], "height": [8, 9, 61, 63, 67, 68, 69, 74, 116, 117, 130, 139, 218, 221, 245, 260, 261, 262, 263, 350, 373, 380, 381], "gener": [8, 87, 108, 117, 218, 252, 376, 380, 390, 391, 392, 393, 394, 395], "chunk": [8, 357, 358, 391, 396], "l1": [8, 9, 74, 186, 218, 247, 349, 351, 381, 392], "divid": [8, 9, 81, 354, 355], "among": 8, "further": [8, 391], "subdivid": 8, "within": [8, 30, 47, 50, 221, 376, 381, 382], "possibl": [8, 218, 352, 375, 393], "equal": [8, 91, 92, 111, 133, 134, 164, 177, 178, 236, 237, 397], "output_matrix_height_per_cor": 8, "lead": 8, "larg": [8, 9, 318, 375, 381, 393], "temporari": 8, "circular": 8, "oom": 8, "must": [8, 27, 31, 44, 67, 68, 88, 105, 107, 234, 258, 260, 261, 268, 290, 316, 347, 348, 349, 353, 365, 366, 378, 381], "32": [8, 26, 61, 63, 64, 75, 105, 117, 128, 130, 135, 139, 140, 186, 218, 242, 243, 244, 245, 248, 249, 251, 259, 265, 272, 278, 288, 289, 300, 316, 317, 336, 349, 350, 351, 364, 373, 381, 390, 391, 393, 394, 397], "evenli": [8, 30], "reduc": [8, 9, 31, 264, 275, 353], "width": [8, 9, 61, 67, 68, 69, 74, 116, 117, 130, 139, 218, 221, 245, 260, 261, 262, 263, 350, 356, 373, 380], "prevent": 8, "greater": [8, 63, 78, 116, 117, 133, 134, 142, 143, 184, 234, 397], "n150": 8, "thats": 8, "64": [8, 63, 74, 75, 128, 135, 140, 186, 218, 251, 272, 278, 316, 317, 336, 349, 350, 351, 381, 392, 393, 394, 395, 397], "2048": [8, 397], "divisor": [8, 132, 269], "halv": 8, "appli": [8, 9, 12, 14, 18, 27, 33, 38, 44, 48, 53, 61, 67, 68, 69, 70, 76, 85, 91, 93, 94, 96, 98, 100, 101, 105, 107, 108, 109, 110, 112, 114, 119, 132, 133, 135, 136, 138, 139, 140, 142, 144, 153, 156, 165, 166, 167, 168, 169, 174, 175, 177, 179, 183, 186, 188, 189, 191, 193, 196, 198, 199, 202, 204, 206, 208, 213, 215, 218, 221, 222, 226, 227, 235, 236, 238, 241, 249, 260, 261, 262, 263, 266, 273, 278, 279, 280, 283, 284, 292, 296, 298, 304, 305, 307, 309, 310, 312, 318, 324, 326, 328, 334, 336, 339, 341, 343, 362, 364, 376], "sigmoid_approx": 8, "determin": [8, 9, 69, 218, 228, 229, 381, 390, 391, 392, 393, 394, 395], "examin": 8, "assum": [8, 110, 125, 338, 367, 382], "alreadi": [8, 69, 228, 229, 247, 382, 394, 396], "alwai": [8, 382, 390, 393, 394], "even": [8, 27, 75, 217, 218], "format": [8, 9, 32, 39, 67, 68, 69, 105, 124, 125, 129, 221, 260, 261, 262, 263, 273, 379, 381], "out_channel": [8, 67, 68, 69, 260, 261, 262, 263, 395], "in_channel": [8, 67, 68, 69, 260, 261, 262, 263, 395], "kernel_height": [8, 67, 68, 262, 263], "kernel_width": [8, 67, 68, 262, 263], "grid": [8, 186, 218, 357, 358, 365, 375, 381], "boolean": [8, 162, 163, 341, 353], "indic": [8, 31, 87, 88, 111, 242, 316, 366], "whether": [8, 31, 32, 75, 186, 218, 221, 228, 229, 262, 263, 347, 348, 353, 358, 359, 365, 366], "conv": [8, 67, 68, 69, 395], "halo": [8, 9, 221], "micro": 8, "anoth": [8, 106], "float32": [8, 27, 30, 44, 76, 89, 90, 107, 114, 122, 132, 158, 174, 222, 226, 257, 266, 292, 362, 373, 374, 375, 380, 381, 390, 395, 397], "bfloat16": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 380, 381, 390, 391, 392, 394, 395, 397], "doubl": 8, "allow": [8, 218, 376, 379], "stall": 8, "reader": [8, 228], "improv": [8, 318, 376], "increas": 8, "usag": [8, 376, 378], "fold": 8, "stride": [8, 67, 68, 69, 221, 260, 261, 262, 263, 390, 395], "dimens": [8, 9, 26, 27, 31, 61, 63, 64, 107, 111, 130, 135, 139, 140, 161, 218, 219, 223, 224, 245, 249, 251, 259, 264, 265, 275, 278, 287, 289, 290, 316, 317, 330, 335, 336, 350, 352, 353, 356, 357, 358, 359, 368, 373, 381], "notic": 8, "caution": [8, 378], "product": [8, 106, 218, 264, 357, 358], "22378": 8, "nhwc": 8, "n": [8, 9, 44, 63, 67, 68, 69, 105, 107, 116, 117, 221, 242, 255, 256, 367, 378, 380, 390, 391, 394, 396], "h": [8, 9, 44, 67, 68, 69, 105, 116, 117, 221, 367, 381], "w": [8, 9, 44, 67, 68, 69, 105, 116, 117, 221, 367, 380], "ic": 8, "oc": 8, "current": [8, 61, 63, 74, 228, 229, 262, 263, 349, 358, 378, 381, 382, 390, 397], "condit": [8, 290, 376], "met": [8, 290], "exactli": 8, "writer": 8, "carri": [8, 284], "bottleneck": 8, "re": [8, 375, 377, 391], "overwrit": 8, "either": [8, 9, 74, 218, 350, 376, 378, 381, 382], "tile": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 265, 266, 267, 268, 269, 273, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 352, 357, 358, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 380, 381, 390, 391, 394], "row_major": [8, 30, 31, 74, 89, 90, 129, 130, 131, 243, 244, 245, 347, 348, 365, 366, 373, 374, 380, 390, 391, 395], "expect": [8, 69, 105, 117, 221, 359, 376, 379, 390], "next": [8, 240, 378, 381], "recommend": [8, 176, 375, 378, 390, 397], "faster": [8, 380, 392], "fragment": 8, "ideal": [8, 381], "face": 8, "reshard": [8, 395], "anywai": 8, "previou": [8, 88], "due": [8, 273, 380, 381, 390], "dilat": [8, 67, 68, 69, 221, 260, 261, 262, 263, 395], "tensormemorylayout": [8, 221, 395], "heurist": 8, "height_shard": [8, 395], "block_shard": [8, 221, 395], "width_shard": 8, "orient": [8, 74, 381], "major": [8, 54, 105, 115, 117, 118, 120, 127, 242, 293, 308, 363, 381, 390, 391], "column": [8, 380, 381, 394], "bia": [8, 44, 45, 67, 68, 69, 105, 141, 173, 186, 260, 261, 262, 263, 291, 375, 392, 395], "respons": [8, 394], "unspecifi": 8, "place": [9, 44, 92, 134, 143, 170, 171, 178, 214, 221, 237, 292, 349, 355, 381], "too": [9, 397], "fit": [9, 289], "conv2d_dram": 9, "happen": 9, "number": [9, 18, 19, 22, 24, 26, 45, 63, 67, 68, 69, 80, 81, 82, 91, 92, 104, 116, 117, 121, 122, 123, 133, 134, 142, 143, 175, 177, 178, 182, 198, 199, 202, 206, 208, 213, 214, 216, 218, 219, 221, 222, 223, 224, 226, 232, 235, 236, 237, 242, 249, 251, 258, 259, 260, 261, 262, 263, 275, 285, 286, 287, 289, 290, 298, 328, 330, 331, 334, 335, 348, 353, 354, 355, 368, 369, 379, 380, 381, 392, 396], "along": [9, 106, 107, 111, 265, 316, 317, 353, 356, 378, 381], "correspond": [9, 26, 87, 88, 275, 358], "divis": [9, 121, 135, 140, 268, 278, 336, 381], "last": [9, 27, 31, 61, 111, 130, 135, 140, 245, 278, 290, 336, 350, 353, 359, 373, 380, 381], "smaller": [9, 381], "rest": [9, 117], "prefer": [9, 378], "much": [9, 380, 391], "larger": 9, "_ttnn": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 381], "multi_devic": [10, 11, 124, 125, 247, 338], "meshdevic": [10, 11, 26, 32, 62, 89, 90, 124, 125, 129, 130, 131, 187, 217, 245, 246, 247, 275, 338, 349, 350, 352, 373, 374], "default": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 380, 391, 397], "plan": [10, 11, 124, 125, 250], "deprec": [10, 11, 124, 125, 250, 393], "futur": [10, 11, 124, 125, 250], "arg0": [11, 381], "none": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 390, 391, 392, 393, 394, 395], "device_id": [11, 62, 75, 87, 88, 128, 217, 247, 272, 338, 349, 350, 351, 390, 391, 392, 393, 395, 397], "python_fully_qualified_nam": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "abs_t": 12, "object": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 396], "default_preprocess_golden_function_input": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "_golden_funct": [12, 15, 18, 23, 25, 28, 29, 30, 35, 38, 42, 52, 53, 61, 63, 65, 66, 68, 70, 72, 76, 78, 81, 87, 89, 90, 91, 93, 94, 96, 98, 100, 101, 110, 112, 115, 119, 128, 129, 131, 133, 136, 138, 141, 142, 144, 147, 149, 152, 156, 158, 159, 160, 162, 163, 165, 166, 167, 168, 169, 173, 175, 177, 182, 183, 184, 186, 188, 189, 191, 193, 196, 198, 199, 203, 204, 207, 209, 213, 215, 218, 220, 227, 232, 233, 235, 236, 238, 241, 245, 246, 249, 251, 252, 253, 255, 258, 266, 270, 271, 272, 273, 279, 280, 287, 288, 289, 290, 291, 296, 304, 305, 307, 309, 310, 312, 314, 317, 318, 319, 322, 324, 326, 334, 337, 339, 341, 349, 350, 351, 352, 354, 355, 356, 359, 360, 361, 367, 370, 373, 374], "default_postprocess_golden_function_output": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "is_cpp_oper": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "is_experiment": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "element": [12, 14, 27, 31, 33, 38, 48, 53, 63, 67, 68, 69, 70, 76, 85, 93, 94, 96, 98, 100, 101, 107, 108, 111, 112, 114, 119, 135, 136, 138, 139, 140, 144, 153, 156, 165, 166, 167, 168, 169, 179, 183, 188, 189, 191, 193, 196, 204, 215, 227, 238, 241, 242, 249, 256, 257, 260, 261, 262, 263, 264, 266, 268, 273, 278, 279, 280, 283, 284, 289, 292, 296, 304, 305, 307, 309, 310, 312, 318, 324, 326, 336, 339, 341, 343, 353, 362, 364, 366, 381, 390], "wise": [12, 14, 27, 33, 38, 48, 53, 70, 76, 85, 93, 94, 96, 98, 100, 101, 108, 112, 114, 119, 135, 136, 138, 140, 144, 153, 156, 165, 166, 167, 168, 169, 179, 183, 188, 189, 191, 193, 196, 204, 215, 227, 238, 241, 257, 266, 268, 273, 278, 279, 280, 283, 284, 292, 296, 304, 305, 307, 309, 310, 312, 318, 324, 326, 336, 339, 341, 343, 362, 364], "mathrm": [12, 14, 18, 20, 27, 33, 38, 39, 46, 47, 48, 49, 50, 51, 53, 70, 76, 80, 82, 85, 91, 92, 93, 94, 96, 98, 100, 101, 108, 112, 114, 119, 121, 122, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 153, 154, 156, 158, 164, 165, 166, 167, 168, 169, 174, 175, 177, 178, 179, 181, 183, 188, 189, 191, 193, 196, 198, 199, 202, 203, 204, 206, 207, 208, 209, 213, 214, 215, 227, 235, 236, 237, 238, 240, 241, 248, 256, 257, 259, 266, 273, 278, 279, 280, 283, 284, 285, 292, 296, 298, 300, 304, 305, 307, 309, 310, 312, 318, 324, 326, 328, 332, 334, 336, 339, 341, 343, 362, 364, 371], "_tensor": [12, 14, 18, 20, 27, 33, 38, 39, 46, 47, 48, 49, 50, 51, 53, 70, 76, 80, 82, 85, 91, 92, 93, 94, 96, 98, 100, 101, 108, 112, 114, 119, 121, 122, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 153, 154, 156, 158, 164, 165, 166, 167, 168, 169, 174, 175, 177, 178, 179, 181, 183, 188, 189, 191, 193, 196, 198, 199, 202, 203, 204, 206, 207, 208, 209, 213, 214, 215, 227, 235, 236, 237, 238, 240, 241, 248, 256, 257, 259, 266, 273, 278, 279, 280, 283, 284, 285, 292, 296, 298, 300, 304, 305, 307, 309, 310, 312, 318, 324, 326, 328, 332, 334, 336, 339, 341, 343, 362, 364, 371], "_i": [12, 14, 18, 33, 38, 39, 46, 47, 48, 49, 50, 51, 53, 70, 76, 80, 85, 91, 93, 94, 96, 98, 100, 101, 108, 112, 114, 119, 132, 133, 135, 136, 138, 139, 140, 142, 144, 153, 154, 156, 158, 165, 166, 167, 168, 169, 174, 177, 179, 183, 188, 189, 191, 193, 196, 202, 203, 204, 206, 207, 208, 209, 213, 215, 227, 235, 236, 238, 240, 241, 256, 257, 266, 273, 278, 279, 280, 283, 284, 292, 296, 298, 300, 304, 305, 307, 309, 310, 312, 318, 324, 326, 334, 336, 339, 341, 343, 362, 364, 371], "verb": [12, 14, 33, 38, 46, 47, 48, 49, 50, 51, 53, 70, 76, 82, 85, 98, 101, 108, 112, 114, 119, 121, 122, 132, 135, 140, 153, 156, 158, 165, 166, 167, 168, 169, 174, 175, 179, 181, 188, 189, 191, 193, 196, 198, 199, 227, 238, 259, 266, 273, 278, 279, 280, 283, 284, 285, 292, 300, 304, 305, 307, 309, 310, 312, 324, 326, 328, 336, 339, 343, 362, 364], "complextensor": [12, 13, 19, 28, 29, 65, 66, 80, 81, 159, 160, 162, 163, 232, 252, 253, 270, 271, 273, 274, 331], "keyword": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372], "memory_config": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 391, 392, 395, 397], "prealloc": [12, 14, 18, 19, 21, 27, 31, 33, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 63, 64, 70, 76, 80, 81, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 106, 107, 108, 109, 111, 112, 114, 115, 119, 130, 131, 132, 133, 136, 137, 138, 142, 144, 153, 156, 158, 165, 166, 167, 168, 169, 172, 174, 175, 177, 179, 183, 188, 189, 191, 193, 196, 198, 199, 202, 204, 206, 208, 213, 215, 222, 226, 227, 231, 232, 235, 236, 238, 239, 241, 246, 257, 258, 266, 268, 273, 279, 280, 283, 284, 292, 296, 297, 298, 299, 304, 305, 307, 309, 310, 311, 312, 318, 324, 325, 326, 328, 331, 333, 334, 339, 341, 342, 343, 353, 362, 364, 369, 370, 374], "queue": [12, 14, 18, 19, 21, 27, 31, 33, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 63, 64, 69, 70, 76, 80, 81, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 105, 106, 108, 109, 112, 114, 115, 116, 117, 119, 129, 130, 131, 132, 133, 136, 137, 138, 142, 144, 153, 156, 158, 161, 165, 166, 167, 168, 169, 172, 174, 175, 177, 179, 183, 188, 189, 191, 193, 196, 198, 199, 202, 204, 206, 208, 213, 215, 221, 222, 226, 227, 231, 232, 235, 236, 238, 239, 241, 242, 246, 249, 251, 257, 258, 266, 268, 273, 279, 280, 283, 284, 290, 292, 296, 297, 298, 299, 304, 305, 307, 309, 310, 311, 312, 318, 324, 325, 326, 328, 331, 333, 334, 338, 339, 341, 342, 343, 347, 348, 352, 353, 357, 358, 362, 364, 365, 366, 369, 370, 374], "id": [12, 14, 18, 19, 21, 27, 31, 33, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 63, 64, 69, 70, 76, 80, 81, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 105, 106, 108, 109, 112, 114, 115, 116, 117, 119, 129, 130, 131, 132, 133, 136, 137, 138, 142, 144, 153, 156, 158, 161, 165, 166, 167, 168, 169, 172, 174, 175, 177, 179, 183, 188, 189, 191, 193, 196, 198, 199, 202, 204, 206, 208, 213, 215, 217, 221, 222, 226, 227, 231, 232, 235, 236, 238, 239, 241, 242, 246, 247, 249, 251, 257, 258, 266, 268, 273, 279, 280, 283, 284, 290, 292, 296, 297, 298, 299, 304, 305, 307, 309, 310, 311, 312, 318, 324, 325, 326, 328, 331, 333, 334, 338, 339, 341, 342, 343, 347, 348, 352, 353, 357, 358, 362, 364, 365, 366, 369, 370, 374, 380], "tile_layout": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 254, 256, 257, 258, 265, 266, 267, 268, 269, 273, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 350, 353, 360, 361, 362, 363, 364, 369, 370, 371, 372, 373, 374, 375, 381, 390, 391, 392, 395, 397], "unary_backward": [13, 15, 17, 34, 36, 41, 43, 54, 56, 58, 60, 71, 73, 77, 79, 83, 86, 95, 97, 99, 102, 103, 113, 115, 118, 120, 127, 137, 146, 148, 150, 152, 157, 180, 185, 190, 192, 194, 195, 197, 211, 212, 234, 239, 255, 258, 265, 267, 269, 274, 281, 282, 288, 293, 295, 297, 302, 306, 308, 311, 313, 315, 319, 321, 323, 325, 327, 340, 342, 344, 346, 363], "abs_bw_t": 13, "_golden_function_ab": 13, "backward": [13, 15, 17, 19, 21, 23, 25, 29, 34, 36, 37, 40, 41, 43, 45, 54, 56, 58, 60, 64, 66, 71, 73, 77, 79, 81, 83, 86, 88, 95, 97, 99, 102, 103, 109, 113, 115, 118, 120, 123, 127, 137, 146, 148, 150, 152, 155, 157, 160, 176, 180, 182, 185, 190, 192, 194, 195, 197, 200, 201, 211, 212, 220, 225, 232, 234, 239, 253, 255, 258, 265, 267, 269, 271, 274, 281, 282, 286, 288, 293, 295, 297, 299, 302, 306, 308, 311, 313, 315, 319, 321, 323, 325, 327, 329, 331, 333, 340, 342, 344, 346, 363, 370, 372], "given": [13, 15, 17, 19, 21, 23, 25, 29, 31, 34, 36, 37, 40, 41, 43, 45, 54, 56, 58, 60, 64, 66, 69, 71, 73, 77, 79, 81, 83, 86, 90, 95, 97, 99, 102, 103, 106, 107, 113, 115, 118, 120, 123, 127, 137, 146, 148, 150, 152, 155, 157, 160, 176, 180, 182, 185, 190, 192, 194, 195, 197, 200, 201, 211, 212, 220, 225, 228, 229, 232, 234, 239, 247, 250, 253, 255, 258, 265, 267, 269, 271, 274, 281, 282, 286, 288, 289, 293, 295, 297, 299, 302, 306, 308, 311, 313, 315, 319, 321, 323, 325, 327, 329, 331, 333, 340, 342, 344, 346, 353, 358, 363, 367, 370, 372, 375, 380, 390], "grad_tensor": [13, 15, 17, 19, 21, 23, 25, 29, 34, 36, 37, 40, 41, 43, 45, 54, 56, 58, 60, 64, 66, 71, 73, 77, 79, 81, 83, 86, 88, 95, 97, 99, 102, 103, 109, 113, 115, 118, 120, 123, 127, 137, 146, 148, 150, 152, 155, 157, 160, 176, 180, 182, 185, 190, 192, 194, 195, 197, 200, 201, 211, 212, 220, 225, 232, 234, 239, 253, 255, 258, 265, 267, 269, 271, 274, 281, 282, 286, 288, 293, 295, 297, 299, 302, 306, 308, 311, 313, 315, 319, 321, 323, 325, 327, 329, 331, 333, 340, 342, 344, 346, 363, 370, 372], "gradient": [13, 15, 17, 19, 21, 23, 25, 34, 36, 37, 40, 41, 43, 45, 54, 56, 58, 60, 64, 69, 71, 73, 77, 79, 81, 83, 86, 88, 95, 97, 99, 102, 103, 109, 113, 115, 118, 120, 123, 127, 137, 146, 148, 150, 152, 155, 157, 176, 180, 182, 185, 190, 192, 194, 195, 197, 200, 201, 211, 212, 220, 225, 232, 234, 239, 255, 258, 265, 267, 269, 274, 281, 282, 286, 288, 293, 295, 297, 299, 302, 306, 308, 311, 313, 315, 319, 321, 323, 325, 327, 329, 331, 333, 340, 342, 344, 346, 363, 370, 372], "list": [13, 15, 17, 18, 19, 21, 23, 25, 29, 31, 34, 36, 37, 40, 41, 43, 45, 54, 56, 58, 60, 63, 64, 66, 71, 73, 74, 77, 79, 81, 83, 86, 87, 89, 91, 95, 97, 99, 102, 103, 113, 115, 118, 120, 123, 125, 127, 132, 133, 137, 142, 146, 148, 150, 152, 155, 157, 160, 174, 175, 176, 177, 180, 182, 185, 186, 190, 192, 194, 195, 197, 198, 199, 200, 201, 202, 206, 208, 211, 212, 213, 218, 220, 221, 222, 225, 226, 232, 234, 235, 236, 239, 242, 249, 250, 251, 253, 255, 258, 259, 264, 265, 267, 269, 271, 274, 281, 282, 286, 288, 293, 295, 297, 298, 299, 302, 306, 308, 311, 313, 315, 316, 319, 321, 323, 325, 327, 328, 329, 331, 333, 334, 338, 340, 342, 344, 346, 353, 358, 363, 364, 365, 366, 370, 372, 377], "about": [13, 23, 45, 123, 137, 190, 192, 194, 195, 197, 200, 201, 211, 212, 258, 265, 273, 274, 286, 319, 325, 372, 381, 391], "requires_grad": [13, 15, 17, 19, 21, 23, 25, 34, 36, 37, 40, 41, 43, 45, 54, 56, 58, 60, 64, 71, 73, 77, 79, 81, 86, 88, 95, 97, 99, 102, 103, 109, 113, 115, 118, 120, 123, 127, 137, 146, 148, 150, 152, 155, 157, 176, 180, 182, 185, 190, 192, 194, 195, 197, 200, 201, 211, 212, 220, 225, 232, 234, 239, 258, 265, 267, 269, 274, 281, 282, 286, 288, 293, 297, 299, 302, 306, 308, 311, 313, 315, 319, 321, 323, 325, 327, 329, 331, 333, 340, 342, 344, 346, 363, 370, 372], "acos_t": 14, "_golden_function_aco": 14, "rand": [14, 16, 27, 33, 35, 38, 42, 44, 48, 52, 53, 64, 70, 72, 76, 87, 93, 98, 101, 107, 112, 119, 126, 135, 138, 140, 144, 156, 165, 166, 167, 168, 169, 183, 184, 188, 189, 191, 193, 196, 204, 205, 215, 227, 238, 241, 243, 244, 248, 259, 265, 266, 278, 279, 280, 288, 289, 300, 307, 309, 310, 312, 314, 322, 324, 326, 336, 337, 339, 343, 360, 361, 362, 390, 393, 395, 397], "acos_bw_t": 15, "invers": [15, 17, 34, 36, 41, 43], "cosin": [15, 17, 71, 73, 110], "input_tensor_a": [15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 36, 37, 39, 40, 41, 43, 45, 46, 47, 49, 50, 51, 54, 56, 64, 71, 73, 77, 79, 80, 81, 82, 86, 91, 92, 95, 97, 99, 102, 113, 118, 120, 121, 122, 123, 127, 132, 133, 134, 142, 143, 146, 148, 150, 154, 155, 157, 161, 164, 174, 175, 176, 177, 178, 180, 182, 185, 186, 190, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 211, 212, 213, 214, 216, 218, 220, 221, 222, 225, 226, 232, 234, 235, 236, 237, 240, 248, 256, 258, 259, 267, 269, 274, 281, 282, 285, 286, 293, 298, 299, 300, 302, 306, 308, 313, 315, 321, 323, 327, 328, 329, 331, 332, 333, 334, 340, 344, 363, 369, 370, 371, 372, 390, 397], "acosh_t": 16, "_golden_function_acosh": [16, 17], "acosh_bw_t": 17, "hyperbol": [17, 36, 43, 73, 315, 342], "add_t": 18, "input_tensor_b": [18, 19, 20, 21, 22, 23, 24, 25, 37, 39, 40, 45, 46, 47, 49, 50, 51, 64, 80, 81, 82, 91, 92, 121, 122, 123, 132, 133, 134, 142, 143, 154, 155, 161, 164, 174, 175, 176, 177, 178, 182, 186, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 213, 214, 216, 218, 220, 222, 225, 226, 232, 235, 236, 237, 240, 248, 259, 285, 286, 298, 299, 300, 328, 329, 331, 332, 333, 334, 369, 370, 371, 372, 390, 397], "_a": [18, 20, 39, 46, 47, 49, 50, 51, 80, 82, 91, 92, 121, 122, 132, 133, 134, 142, 143, 154, 164, 174, 175, 177, 178, 198, 199, 202, 203, 206, 207, 208, 209, 213, 214, 235, 236, 237, 240, 248, 259, 285, 298, 300, 328, 332, 334, 371], "_b": [18, 20, 39, 46, 47, 49, 50, 51, 80, 82, 91, 92, 121, 122, 132, 133, 134, 142, 143, 154, 164, 174, 175, 177, 178, 198, 199, 202, 203, 206, 207, 208, 209, 213, 214, 235, 236, 237, 240, 248, 259, 285, 298, 300, 328, 332, 334, 371], "datatyp": [18, 30, 32, 61, 87, 88, 89, 90, 91, 106, 107, 129, 130, 131, 132, 133, 139, 141, 142, 174, 175, 177, 186, 198, 199, 202, 206, 208, 213, 218, 222, 226, 235, 236, 245, 246, 298, 328, 334, 350, 351, 373, 374, 390, 391, 395], "str": [18, 32, 37, 81, 84, 91, 109, 132, 133, 142, 174, 175, 177, 186, 187, 198, 199, 202, 206, 208, 213, 218, 222, 226, 228, 229, 235, 236, 298, 303, 328, 334, 396], "broadcast": [18, 19, 81, 91, 133, 142, 175, 177, 186, 198, 199, 202, 206, 208, 213, 218, 235, 236, 289, 328, 331, 334, 357, 397], "int32": [18, 46, 47, 48, 49, 50, 51, 91, 93, 107, 132, 133, 138, 142, 144, 174, 177, 183, 202, 204, 205, 206, 207, 208, 209, 213, 215, 222, 226, 236, 241, 334, 393], "uint32": [18, 31, 87, 88, 107, 158, 161, 380, 381, 390], "4294967295": 18, "uint16": [18, 46, 49, 51, 130, 158, 235, 245, 334, 353, 373, 381], "65535": [18, 46, 49, 51, 235, 334], "tensor1": [18, 19, 20, 21, 22, 23, 24, 25, 37, 39, 40, 45, 46, 47, 49, 50, 51, 63, 64, 80, 81, 82, 91, 92, 121, 122, 123, 132, 133, 134, 142, 143, 154, 155, 161, 164, 174, 175, 176, 177, 178, 181, 182, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 213, 214, 216, 218, 220, 222, 225, 226, 232, 235, 236, 237, 240, 248, 259, 285, 286, 298, 299, 300, 328, 329, 331, 332, 333, 334, 369, 370, 371, 372], "tensor2": [18, 19, 20, 21, 22, 23, 24, 25, 37, 39, 40, 45, 46, 47, 49, 50, 51, 63, 64, 80, 81, 82, 91, 92, 121, 122, 123, 132, 133, 134, 142, 143, 154, 155, 161, 164, 174, 175, 176, 177, 178, 181, 182, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 213, 214, 216, 218, 220, 222, 225, 226, 232, 235, 236, 237, 240, 248, 259, 285, 286, 298, 299, 300, 328, 329, 331, 332, 333, 334, 369, 370, 371, 372], "scalar": [18, 19, 22, 24, 46, 47, 49, 50, 51, 80, 81, 82, 83, 91, 92, 121, 122, 123, 130, 131, 133, 134, 142, 143, 175, 177, 178, 181, 182, 198, 199, 202, 206, 208, 213, 214, 216, 222, 226, 232, 235, 236, 237, 255, 259, 268, 269, 285, 286, 298, 328, 331, 334, 397], "binary_backward": [19, 21, 37, 40, 45, 64, 81, 123, 155, 176, 200, 201, 220, 225, 232, 286, 299, 329, 331, 333, 372], "add_bw_t": 19, "_golden_function_bw": [19, 21, 37, 40, 45, 64, 123, 155, 176, 200, 201, 225, 286, 299, 329, 331, 333, 372], "are_required_output": [19, 21, 37, 64, 81, 232, 299, 331, 333, 370], "input_grad": [19, 21, 37, 64, 81, 109, 232, 299, 331, 333], "other_grad": [19, 21, 37, 64, 81, 232, 299, 331, 333], "bfloat4_b": [19, 21, 22, 24, 27, 40, 45, 64, 81, 129, 155, 176, 181, 182, 200, 201, 216, 220, 225, 232, 299, 329, 331, 333, 352, 369, 372], "addalpha_t": 20, "_golden_function_addalpha": 20, "alpha": [20, 21, 23, 25, 55, 56, 81, 85, 86, 301, 332, 333], "float": [20, 21, 22, 23, 24, 25, 44, 55, 56, 57, 58, 59, 60, 83, 85, 86, 108, 114, 117, 124, 129, 130, 131, 141, 145, 146, 147, 149, 151, 152, 153, 164, 173, 179, 180, 181, 210, 212, 249, 251, 255, 256, 257, 259, 268, 269, 283, 284, 291, 294, 295, 301, 318, 319, 320, 321, 332, 333, 345, 346, 357, 358, 360, 361, 381], "addalpha_bw_t": 21, "addcdiv_t": 22, "_golden_function_addcdiv": 22, "input_tensor_c": [22, 23, 24, 25, 182, 216, 369, 370], "tensor3": [22, 23, 24, 25, 181, 182, 216, 369, 370], "ternary_backward": [23, 25, 182, 370], "addcdiv_bw_t": 23, "addcmul_t": 24, "_golden_function_addcmul": 24, "addcmul_bw_t": 25, "all_gather_t": 26, "gather": [26, 104], "across": [26, 104, 139, 264, 275, 380, 381], "dim": [26, 31, 63, 64, 74, 104, 106, 107, 111, 135, 140, 161, 219, 223, 224, 251, 264, 265, 275, 278, 289, 316, 317, 330, 335, 336, 353, 359, 368, 381, 392, 396], "cluster_axi": [26, 275], "meshtensor": [26, 275], "axi": [26, 106, 275, 289], "line": [26, 275, 394], "mesh_devic": [26, 104, 275], "applic": [26, 84, 275, 381], "guid": [26, 275, 377, 378], "blob": [26, 275, 396], "main": [26, 275, 378, 379, 382, 394, 396, 397], "tech_report": [26, 275], "20mesh": [26, 275], "20of": [26, 275], "20devic": [26, 275], "20with": [26, 275], "20tt": [26, 275], "nn": [26, 228, 229, 275, 382, 383, 386, 387, 395], "num_link": [26, 104, 275], "link": [26, 104, 275], "num_work": [26, 104, 275], "worker": [26, 104, 247, 275, 350, 392, 393], "num_buffers_per_channel": [26, 104, 275], "per": [26, 104, 275, 378, 394], "ring": [26, 104, 275], "full_tensor": [26, 104, 275], "randn": [26, 32, 75, 88, 90, 104, 128, 129, 139, 186, 218, 221, 246, 272, 275, 349, 350, 351, 352, 364, 374, 391, 392, 396], "256": [26, 104, 221, 275, 395, 396], "physical_device_id": [26, 390, 391, 392, 393, 394, 395], "get_t3k_physical_device_ids_r": 26, "open_mesh_devic": [26, 104, 275], "meshshap": [26, 104, 275], "ttnn_tensor": [26, 352, 390], "input_dtyp": 26, "mem_config": 26, "mesh_mapp": [26, 32, 104, 129, 275], "shardtensor2dmesh": 26, "mesh_shap": 26, "alt_complex_rotate90_t": 27, "_golden_function_alt_complex_rotate90": 27, "_": [27, 375, 380, 392, 396], "2i": 27, "complex_unari": [28, 65, 159, 162, 163, 252, 270], "angle_t": 28, "complex": [28, 29, 65, 66, 159, 160, 252, 253, 270, 271], "complex_unary_backward": [29, 66, 160, 253, 271], "angle_bw_t": 29, "arange_t": 30, "inclus": [30, 381], "end": [30, 80, 164, 181, 240, 316, 366, 376, 380, 392, 394], "exclus": [30, 249], "consecut": [30, 381], "dram_memory_config": [30, 61, 89, 90, 186, 218, 349, 381], "space": [30, 67, 68, 69, 260, 261, 262, 263, 381], "print": [30, 32, 63, 89, 90, 128, 129, 130, 131, 186, 217, 218, 245, 246, 247, 251, 287, 289, 303, 316, 317, 349, 350, 352, 373, 374, 380, 381, 390, 391, 392, 394, 396, 397], "00000": [30, 390], "argmax_t": 31, "_create_golden_funct": [31, 219, 223, 224, 330, 335, 368], "local": [31, 35, 38, 42, 52, 53, 70, 72, 76, 78, 93, 94, 96, 98, 100, 101, 112, 119, 136, 138, 144, 147, 149, 156, 158, 165, 166, 167, 168, 169, 183, 184, 188, 189, 191, 193, 196, 204, 215, 219, 223, 224, 227, 233, 238, 241, 266, 279, 280, 296, 304, 305, 307, 309, 310, 312, 314, 318, 322, 324, 326, 330, 335, 337, 339, 341, 353, 360, 361, 368, 375, 376, 381], "keepdim": [31, 264], "currenli": 31, "row_major_layout": [32, 61, 84, 87, 124, 125, 129, 130, 245, 350, 373, 381, 390, 391, 392], "cache_file_nam": 32, "pathlib": [32, 84, 187], "path": [32, 84, 187, 378, 380, 394, 396, 397], "callabl": [32, 228, 229], "serial": 32, "tensortomesh": [32, 129], "use_device_til": 32, "toggl": 32, "truncat": [32, 363], "mantissa": 32, "bit": 32, "bfp": [32, 381], "rais": [32, 352, 395], "runtim": [32, 378], "error": [32, 172, 217, 218, 231, 352, 376, 378], "rte": 32, "bfp8": [32, 390], "bfp4": 32, "375": [32, 129, 393], "30469": [32, 129], "714844": [32, 129], "761719": [32, 129], "53125": [32, 129], "652344": [32, 129], "asin_t": 33, "_golden_function_asin": 33, "asin_bw_t": 34, "lambda": [34, 36, 43, 54, 56, 58, 60, 73, 83, 86, 97, 146, 180, 190, 192, 194, 212, 269, 295, 308, 313, 315, 321, 323, 375, 393, 395], "sine": [34, 36, 110, 315], "asinh_t": 35, "register_ttnn_cpp_unary_funct": [35, 38, 42, 52, 53, 70, 72, 76, 78, 93, 94, 96, 98, 100, 101, 112, 119, 136, 138, 144, 147, 149, 156, 158, 165, 166, 167, 168, 169, 183, 184, 188, 189, 191, 193, 196, 204, 215, 227, 233, 238, 241, 266, 279, 280, 296, 304, 305, 307, 309, 310, 312, 314, 318, 322, 324, 326, 337, 339, 341, 360, 361], "asinh_bw_t": 36, "assign_bw_t": 37, "assign": 37, "other_tensor": [37, 81], "round_mod": [37, 80, 81, 268, 269], "atan_t": 38, "atan2_t": 39, "_golden_function_atan2": 39, "arctan": 39, "left": [39, 80, 132, 174, 300, 379], "right": [39, 80, 132, 174, 300], "atan2_bw_t": 40, "atan_bw_t": 41, "_golden_function_atan": 41, "tangenr": 41, "atanh_t": 42, "atanh_bw_t": 43, "tangent": [43, 342], "batch_norm_t": 44, "spatial": [44, 139, 367], "over": [44, 67, 68, 69, 105, 139, 141, 173, 265, 291, 317, 357, 358, 378], "interleav": [44, 63, 105, 349, 351, 359, 381], "ep": [44, 210, 212], "epsilon": [44, 141, 173, 291], "1e": [44, 141, 164, 173, 291], "momentum": 44, "running_mean": 44, "running_var": 44, "varianc": [44, 381], "gamma": [44, 234], "beta": [44, 318, 319], "evalu": [44, 394], "norm": 44, "bias_gelu_bw_t": 45, "bias_gelu": 45, "approxim": [45, 94, 96, 100, 109, 136, 137, 296, 304], "bitwise_and_t": 46, "_golden_function_bitwise_and": 46, "integ": [46, 47, 49, 50, 51, 249, 358], "bitwise_left_shift_t": 47, "_golden_function_bitwise_left_shift": 47, "ha": [47, 50, 69, 218, 228, 229, 262, 263, 338, 359, 375, 376, 378, 380, 381, 390, 396, 397], "shift_bit": [47, 50], "31": [47, 50, 394, 396], "bitwise_not_t": 48, "_golden_function_bitwise_not": 48, "2147483647": [48, 132], "bitwise_or_t": 49, "_golden_function_bitwise_or": 49, "bitwise_right_shift_t": 50, "_golden_function_bitwise_right_shift": 50, "bitwise_xor_t": 51, "_golden_function_bitwise_xor": 51, "cbrt_t": 52, "ceil_t": 53, "ceil_bw_t": 54, "celu_t": 55, "_golden_function_celu": 55, "celu_bw_t": 56, "formula": [56, 86, 146, 180, 181, 212, 319, 321], "clamp_t": 57, "_golden_function_clamp": 57, "min_tensor": [57, 59], "max_tensor": [57, 59], "clamp_bw_t": 58, "clip_t": 59, "_golden_function_clip": 59, "clip_bw_t": 60, "data_mov": [61, 63, 116, 117, 161, 242, 249, 251, 287, 289, 290, 316, 347, 348, 365, 366], "clone_t": 61, "doe": [61, 129, 352, 376, 380], "alter": 61, "unpad": [61, 125, 350, 366], "adjust": [61, 318], "necessari": [61, 376], "param": [61, 128, 249, 317, 349, 396], "target": [61, 124, 125, 264, 376], "l1_memory_config": [61, 349, 375, 381, 391, 392, 397], "compute_kernel_config": [61, 105, 110, 173, 186, 218, 291, 317, 357, 358], "remov": [62, 352, 366, 390, 393, 394, 396], "success": [62, 378], "concat_t": 63, "concaten": [63, 64, 356, 359], "group": [63, 67, 68, 69, 260, 261, 262, 263, 381, 395], "partit": 63, "independ": 63, "altern": [63, 218, 378, 397], "recombin": 63, "residu": 63, "concat_bw_t": 64, "conj_t": 65, "conjug": 65, "conj_bw_t": 66, "conv1d_t": 67, "1d": [67, 218, 242, 259, 394], "signal": [67, 68, 105, 139, 394], "compos": [67, 68, 69, 105, 139, 352], "sever": [67, 68, 69, 105, 139], "plane": [67, 68, 69, 105, 139, 395], "2d": [67, 68, 69, 139, 218, 367, 381], "input_length": 67, "weight_tensor": [67, 68, 69, 105, 262, 263, 395], "bias_tensor": [67, 68, 69, 105, 395], "batch_siz": [67, 68, 69, 88, 139, 221, 260, 261, 262, 263, 356, 359, 375, 392, 393, 394, 395], "length": [67, 259, 357, 358], "kernel_s": [67, 68, 69, 221, 260, 261, 262, 263, 395], "convolv": [67, 68, 69, 221, 260, 261, 262, 263], "cross": [67, 68, 69, 260, 261, 262, 263], "correl": [67, 68, 69, 260, 261, 262, 263, 376], "side": [67, 68, 69, 260, 261, 262, 263, 380, 390, 391, 392, 393, 394, 395], "pad_length": 67, "pad_left": [67, 68, 69, 260, 261, 262, 263], "pad_right": [67, 68, 69, 260, 261, 262, 263], "connect": [67, 68, 69, 260, 261, 262, 263], "conv_config": [67, 68, 69, 260, 261, 262, 263, 395], "compute_config": [67, 68, 69, 260, 261, 262, 263], "devicecomputekernelconfig": [67, 68, 69, 105, 110, 173, 186, 218, 260, 261, 262, 263, 291, 317, 357, 358], "return_output_dim": [67, 68, 69], "return_weights_and_bia": [67, 68, 69], "bias": [67, 375, 392], "conv2d_t": 68, "inform": [68, 273, 378, 382], "tech": 68, "input_height": [68, 69, 260, 261, 262, 263, 395], "input_width": [68, 69, 260, 261, 262, 263, 395], "pad_height": [68, 69, 260, 261, 262, 263], "pad_width": [68, 69, 260, 261, 262, 263], "pad_top": [68, 69, 260, 261, 262, 263], "pad_bottom": [68, 69, 260, 261, 262, 263], "conv_transpose2d_t": 69, "transpos": [69, 110, 186, 218, 251, 359], "seen": [69, 74, 390, 391], "respect": [69, 88, 218, 381], "fraction": 69, "deconvolut": 69, "o": [69, 378, 380, 390, 391, 392, 393, 394, 396], "k_h": 69, "k_w": 69, "equat": 69, "h_out": 69, "h_in": 69, "output_pad": 69, "w_out": 69, "w_in": 69, "mirror_kernel": 69, "mirror": [69, 396], "intern": [69, 377], "been": [69, 228, 229, 338, 376, 378, 396], "cos_t": 70, "cos_bw_t": 71, "_golden_function_co": 71, "cosh_t": 72, "cosh_bw_t": 73, "coregrid": [74, 141, 186, 218, 391, 392], "corerang": 74, "strategi": [74, 84, 218, 380, 381, 394], "shardstrategi": 74, "shardorient": 74, "use_height_and_width_as_shard_shap": 74, "travers": 74, "math": [74, 380, 394], "320": 74, "pycapsul": [75, 128, 272, 349], "resourc": [75, 394], "explicitli": [75, 390], "whose": [75, 90, 350], "forc": [75, 393], "deg2rad_t": 76, "deg2rad_bw_t": 77, "_golden_function_deg2rad": 77, "degre": [77, 267], "radian": [77, 267], "digamma_t": 78, "digamma_bw_t": 79, "_golden_function_digamma": 79, "div_t": 80, "_golden_function_div": 80, "begin": [80, 164, 240, 380], "text": [80, 164, 240, 248, 376], "_mode": 80, "accurate_mod": 80, "non": [80, 218, 221, 242, 258, 273, 294], "div_bw_t": 81, "pcc": [81, 155, 176, 269, 376, 379], "degrad": [81, 155, 176, 269], "div_no_nan_t": 82, "_golden_function_div_no_nan": 82, "div_no_nan_bw_t": 83, "denomin": [83, 268], "dump": [84, 228, 393, 396, 397], "file_nam": [84, 187, 396, 397], "dict": [84, 228, 229, 396], "save": [84, 394, 396], "elu_t": 85, "_golden_function_elu": 85, "elu_bw_t": 86, "embedding_t": 87, "retriev": 87, "word": 87, "padding_idx": 87, "token": [87, 171, 358, 394], "embeddings_typ": 87, "embeddingstyp": 87, "106445": 87, "988281": 87, "59375": 87, "212891": 87, "964844": 87, "199219": 87, "996094": 87, "78362e": 87, "38": [87, 381, 394], "89785e": 87, "39": [87, 390, 391, 392, 393, 394, 395, 396], "04479e": 87, "25815e": 87, "71833e": 87, "59995e": 87, "60398e": 87, "83671e": 87, "22242e": 87, "88263e": 87, "35917e": 87, "49994e": 87, "embedding_backward": 88, "embedding_bw_t": 88, "extract": 88, "vocabulari": 88, "output_gradient_tensor": 88, "seq_len": [88, 110], "embedding_dim": 88, "num_embed": 88, "1024": [88, 391], "4096": 88, "3200": 88, "input_shap": [88, 221, 395], "input_index": 88, "randint": [88, 393], "weights_shap": 88, "weights_ttnn": 88, "grad_shap": 88, "grad_data": 88, "empty_t": 89, "uniniti": [89, 90], "bfloat_8": 89, "21": [89, 394, 396], "67": 89, "empty_like_t": 90, "desir": [90, 107, 116, 117, 124, 125, 129, 350, 351, 352], "87": 90, "45": [90, 339, 340, 394], "22": [90, 378, 394], "60": [90, 394], "75": [90, 128], "25": [90, 350, 380, 394, 396], "eq_t": 91, "eq__t": 92, "_golden_function_eq_": 92, "input_a": [92, 134, 143, 161, 178, 214, 219, 223, 224, 237, 330, 335, 368], "input_b": [92, 134, 143, 161, 178, 214, 237], "eqz_t": 93, "_tensor_i": [93, 138, 144, 183, 204, 215, 241], "erf_t": 94, "fast_and_approximate_mod": [94, 96, 100, 136, 296, 304], "fast": [94, 96, 100, 136, 296, 304], "erf_bw_t": 95, "_golden_function_erf": 95, "erfc_t": 96, "erfc_bw_t": 97, "erfinv_t": 98, "erfinv_bw_t": 99, "_golden_function_erfinv": 99, "exp_t": 100, "exp2_t": 101, "exp2_bw_t": 102, "_golden_function_exp2": 102, "exp_bw_t": 103, "_golden_function_exp": 103, "exponenti": 103, "ccl_experiment": 104, "all_reduce_t": 104, "shardtensortomesh": [104, 275], "conv3d_t": 105, "3d": 105, "d": [105, 394], "kd": 105, "kh": 105, "kw": 105, "c_in": 105, "c_out": 105, "conv3dconfig": 105, "cumprod_t": 106, "witth": 106, "cumul": [106, 107], "underli": 106, "ref": [106, 378], "fed": 106, "being": [106, 276, 277, 380, 381], "actual": [106, 268, 381, 390], "assert": [106, 249, 392, 397], "dtyoe": 106, "uint8": [106, 137, 158, 297, 316], "tensor_copi": 106, "cumsum_t": 107, "fundament": 107, "cast": 107, "torch_input": 107, "tensor_input": 107, "tensor_output": 107, "preallocated_output": 107, "dropout_t": 108, "seed": [108, 396], "rng": 108, "probabl": 108, "averag": [108, 139, 380, 394], "total_elem": 108, "scale": [108, 147, 149, 301, 318, 357, 358], "124": 108, "prob": 108, "gelu_bw_t": [109, 137], "_golden_function_gelu": [109, 137], "algorithm": [109, 367], "rotary_embedding_t": 110, "rotari": 110, "cos_cach": 110, "sin_cach": 110, "token_idx": 110, "head_dim": 110, "cod_cach": 110, "token_index": 110, "sort_t": 111, "ascend": 111, "descend": 111, "stabl": 111, "preserv": 111, "addit": [111, 218, 375], "info": [111, 390, 391, 392, 393, 394, 395, 396], "sorted_tensor": 111, "sorted_tensor_desc": 111, "indices_desc": 111, "input_tensor_2d": 111, "sorted_tensor_dim": 111, "indices_dim": 111, "expm1_t": 112, "expm1_bw_t": 113, "_golden_function_expm1": 113, "fill_t": 114, "_golden_function_fil": 114, "fill_valu": [114, 130, 131], "wormhole_b0": 114, "fill_bw_t": 115, "fill_ones_rm_t": 116, "val_hi": [116, 117], "val_lo": [116, 117], "count": [116, 117, 380, 394], "ye": [116, 117], "hone": [116, 117], "high": [116, 117, 378, 381, 397], "region": [116, 117, 247], "wone": [116, 117], "fill_rm_t": 117, "nchw": 117, "hw": 117, "hfill": 117, "wfill": 117, "hi": 117, "lo": 117, "low": 117, "fill_zero_bw_t": 118, "_golden_function_fill_zero": 118, "floor_t": 119, "floor_bw_t": 120, "_golden_function_floor": 120, "floor_div_t": 121, "_golden_function_floor_div": 121, "fmod_t": 122, "_golden_function_fmod": 122, "fmod_bw_t": 123, "padded_shap": [124, 250], "pad_valu": [124, 129, 251, 290, 316, 348], "target_layout": [124, 125], "target_mem_config": [124, 125], "padded_tensor": 124, "output_mem_config": [124, 125, 394], "unpadded_tensor": 125, "frac_t": 126, "_golden_function_frac": [126, 127], "frac_bw_t": 127, "tensor_on_devic": [128, 349], "tensor_on_host": [128, 349], "365234": 128, "130859": 128, "itself": 129, "twice": [129, 380], "purpos": [129, 376, 379, 381], "mapper": 129, "cq_id": [129, 338, 352], "full_t": 130, "_golden_function_ful": 130, "filled_tensor": [130, 131], "full_like_t": 131, "templat": [131, 246, 374, 380], "gcd_t": 132, "_golden_function_gcd": 132, "greatest": 132, "2147483648": 132, "tensorint32default": [132, 174], "ge_t": 133, "ge__t": 134, "_golden_function_ge_": 134, "geglu_t": 135, "_golden_function_geglu": 135, "gelu_t": 136, "gez_t": 138, "global_avg_pool2d_t": 139, "golden_global_avg_pool2d": 139, "adapt": 139, "glu_t": 140, "_golden_function_glu": 140, "group_norm_t": 141, "_postprocess_golden_function_output": [141, 249], "num_group": 141, "input_mask": 141, "inplac": [141, 203, 205, 207, 209, 395], "gt_t": 142, "gt__t": 143, "_golden_function_gt_": 143, "gtz_t": 144, "hardshrink_t": 145, "_golden_function_hardshrink": 145, "lambd": [145, 146, 320, 321], "hardshrink_bw_t": 146, "hardsigmoid_t": 147, "shift": [147, 149], "16666667": [147, 149], "hardsigmoid_bw_t": 148, "_golden_function_hardsigmoid": 148, "hardswish_t": 149, "hardswish_bw_t": 150, "_golden_function_hardswish": 150, "hardtanh_t": 151, "_golden_function_hardtanh": 151, "min_val": 151, "max_val": 151, "hardtanh_bw_t": 152, "heaviside_t": 153, "_golden_function_heavisid": 153, "hypot_t": 154, "_golden_function_hypot": 154, "hypot_bw_t": 155, "i0_t": 156, "i0_bw_t": 157, "_golden_function_i0": 157, "identity_t": 158, "sfpu": 158, "shouldn": 158, "instead": [158, 284, 390, 392, 396], "lower": [158, 249, 378], "float16": [158, 390], "imag_t": 159, "imag_bw_t": 160, "imaginari": 160, "indexed_fill_t": 161, "replac": [161, 345], "denot": 161, "batch_id": 161, "is_imag_t": 162, "is_real_t": 163, "isclose_t": 164, "_golden_function_isclos": 164, "leq": 164, "atol": 164, "rtol": 164, "otherwis": [164, 264, 338, 353, 392, 397], "rel": 164, "toler": 164, "05f": 164, "absolut": [164, 172], "08f": 164, "equal_nan": 164, "nan": [164, 394], "treat": [164, 218], "isfinite_t": 165, "isinf_t": 166, "isnan_t": 167, "isneginf_t": 168, "isposinf_t": 169, "fill_cache_for_user__t": 170, "popul": [170, 228, 380], "batch_index": 170, "update_cache_for_token__t": 171, "update_index": 171, "batch_offset": 171, "l1_loss_t": 172, "_golden_function_l1_loss": 172, "input_refer": [172, 231], "input_predict": [172, 231], "layer_norm_t": 173, "residual_input_tensor": [173, 291], "program_config": [173, 186, 218, 291, 354, 355, 357, 358], "programconfig": [173, 291], "lcm_t": 174, "_golden_function_lcm": 174, "least": [174, 218, 380], "32767": 174, "32768": 174, "ldexp_t": 175, "ldexp_bw_t": 176, "80": [176, 378], "outsid": 176, "le_t": 177, "le__t": 178, "_golden_function_le_": 178, "leaky_relu_t": 179, "_golden_function_leaky_relu": 179, "negative_slop": [179, 180], "slope": 179, "leaki": 179, "leaky_relu_bw_t": 180, "01": 180, "lerp_t": 181, "_golden_function_lerp": 181, "point": [181, 318, 380, 381], "interpol": 181, "lerp_bw_t": 182, "lez_t": 183, "lgamma_t": 184, "lgamma_bw_t": 185, "_golden_function_lgamma": 185, "linear_t": 186, "behaviour": [186, 218], "transpose_a": [186, 218], "transpose_b": [186, 218], "matmulprogramconfig": [186, 218], "output_til": [186, 218], "128": [186, 218, 397], "log_t": 188, "log10_t": 189, "whb0": [189, 193, 286], "log10_bw_t": 190, "log1p_t": 191, "1e7": 191, "log1p_bw_t": 192, "log2_t": 193, "log2_bw_t": 194, "log_bw_t": 195, "_golden_function_log": 195, "logarithm": [195, 234], "log_sigmoid_t": 196, "log_sigmoid_bw_t": 197, "_golden_function_log_sigmoid": 197, "logaddexp_t": 198, "logaddexp2_t": 199, "logaddexp2_bw_t": 200, "logaddexp_bw_t": 201, "logical_and_t": 202, "_golden_function_logical_and": 202, "AND": [202, 203], "use_legaci": 202, "logical_and__t": 203, "logical_not_t": 204, "logical_not__t": 205, "_golden_function_logical_not_": 205, "logical_or_t": 206, "_golden_function_logical_or": 206, "OR": [206, 207, 290], "logical_or__t": 207, "logical_xor_t": 208, "_golden_function_logical_xor": 208, "land": [208, 209], "lnot": [208, 209], "lor": [208, 209], "logical_xor__t": 209, "xor": 209, "logit_t": 210, "_golden_function_logit": [210, 211], "logit_bw_t": 211, "logiteps_bw_t": 212, "logitep": 212, "lt_t": 213, "lt__t": 214, "_golden_function_lt_": 214, "ltz_t": 215, "mac_t": 216, "_golden_function_mac": 216, "context": [217, 276, 277], "exit": 217, "occur": 217, "matmul_t": 218, "dimension": [218, 234, 381, 390], "dot": [218, 357, 358], "although": 218, "combin": 218, "most": [218, 390], "variou": 218, "align": [218, 378, 380], "appropri": [218, 376, 378], "abov": [218, 378], "criteria": 218, "messag": [218, 380], "unexpect": 218, "obviou": [218, 390], "except": [218, 390, 392, 394], "These": [218, 376, 378, 382, 397], "scenario": [218, 381], "relat": 218, "swap": 218, "j": 218, "implicitli": 218, "extend": 218, "patch": 218, "leverag": 218, "accord": [218, 251, 287, 378], "look": [218, 353, 376, 377, 381, 394, 396], "n_size": 218, "m_size": 218, "k_size": 218, "p": [218, 381], "though": 218, "constraint": [218, 381, 390], "chosen": [218, 380, 396], "carefulli": 218, "fix": 218, "problem": 218, "max_t": 219, "max_bw_t": 220, "max_pool2d_t": 221, "golden_maxpool2d": 221, "window": 221, "nhw": 221, "scheme": [221, 260, 261, 262, 263], "input_h": 221, "input_w": 221, "ceil_mod": 221, "applied_shard_schem": 221, "createdevic": [221, 395], "l1_small_siz": [221, 247, 392, 393, 395], "8192": [221, 392, 393], "kernel_h": 221, "kernel_w": 221, "stride_h": 221, "stride_w": 221, "pad_h": 221, "pad_w": 221, "dilation_h": 221, "dilation_w": 221, "nchw_shape": 221, "40": [221, 394], "in_n": 221, "in_c": 221, "in_h": 221, "in_w": 221, "input_perm": 221, "input_reshap": 221, "tt_input": 221, "tt_input_dev": 221, "tt_output": 221, "in_place_halo": 221, "maximum_t": 222, "_golden_function_maximum": 222, "tensorsupport": 222, "16777216": 222, "mean_t": 223, "min_t": 224, "min_bw_t": 225, "minimum_t": 226, "_golden_function_minimum": 226, "mish_t": 227, "20": [227, 249, 318, 319, 380, 394, 396], "initialize_model": [228, 229, 375, 393, 395], "model_nam": [228, 229, 375, 393, 394, 395], "convert_to_ttnn": [228, 229, 375], "custom_preprocessor": [228, 229, 375, 393, 395], "parameterdict": [228, 229], "prefix": [228, 229], "run_model": [228, 395], "reader_patterns_cach": 228, "disabl": [228, 229, 390, 391, 392, 393, 394, 395, 397], "doesn": [228, 229, 390], "invalid": [228, 229], "preprocessor": [228, 229], "put": [228, 229, 375, 390, 392, 395], "submodul": [228, 229, 378], "appear": [228, 229, 378], "ttnn_module_arg": [228, 395], "tmp": [228, 390, 391, 392, 393, 395, 396], "model_graph": 228, "svg": [228, 395, 396, 397], "avoid": [228, 318, 380, 381], "recomput": 228, "moreh_sum_t": 230, "mse_loss_t": 231, "_golden_function_mse_loss": 231, "mul_bw_t": 232, "multigammaln_t": 233, "multigammaln_bw_t": 234, "_golden_function_mvlgamma": 234, "multivari": 234, "mvlgamma": 234, "5f": 234, "multiply_t": 235, "ne_t": 236, "ne__t": 237, "_golden_function_ne_": 237, "neg_t": 238, "neg_bw_t": 239, "_golden_function_neg": 239, "nextafter_t": 240, "_golden_function_nextaft": 240, "_float": 240, "neq": 240, "nez_t": 241, "nonzero_t": 242, "well": [242, 378, 379], "normalize_global_t": 243, "_golden_function_normalize_glob": 243, "normalize_hw_t": 244, "_golden_function_normalize_hw": 244, "ones_t": 245, "ones_like_t": 246, "trace_region_s": 247, "dispatch_core_config": [247, 392, 393], "dispatchcoreconfig": [247, 392, 393], "0x7fc08a1a48b0": 247, "worker_l1_s": 247, "small": [247, 394], "default_l1_small_s": 247, "default_trace_region_s": 247, "allocat": 247, "dispatch_core_typ": [247, 392, 393], "dispatchcoretyp": [247, 392, 393], "dispatch": [247, 380], "0x7fbac5bfc1b0": 247, "outer_t": 248, "_golden_function_out": 248, "otim": 248, "pad_t": 249, "_preprocess_golden_function_input": 249, "locat": [249, 377, 380, 394, 397], "mutual": 249, "output_tensor_shap": [249, 348], "input_tensor_start": 249, "union": 249, "use_multicor": [249, 347, 348, 365, 366], "pad_input": 249, "unpadded_shap": 250, "annot": [250, 376], "fixeds": 250, "permute_t": 251, "nullopt": [251, 353, 395], "tthe": 251, "broken": 251, "garbag": 251, "polar_t": 252, "cartesian": 252, "theta": 252, "polar_bw_t": 253, "polygamma_t": 254, "_golden_function_polygamma": 254, "decim": [254, 292], "k": [254, 353, 357, 358, 391], "polygamma_bw_t": 255, "polyval_t": 256, "_golden_function_polyv": 256, "coeffici": [256, 376], "coeff": 256, "sum_": 256, "polynomi": 256, "pow_t": 257, "_golden_function_pow": 257, "expon": [257, 258, 294, 295, 381], "pow_bw_t": 258, "power": [258, 364], "prelu_t": 259, "_golden_function_prelu": 259, "arrai": 259, "suitabl": [260, 261, 262, 263], "invoc": [260, 261, 262, 263], "exact": [260, 261, 262, 263, 381, 392], "input_memory_config": [260, 261, 262, 263], "input_layout": [260, 261, 262, 263], "convtranspose2d": [261, 262], "conv_tranpose2d": 262, "weights_format": [262, 263], "iohw": 262, "has_bia": [262, 263], "term": [262, 263, 379], "oihw": 263, "prod_t": 264, "similar": [264, 380, 390, 392], "squeez": [264, 352, 390, 391, 392, 393, 395], "output_all_dim": 264, "prod_bw_t": 265, "particular": [265, 375, 378, 390, 397], "taken": 265, "all_dims_output": 265, "rad2deg_t": 266, "rad2deg_bw_t": 267, "_golden_function_rad2deg": 267, "rdiv_t": 268, "_golden_function_rdiv": 268, "numer": [268, 318, 377, 381], "rounding_mod": 268, "rdiv_bw_t": 269, "real_t": 270, "real_bw_t": 271, "new_tensor": 272, "my_memory_config": 272, "reciprocal_t": 273, "inaccur": [273, 381], "characterist": 273, "fp": 273, "reciprocal_bw_t": 274, "_golden_function_reciproc": 274, "reduce_scatter_t": 275, "reduce0scatt": 275, "reglu_t": 278, "_golden_function_reglu": 278, "relu_t": 279, "relu6_t": 280, "relu6_bw_t": 281, "_golden_function_relu6": 281, "relu_bw_t": 282, "_golden_function_relu": 282, "relu_max_t": 283, "_golden_function_relu_max": 283, "upper_limit": 283, "cap": 283, "relu_min_t": 284, "_golden_function_relu_min": 284, "lower_limit": 284, "remainder_t": 285, "_golden_function_remaind": 285, "modulu": 285, "remainder_bw_t": 286, "repeat_t": 287, "repetit": [287, 289], "repetition_vector": 287, "smallvector": 287, "repeat_bw_t": 288, "repeat_interleave_t": 289, "he": 289, "expand": [289, 381], "torch_input_tensor": [289, 395, 397], "torch_result": 289, "reshape_t": 290, "cost": 290, "view": [290, 397], "new_shap": 290, "kwtype": 290, "rms_norm_t": 291, "round_t": 292, "_golden_function_round": [292, 293], "No": 292, "round_bw_t": 293, "rpow_t": 294, "_golden_function_rpow": 294, "upto": 294, "28": [294, 394, 396], "posit": [294, 358], "rpow_bw_t": 295, "rsqrt_t": 296, "rsqrt_bw_t": 297, "_golden_function_rsqrt": 297, "rsub_t": 298, "_golden_function_rsub": 298, "rsub_bw_t": 299, "subract": 299, "revers": 299, "scatter_t": 300, "_golden_function_scatt": 300, "selu_t": 301, "_golden_function_selu": [301, 302], "0507": 301, "67326": 301, "selu_bw_t": 302, "modifi": [303, 318, 390], "short": [303, 394, 397], "sigmoid_t": 304, "vector_mod": 304, "better": [304, 341], "rc": [304, 378], "sigmoid_accurate_t": 305, "sigmoid_bw_t": 306, "_golden_function_sigmoid": 306, "sign_t": 307, "sign_bw_t": 308, "signbit_t": 309, "silu_t": 310, "silu_bw_t": 311, "_golden_function_silu": 311, "sin_t": 312, "sin_bw_t": 313, "sinh_t": 314, "sinh_bw_t": 315, "slice_t": 316, "slice_start": 316, "input_tensor_shap": 316, "slice_end": 316, "slice_step": 316, "unmodifi": 316, "undefin": 316, "softmax_t": 317, "0310059": 317, "softplus_t": 318, "By": [318, 379, 391], "steep": 318, "higher": [318, 378, 380, 381], "steeper": 318, "approach": [318, 375, 379, 397], "hard": [318, 390], "stabil": [318, 379], "veri": [318, 380, 390, 392], "softplus_bw_t": 319, "softshrink_t": 320, "_golden_function_softshrink": 320, "softshrink_bw_t": 321, "softsign_t": 322, "softsign_bw_t": 323, "sqrt_t": 324, "sqrt_bw_t": 325, "_golden_function_sqrt": 325, "square_t": 326, "square_bw_t": 327, "_golden_function_squar": 327, "squared_difference_t": 328, "_golden_function_squared_differ": 328, "squared_difference_bw_t": 329, "std_t": 330, "sub_bw_t": 331, "subalpha_t": 332, "_golden_function_subalpha": 332, "subalpha_bw_t": 333, "subtract_t": 334, "sum_t": 335, "swiglu_t": 336, "_golden_function_swiglu": 336, "swish_t": 337, "queueid": 338, "sub_device_id": 338, "subdeviceid": 338, "synchron": [338, 397], "wait": [338, 380], "complet": 338, "associ": 338, "ran": [338, 380, 392], "chip": 338, "set_sub_device_stall_group": 338, "queu": 338, "tan_t": 339, "tan_bw_t": 340, "_golden_function_tan": 340, "tanh_t": 341, "accuraci": [341, 376], "tanh_bw_t": 342, "_golden_function_tanh": 342, "tanhshrink_t": 343, "_golden_function_tanhshrink": [343, 344], "tanhshrink_bw_t": 344, "threshold_t": 345, "_golden_function_threshold": [345, 346], "threshold_bw_t": 346, "tilize_t": 347, "_nop_golden_funct": 347, "acceler": [347, 348, 365, 366, 391, 394], "tilize_with_val_padding_t": 348, "800781": 349, "455078": 349, "585938": 349, "to_layout_t": 350, "organ": [350, 376, 381], "becom": 350, "thread": [350, 394, 397], "42188": 350, "398438": 350, "to_memory_config_t": 351, "torch_rank": [352, 397], "Will": 352, "reach": 352, "mesh_compos": 352, "meshtotensor": 352, "torch_tensor": [352, 390], "3008": 352, "8438": 352, "3242": 352, "9023": 352, "5820": 352, "5312": 352, "topk_t": 353, "_create_golden_function_topk": 353, "largest": [353, 381], "smallest": 353, "sure": [353, 378, 382, 397], "bfloat8": 353, "top": [353, 382], "attention_softmax_t": 354, "head_siz": [354, 355, 356, 359, 392], "attention_mask": [354, 355, 392], "mask": [354, 355, 358], "softmaxprogramconfig": [354, 355], "softmaxdefaultprogramconfig": [354, 355], "causal_mask": [354, 355], "causal": [354, 355, 357], "attention_softmax__t": 355, "concatenate_heads_t": 356, "num_head": [356, 359, 392], "sequence_s": [356, 359, 375, 392, 393, 394], "scaled_dot_product_attention_t": 357, "mimick": 357, "flashattent": 357, "accept": [357, 358, 376, 379], "sdpaprogramconfig": [357, 358], "q": [357, 358], "parallel": [357, 358, 380, 394], "nqh": 357, "input_tensor_q": [357, 358], "dh": [357, 358], "input_tensor_k": [357, 358], "nkv": [357, 358], "input_tensor_v": [357, 358], "attn_mask": [357, 358], "impli": 357, "is_caus": [357, 358], "scaled_dot_product_attention_decode_t": 358, "decod": [358, 396], "mqa": 358, "sdpamulticoreprogramconfig": 358, "nh": 358, "cur_po": 358, "cur_pos_tensor": 358, "pnh": 358, "skip": [358, 390, 391, 392, 393, 394, 395, 396], "split_query_key_value_and_split_heads_t": 359, "hidden_s": [359, 375, 392, 393], "Then": [359, 375, 378], "score": [359, 394], "kv_input_tensor": 359, "q1": 359, "k1": 359, "v1": [359, 378], "qn": 359, "kn": 359, "vn": 359, "cat": [359, 392, 396], "num_kv_head": 359, "contigu": [359, 390], "transpose_kei": 359, "num": 359, "tril_t": 360, "diagon": [360, 361], "triu_t": 361, "trunc_t": 362, "_golden_function_trunc": [362, 363], "trunc_bw_t": 363, "unary_chain_t": 364, "ops_chain": 364, "unarywithparam": 364, "chain": 364, "unaryoptyp": 364, "untilize_t": 365, "use_pack_until": [365, 366], "sub_core_grid": 365, "corerangeset": 365, "untilize_with_unpadding_t": 366, "output_tensor_end": 366, "upsample_t": 367, "form": 367, "nearest": 367, "scale_factor": 367, "array2d": 367, "var_t": 368, "where_t": 369, "_golden_function_wher": 369, "where_bw_t": 370, "xlogy_t": 371, "_golden_function_xlogi": 371, "cdot": 371, "xlogy_bw_t": 372, "zeros_t": 373, "zeros_like_t": 374, "basi": 375, "rewritten": 375, "bert": [375, 393, 394], "modeling_bert": [375, 393], "bertintermedi": 375, "__init__": [375, 395], "super": [375, 395], "dens": 375, "intermediate_s": 375, "forward": [375, 395], "hidden_st": [375, 392, 393], "tdd": 375, "torch_bert": 375, "utility_funct": 375, "torch_random": 375, "utils_for_test": 375, "assert_with_pcc": 375, "mark": [375, 376], "parametr": 375, "phiyodr": [375, 393], "finetun": [375, 393], "squad2": [375, 393], "384": [375, 392, 393], "test_bert_intermedi": 375, "manual_se": [375, 390, 391, 392, 395, 396, 397], "bertconfig": [375, 393], "from_pretrain": [375, 393, 396], "eval": [375, 393, 394, 395, 396], "torch_hidden_st": [375, 392], "torch_output": [375, 392], "bert_intermedi": 375, "9999": [375, 390, 391, 392, 393, 395, 397], "dictionari": 375, "turn": 375, "ttnn_bert": [375, 393], "999": 375, "someth": 375, "ttnn_optimized_bert": [375, 393], "isinst": 375, "preprocess_linear_weight": [375, 392], "preprocess_linear_bia": [375, 392], "ff1_weight": 375, "ff1_bia": 375, "best": [375, 390], "integr": [375, 376], "incredibli": 376, "excit": 376, "exploratori": 376, "freedom": 376, "showcas": 376, "few": [376, 381, 390], "question": 376, "answer": 376, "see": [376, 377, 378, 379, 390, 394, 396], "highlight": [376, 381], "successfulli": [376, 382, 394, 396], "migrat": [376, 390, 391, 392, 393, 395, 397], "good": 376, "documen": 376, "describ": 376, "credit": 376, "author": 376, "might": [376, 391], "encount": 376, "demonstr": [376, 380], "adequ": 376, "achiev": [376, 379], "pearson": 376, "ci": 376, "pipelin": [376, 380], "unit": 376, "metric": 376, "meet": 376, "continu": [376, 378, 379], "upon": 376, "everi": [376, 380, 392, 397], "commit": [376, 394], "ongo": 376, "complianc": 376, "catch": 376, "regress": 376, "earli": 376, "collect": [376, 380, 382, 394], "varieti": 376, "measur": 376, "special": [376, 381], "run_device_perf_model": 376, "models_device_performance_bare_met": 376, "schedul": 376, "clear": [376, 379, 390, 391, 392, 393, 394, 395], "incorpor": 376, "autom": 376, "extern": [376, 379, 381], "servic": 376, "impact": 376, "run_perf_models_oth": 376, "run_perf_models_llm_javelin": 376, "run_perf_models_cnn_javelin": 376, "models_performance_bare_met": 376, "run_demos_single_card_n150_test": 376, "run_demos_single_card_n300_test": 376, "run_t3000_demo_test": 376, "test_ttnn_functional_resnet50": 376, "resnet50testinfra": 376, "setup": [376, 377, 378, 394, 396], "friendli": 377, "ml": 377, "workload": 377, "choic": [377, 378, 390], "learn": [377, 381, 391, 394], "dive": 377, "deeper": 377, "jupyt": [377, 382, 394], "notebook": [377, 382, 394, 396], "through": [378, 396], "softwar": [378, 382, 390, 391, 392, 393, 395], "packag": [378, 393, 394, 396], "asset": 378, "tag": 378, "compat": [378, 383, 386, 387], "galaxi": 378, "4u": 378, "ubuntu": [378, 390, 391, 392, 393, 394, 395, 396], "04": [378, 396], "33": [378, 391, 394], "fw_pack": 378, "v2": 378, "6u": 378, "17": [378, 392, 393, 394, 395, 396], "v80": 378, "v3": 378, "t3000": 378, "blackhol": 378, "18": [378, 390, 391, 392, 393, 394, 396], "repo": 378, "clang": 378, "wget": 378, "raw": [378, 396], "githubusercont": 378, "install_depend": 378, "sfpi": 378, "chmod": 378, "sudo": [378, 380], "linux": [378, 394], "consult": 378, "vari": 378, "gentoo": 378, "arch": 378, "suffix": 378, "dev": [378, 394], "devel": 378, "gcc": 378, "later": 378, "while": [378, 379], "newer": 378, "installaion": 378, "dkm": 378, "debian": 378, "apt": 378, "fedora": 378, "dnf": 378, "enterpris": 378, "epel": 378, "pacman": 378, "cd": [378, 380, 394], "modprob": 378, "visit": 378, "pip": [378, 394, 396, 397], "fw_tag": 378, "fwbundl": 378, "t300": 378, "fw": [378, 380, 390, 391, 392, 393, 395], "tar": 378, "correctli": 378, "telemetri": 378, "Be": [378, 382], "loudbox": 378, "quietbox": 378, "closer": 378, "quickest": 378, "ai": [378, 390, 391, 392, 393, 394, 395], "quick": 378, "who": [378, 381], "recurs": 378, "simplest": 378, "via": 378, "build_met": [378, 380, 394], "cmake": 378, "mkdir": 378, "ninja": 378, "dcmake_build_typ": 378, "relwithdebuginfo": 378, "dcmake_cxx_compil": 378, "box": 378, "doxygen": 378, "registri": 378, "pull": [378, 379], "ghcr": 378, "io": [378, 380], "amd64": 378, "rm": 378, "hugepag": [378, 390, 391, 392, 393, 394, 395], "1g": 378, "bash": [378, 394], "navig": 378, "architectur": [378, 383, 386, 387, 397], "wheel_fil": 378, "whl": [378, 394, 396], "governor": 378, "txt": [378, 394], "cpufrequtil": 378, "cpupow": 378, "frequenc": 378, "tt_metal_hom": [378, 380, 394], "python3": [378, 393, 394, 396], "m": [378, 391], "run_op_on_devic": 378, "intend": 379, "reliabl": 379, "simultan": 379, "fine": 379, "tune": 379, "themselv": [379, 381], "goal": 379, "ask": 379, "driven": 379, "popular": 379, "kent": 379, "beck": 379, "benefit": 379, "submit": 379, "label": [379, 381], "fulli": [379, 380], "fallback": 379, "branch": 379, "brief": 379, "4730": 379, "rst": 379, "referenc": [379, 394], "sweep": 379, "codeown": 379, "pr": 379, "reflect": 379, "comment": 379, "test_perf_resnet": 380, "test_perf_bare_met": 380, "0185": 380, "finish": [380, 394], "consol": 380, "shorter": 380, "append": [380, 396], "cli": 380, "explain": 380, "reset": 380, "tt_smi": 380, "tensix_reset": 380, "tensix": 380, "skew": 380, "timer": 380, "reboot": 380, "machin": [380, 382, 396], "wh": 380, "layer": [380, 395], "analyz": 380, "1000": [380, 395, 396], "fixtur": 380, "ttl": 380, "dumpdeviceprofil": 380, "total": 380, "drop": 380, "around": 380, "120": [380, 394], "eighth": 380, "receiv": 380, "warn": [380, 390, 391, 392, 393, 394, 395], "mention": 380, "risc": 380, "those": 380, "analysi": 380, "affect": 380, "flow": 380, "python_fallback": [380, 394], "tt_dnn_cpu": 380, "tt_dnn_devic": [380, 394], "global": [380, 394], "fidel": [380, 394], "field": 380, "lofi": [380, 395], "hifi2": 380, "hifi3": 380, "clock": 380, "stamp": 380, "durat": [380, 392, 394, 397], "nanosecond": 380, "end_t": 380, "start_t": 380, "cycl": 380, "earliest": 380, "core_frequ": 380, "marker": 380, "brisc": 380, "ncrisc": 380, "trisc0": 380, "trisc1": 380, "trisc2": 380, "cb": 380, "front": [380, 396], "spent": 380, "cb_wait_front": 380, "reserv": 380, "cb_reserve_back": 380, "datamov": 380, "input_0_memori": 380, "z": [380, 396], "channels_last": 380, "dev_0_dram": 380, "dec_0_l1": 380, "tgz": 380, "filenam": [380, 396], "item": [380, 394], "aggreg": 380, "timestamp": 380, "4x4": 381, "32x32": 381, "still": 381, "transit": 381, "2x2": 381, "illustr": 381, "byte": 381, "That": [381, 391], "sizeof": 381, "introduc": 381, "behavior": 381, "observ": 381, "magnitud": [381, 392], "flush": 381, "instabl": 381, "extrem": 381, "infin": 381, "domin": 381, "caus": 381, "lose": 381, "precis": 381, "7014118346046923e": 381, "dataset": [381, 394], "frequent": 381, "occurr": 381, "uniform": 381, "deal": 381, "critic": 381, "homogen": 381, "unsuit": 381, "inher": 381, "owned_host_storag": 381, "borrowed_host_storag": 381, "numpi": [381, 394, 396], "device_storag": 381, "abstract": 381, "awai": 381, "compress": 381, "upper": 381, "remain": 381, "128x128": 381, "subset": 381, "know": 381, "understand": 381, "unshard": 381, "coordin": 381, "physic": 381, "certain": 382, "ramp": 382, "skillset": 382, "tree": 382, "launch": 382, "lab": 382, "port": 382, "8888": 382, "hint": 382, "cell": 382, "bottom": 382, "central": 390, "sens": 390, "sram": 390, "concept": 390, "2024": [390, 391, 392, 393, 394, 395, 396, 397], "07": [390, 391, 392, 393, 395], "48": [390, 393, 394], "818": 390, "136": [390, 391, 392, 393], "cache_path": [390, 391, 392, 393, 395], "posixpath": [390, 391, 392, 393], "home": [390, 391, 392, 393, 394, 395, 396], "comparison_mode_pcc": [390, 391, 392, 393, 395, 397], "enable_comparison_mod": [390, 391, 392, 393, 395, 397], "enable_detailed_buffer_report": [390, 391, 392, 393, 395, 397], "enable_detailed_tensor_report": [390, 391, 392, 393, 395, 397], "enable_fast_runtime_mod": [390, 391, 392, 393, 395, 397], "enable_graph_report": [390, 391, 392, 393, 395, 397], "enable_log": [390, 391, 392, 393, 395, 397], "enable_model_cach": [390, 391, 392, 393, 395], "model_cache_path": [390, 391, 392, 393, 395], "report_nam": [390, 391, 392, 393, 395, 397], "root_report_path": [390, 391, 392, 393, 395], "throw_exception_on_fallback": [390, 391, 392, 393, 395], "tmp_dir": [390, 391, 392, 393, 395, 396], "905": 390, "operation_decor": [390, 391, 392, 393, 395], "758": [390, 391, 392, 393], "906": 390, "907": [390, 392], "908": [390, 392], "909": [390, 392], "910": [390, 392], "911": [390, 392], "914": [390, 392], "915": [390, 392], "pearson_correlation_coeffici": [390, 391, 392, 393, 395], "919": [390, 392], "920": 390, "921": [390, 392], "unsqueeze_to_4d": [390, 391, 392, 393, 395], "922": [390, 392], "923": [390, 392], "924": [390, 392], "925": [390, 392], "926": [390, 392], "allocate_tensor_on_devic": [390, 391, 392, 393, 395], "copy_host_to_device_tensor": [390, 391, 392, 393, 395], "927": [390, 392], "928": [390, 392], "929": [390, 392], "930": [390, 392], "931": [390, 392], "934": [390, 392], "935": 390, "936": [390, 392, 393], "937": 390, "938": [390, 392], "941": [390, 392], "942": [390, 392], "943": [390, 392], "948": [390, 392], "949": [390, 392, 393], "950": [390, 392], "951": [390, 392, 393], "952": [390, 392], "953": [390, 392], "954": [390, 392], "955": [390, 392], "958": [390, 392], "959": 390, "960": [390, 392, 393], "f": [390, 391, 392, 394, 396, 397], "As": [390, 391], "1234": 390, "again": 390, "action": 390, "98300": 390, "11301": 390, "37592": 390, "64318": 390, "53437": 390, "59434": 390, "69190": 390, "04268": 390, "33346": 390, "20231": 390, "15127": 390, "58303": 390, "pick": 390, "80078": 390, "69531": 390, "71484": 390, "33398": 390, "60156": 390, "36523": 390, "73047": 390, "90625": 390, "59766": 390, "83203": 390, "61719": 390, "53516": 390, "effici": [390, 391], "transfer": 390, "intuit": 390, "nshape": 390, "nlayout": 390, "21680": 390, "24316": 390, "19336": 390, "40625": 390, "81641": 390, "50781": 390, "09961": 390, "54688": 390, "70703": 390, "93359": 390, "06787": 390, "75781": 390, "insert": 390, "cale": 390, "handl": 390, "49": [390, 394, 396], "027": [390, 391], "silicondriv": [390, 391, 392, 393, 394, 395], "detect": [390, 391, 392, 393, 394, 395], "pci": [390, 391, 392, 393, 394, 395], "040": 390, "init_detect_tt_device_numanod": [390, 391, 392, 393, 394, 395], "could": [390, 391, 392, 393, 394, 395], "numanodeset": [390, 391, 392, 393, 394, 395], "pci_bus_id": [390, 391, 392, 393, 394, 395], "0000": [390, 391, 392, 393, 394, 395], "00": [390, 391, 392, 393, 394, 395, 396], "041": 390, "bind_area_memory_nodeset": [390, 391, 392, 393, 394, 395], "unabl": [390, 391, 392, 393, 394, 395], "numanod": [390, 391, 392, 393, 394, 395], "membind": [390, 391, 392, 393, 394, 395], "ttsilicondevic": [390, 391, 392, 393, 394, 395], "init_hugepag": [390, 391, 392, 393, 394, 395], "bind_area_to_memory_nodeset": [390, 391, 392, 393, 394, 395], "fail": [390, 391, 392, 393, 394, 395], "ch": [390, 391, 392, 393, 394, 395], "effect": [390, 391, 392, 393, 394, 395], "decreas": [390, 391, 392, 393, 394, 395], "893": [390, 391, 392, 393, 394, 395], "082": 390, "ethernet": [390, 391, 392, 393, 395], "NOT": [390, 391, 392, 393, 395], "clk": [390, 391, 392, 393, 394, 395], "800": [390, 391, 392, 393], "mhz": [390, 391, 392, 393, 394, 395], "torch_input_tensor_a": [390, 397], "torch_input_tensor_b": [390, 397], "therefor": [390, 392], "stai": 390, "unless": [390, 397], "explicit": 390, "figur": 390, "hang": 390, "properli": 390, "41": [391, 394], "903": 391, "989": [391, 392], "990": [391, 392], "991": 391, "992": 391, "993": 391, "994": 391, "995": 391, "996": 391, "001": 391, "002": 391, "003": 391, "004": 391, "005": 391, "006": 391, "007": 391, "008": 391, "009": 391, "010": 391, "011": 391, "012": 391, "013": 391, "015": 391, "016": 391, "017": 391, "018": 391, "020": 391, "021": 391, "022": 391, "028": 391, "029": 391, "030": 391, "031": 391, "032": 391, "033": 391, "035": 391, "036": 391, "037": 391, "053": 391, "066": 391, "067": 391, "094": 391, "repeatedli": 391, "enable_program_cach": [391, 392, 397], "torch_a": 391, "torch_b": 391, "longer": 391, "signific": 391, "aslo": 391, "why": 391, "conver": 391, "todo": 391, "75000": 391, "25000": 391, "50000": 391, "62500": 391, "effeci": 391, "enjoi": 391, "massiv": 391, "eth": [392, 393], "arch_nam": [392, 393], "54": [392, 394], "821": 392, "912": 392, "939": 392, "976": 392, "55": [392, 394], "014": 392, "mul": 392, "fashion": 392, "multi_head_attent": 392, "query_weight": 392, "query_bia": 392, "key_weight": 392, "key_bia": 392, "value_weight": 392, "value_bia": 392, "output_weight": 392, "output_bia": 392, "fallback_reshap": 392, "get_fallback_funct": [392, 397], "attention_scor": 392, "attention_prob": 392, "context_lay": 392, "self_output": 392, "torch_attention_mask": [392, 393], "torch_query_weight": 392, "torch_query_bia": 392, "torch_key_weight": 392, "torch_key_bia": 392, "torch_value_weight": 392, "torch_value_bia": 392, "torch_output_weight": 392, "torch_output_bia": 392, "00607705116272": 392, "250946044921875": 392, "ahead": 392, "data_typ": 392, "optimized_multi_head_attent": 392, "fused_qkv_weight": 392, "fused_qkv_bia": 392, "self_output_weight": 392, "self_output_bia": 392, "fused_qkv_output": 392, "context_layer_after_concatenate_head": 392, "qkv": 392, "torch_qkv_weight": 392, "torch_qkv_bia": 392, "qkv_weight": 392, "qkv_bia": 392, "optimized_output": 392, "474989175796509": 392, "020017147064208984": 392, "torch_optimized_output": 392, "allclos": 392, "19": [392, 394, 396], "ttnn_config_overrid": [393, 395, 397], "47": [393, 394], "183": 393, "133": [393, 394], "overrid": [393, 394, 397], "184": 393, "354": 393, "355": 393, "356": 393, "357": 393, "358": 393, "359": 393, "360": [393, 396], "362": 393, "366": 393, "367": 393, "368": 393, "369": 393, "370": 393, "371": 393, "372": 393, "373": [393, 394], "374": 393, "378": 393, "379": 393, "380": [393, 394], "381": 393, "383": 393, "385": 393, "390": 393, "391": 393, "392": 393, "393": 393, "394": 393, "395": 393, "396": 393, "397": 393, "398": 393, "399": 393, "set_verbosity_error": 393, "100": [393, 394], "412": 393, "442": 393, "447": 393, "googl": [393, 396], "bert_uncased_l": 393, "4_h": 393, "256_a": 393, "bertselfoutput": 393, "lib": [393, 394, 396], "site": [393, 394, 396], "huggingface_hub": [393, 394], "file_download": 393, "1132": 393, "futurewarn": 393, "resume_download": 393, "resum": 393, "force_download": 393, "874": 393, "num_hidden_lay": 393, "bertforquestionansw": 393, "input_id": 393, "vocab_s": 393, "torch_token_type_id": 393, "torch_position_id": 393, "ttnn_bert_input": 393, "preprocess_input": 393, "bert_for_question_answ": 393, "50": 393, "339": 393, "manage_config": [393, 395, 397], "144": 393, "340": 393, "341": 393, "555": 393, "_paramet": [393, 395], "env": [393, 394, 395, 396], "34": [393, 394, 395], "343": 393, "634": 393, "636": 393, "147": [393, 394], "restor": [393, 395], "02": [393, 394], "947": 393, "unset": 394, "silent": 394, "nuke": 394, "jobserv": 394, "unavail": 394, "j1": 394, "parent": 394, "rule": 394, "artifact": 394, "conf": 394, "backend": 394, "pypi": [394, 396], "org": [394, 396], "satisfi": [394, 396], "setuptool": 394, "44": 394, "py3": 394, "65": [394, 396], "kb": 394, "edit": 394, "tt_eager": 394, "obtain": 394, "statu": 394, "metadata": [394, 396], "click": 394, "96": [394, 397], "loguru": 394, "58": 394, "ipywidget": 394, "139": 394, "90": [394, 395], "db": 394, "290ab3a34f2ef0b5a0f89235dc2d40fea83e77de84ed2dc05c": 394, "pyyaml": [394, 396], "cp38": 394, "linux_x86_64": 394, "jupyterlab": 394, "mb": 394, "pyelftool": 394, "py2": 394, "174": 394, "4f": 394, "ed": 394, "863cf4386fe6db3c09333712009ec1c5146a36f3904b469d13": 394, "curtsi": 394, "91": 394, "b7": 394, "0c117d73912c6c2beb1eb0d7d6884f4e79e6e5b5e91eeb34f5": 394, "torchtrail": 394, "manylinux_2_12_x86_64": 394, "manylinux2010_x86_64": 394, "matplotlib": 394, "toolz": 394, "pillow": [394, 396], "manylinux_2_17_x86_64": 394, "manylinux2014_x86_64": 394, "panda": 394, "2bcpu": 394, "199": 394, "dash": 394, "rich": 394, "238": 394, "seaborn": 394, "293": 394, "plotli": 394, "traitlet": 394, "85": 394, "widgetsnbextens": 394, "ipython": [394, 395, 396], "798": 394, "widget": 394, "jupyterlab_widget": 394, "215": 394, "comm": 394, "async": 394, "lru": 394, "async_lru": 394, "tomli": 394, "python_vers": 394, "server": 394, "jupyter_serv": 394, "jinja2": [394, 396], "ipykernel": 394, "116": 394, "shim": 394, "notebook_shim": 394, "jupyterlab_serv": 394, "lsp": 394, "jupyter_lsp": 394, "68": 394, "23": 394, "53": 394, "importlib": [394, 396], "importlib_resourc": 394, "importlib_metadata": 394, "jupyter_cor": 394, "tornado": 394, "abi3": 394, "manylinux_2_5_x86_64": 394, "manylinux1_x86_64": 394, "435": 394, "bless": 394, "cwcwidth": 394, "92": 394, "pyrsist": 394, "121": 394, "graphviz": 394, "networkx": [394, 396], "pypars": 394, "103": 394, "kiwisolv": 394, "contourpi": 394, "301": 394, "fonttool": 394, "dateutil": 394, "python_dateutil": 394, "247": [394, 395], "cycler": 394, "pytz": 394, "2020": 394, "505": 394, "extens": [394, 396], "typing_extens": 394, "html": 394, "compon": 394, "dash_html_compon": 394, "dash_tabl": 394, "flask": 394, "101": 394, "dash_core_compon": 394, "pygment": 394, "markdown": 394, "markdown_it_pi": 394, "84": 394, "tenac": 394, "24": [394, 396], "pickleshar": 394, "prompt": 394, "toolkit": 394, "37": 394, "prompt_toolkit": 394, "43": 394, "386": 394, "stack": 394, "stack_data": 394, "backcal": 394, "jedi": 394, "pexpect": 394, "sys_platform": 394, "win32": 394, "63": 394, "inlin": 394, "matplotlib_inlin": 394, "send2trash": 394, "anyio": 394, "termin": 394, "jupyter_server_termin": 394, "client": 394, "jupyter_cli": 394, "105": 394, "nbformat": 394, "77": 394, "nbconvert": 394, "257": [394, 395], "event": 394, "jupyter_ev": 394, "websocket": 394, "websocket_cli": 394, "pyzmq": 394, "prometheu": 394, "prometheus_cli": 394, "argon2": 394, "cffi": 394, "argon2_cffi": 394, "terminado": 394, "markupsaf": [394, 396], "26": 394, "nest": 394, "asyncio": 394, "nest_asyncio": 394, "psutil": 394, "cp36": 394, "288": 394, "debugpi": 394, "babel": 394, "62": 394, "jsonschema": 394, "json5": 394, "zipp": [394, 396], "platformdir": 394, "six": 394, "wcwidth": 394, "itsdanger": 394, "blinker": 394, "werkzeug": 394, "226": 394, "mdurl": 394, "pure": 394, "pure_ev": 394, "asttoken": 394, "27": [394, 396], "parso": 394, "ptyprocess": 394, "exceptiongroup": 394, "idna": [394, 396], "61": 394, "sniffio": 394, "fastjsonschema": 394, "defusedxml": 394, "beautifulsoup4": 394, "jupyterlab_pyg": 394, "pandocfilt": 394, "mistun": 394, "tinycss2": 394, "bleach": 394, "162": 394, "nbclient": 394, "rfc3986": 394, "rfc3986_valid": 394, "json": [394, 397], "logger": 394, "python_json_logg": 394, "rfc3339": 394, "rfc3339_valid": 394, "argon2_cffi_bind": 394, "86": 394, "urllib3": [394, 396], "charset": [394, 396], "charset_norm": 394, "141": 394, "certifi": [394, 396], "2017": [394, 396], "163": 394, "03": [394, 395], "jsonschema_specif": 394, "pkgutil": 394, "resolv": 394, "pkgutil_resolve_nam": 394, "attr": 394, "rpd": 394, "rpds_py": 394, "soupsiev": 394, "36": 394, "webencod": 394, "444": 394, "pycpars": 394, "118": 394, "pre_commit": 394, "202": 394, "black": 394, "twine": 394, "yamllint": 394, "docutil": 394, "570": 394, "sphinx": 394, "rtd": 394, "theme": 394, "sphinx_rtd_them": 394, "sphinxcontrib": 394, "email": 394, "sphinxcontrib_email": 394, "lxml": 394, "manylinux_2_24_x86_64": 394, "breath": 394, "35": 394, "nbsphinx": 394, "jqueri": 394, "sphinxcontrib_jqueri": 394, "3a": 394, "a8": 394, "3237a93e3a6261bd24edabf3277ca59f64c1710b3d8c7c72a0": 394, "pandoc": 394, "317": 394, "timeout": 394, "pytest_timeout": 394, "6c": 394, "5706d21e6b4dff52e7af12bff9ca126a3f15beb4dff386aa29": 394, "jsbeautifi": 394, "462": 394, "xlsxwriter": 394, "152": 394, "tiktoken": 394, "tqdm": [394, 396], "sentencepiec": 394, "97": 394, "numba": 394, "56": [394, 395], "librosa": 394, "252": [394, 395], "timm": [394, 396], "549": 394, "opencv": 394, "headless": 394, "74": 394, "opencv_python_headless": 394, "cp37": 394, "diffus": [394, 396], "604": 394, "219": 394, "ftfy": 394, "gitpython": 394, "188": 394, "einop": 394, "multiprocess": 394, "70": 394, "py38": 394, "132": 394, "81": 394, "bert_scor": 394, "fsspec": [394, 396], "173": 394, "nodeenv": 394, "cfgv": 394, "98": 394, "virtualenv": 394, "pathspec": 394, "mypi": 394, "mypy_extens": 394, "pyproject_hook": 394, "render": 394, "readme_render": 394, "pkginfo": 394, "toolbelt": 394, "requests_toolbelt": 394, "keyr": 394, "images": 394, "serializinghtml": 394, "sphinxcontrib_serializinghtml": 394, "94": 394, "jsmath": 394, "sphinxcontrib_jsmath": 394, "snowballstemm": 394, "93": [394, 395], "htmlhelp": 394, "sphinxcontrib_htmlhelp": 394, "99": 394, "alabast": 394, "applehelp": 394, "sphinxcontrib_applehelp": 394, "devhelp": 394, "sphinxcontrib_devhelp": 394, "qthelp": 394, "sphinxcontrib_qthelp": 394, "ply": 394, "plumbum": 394, "127": 394, "iniconfig": 394, "pluggi": 394, "0rc8": 394, "editorconfig": 394, "pyarrow": 394, "xxhash": 394, "194": 394, "huggingfac": [394, 396], "hub": [394, 396], "330": 394, "aiohttp": 394, "dill": 394, "110": 394, "regex": [394, 396], "2019": [394, 396], "777": 394, "filelock": [394, 396], "llvmlite": 394, "0dev0": 394, "soxr": 394, "soundfil": 394, "pooch": 394, "lazi": 394, "loader": 394, "lazy_load": 394, "scipi": 394, "joblib": 394, "302": 394, "audioread": 394, "scikit": 394, "scikit_learn": 394, "msgpack": 394, "534": 394, "gitdb": 394, "distlib": 394, "468": 394, "nh3": 394, "secretstorag": 394, "jeepnei": 394, "jaraco": 394, "2015": 394, "frozenlist": 394, "240": [394, 395], "async_timeout": 394, "aiosign": 394, "yarl": 394, "308": 394, "multidict": 394, "129": 394, "threadpoolctl": 394, "smmap": 394, "cryptographi": 394, "itertool": 394, "more_itertool": 394, "57": 394, "pyproject": 394, "uninstal": 394, "msg": 394, "t5": 394, "integration_test": 394, "test_perform": 394, "test_t5_for_conditional_gener": 394, "functional_t5": 394, "ttnn_functional_t5": 394, "09": [394, 395], "__main__": 394, "ops_devic": 394, "session": 394, "platform": 394, "cachedir": 394, "pytest_cach": 394, "rootdir": 394, "configfil": 394, "ini": 394, "plugin": 394, "600": 394, "func_onli": 394, "670": 394, "681": 394, "08": 394, "684": [394, 395], "1202": 394, "llruntim": 394, "watcher": 394, "watch": 394, "109": 394, "465": 394, "ttnn_t5": 394, "6ba823894": 394, "149": 394, "484": 394, "487": 394, "216": 394, "489": 394, "721": 394, "359902381896973": 394, "07123565673828": 394, "722": 394, "102": 394, "44269247283137575": 394, "detach": 394, "summari": 394, "627": 394, "638": 394, "639": 394, "458": 394, "224": 394, "460": 394, "292": 394, "164": 394, "22393798828125": 394, "165": 394, "322504758834839": 394, "407821983919596": 394, "pd": 394, "glob": 394, "getenv": 394, "get_latest_report": 394, "base_path": 394, "latest_dir": 394, "listdir": 394, "isdir": 394, "getmtim": 394, "valueerror": [394, 395], "latest_profile_report": 394, "df": 394, "read_csv": 394, "2024_02_09_01_38_37": 394, "ops_perf_results_resnet_2024_02_09_01_38_37": 394, "output_0_w": 394, "output_0_z": 394, "output_0_i": 394, "output_0_x": 394, "output_0_layout": 394, "output_0_data": 394, "output_0_memori": 394, "depth": 394, "compileprogram": 394, "load_tensor_ttnn": 394, "137428381893955": 394, "137428382188762": 394, "294807": 394, "137428382500949": 394, "137428399402163": 394, "16901214": 394, "137428399802068": 394, "137428399873758": 394, "71690": 394, "137428400102635": 394, "137428400351033": 394, "248398": 394, "137428400548071": 394, "137428400792528": 394, "244457": 394, "4391": 394, "reshape_ttnn": 394, "4392": 394, "137450414555424": 394, "137450414599894": 394, "44470": 394, "4393": 394, "137450414740752": 394, "137450414782422": 394, "41670": 394, "4394": 394, "bcast_batch": 394, "tt_me": 394, "108": 394, "matmulparallelizationstrategi": 394, "multi_cor": 394, "137450414881851": 394, "137450414983440": 394, "101589": 394, "32128": 394, "dev_0_dram_interleav": 394, "4395": 394, "137450415113099": 394, "137450415158748": 394, "45649": 394, "from_device_ttnn": 394, "4396": 394, "137450415235897": 394, "137450453493048": 394, "38257151": 394, "fold_batch_norm2d_into_conv2d": 395, "168": 395, "82": 395, "768": 395, "242": 395, "246": 395, "248": 395, "249": 395, "250": [395, 396], "251": 395, "253": 395, "254": 395, "255": 395, "258": 395, "262": 395, "avg_pool2d": 395, "266": 395, "268": 395, "269": 395, "device_param": 395, "24576": 395, "310": 395, "324": 395, "325": 395, "363": 395, "conv3x3": 395, "in_plan": 395, "out_plan": 395, "3x3": 395, "torchbasicblock": 395, "expans": 395, "inplan": 395, "downsampl": 395, "base_width": 395, "norm_lay": 395, "batchnorm2d": 395, "basicblock": 395, "notimplementederror": 395, "conv1": 395, "bn1": 395, "conv2": 395, "bn2": 395, "torch_model": 395, "state_dict": [395, 396], "create_custom_preprocessor": 395, "conv_weight_1": 395, "conv_bias_1": 395, "conv_weight_2": 395, "conv_bias_2": 395, "682": 395, "683": 395, "499": 395, "_initialize_model_and_preprocess_paramet": 395, "449": 395, "717": 395, "718": 395, "model_resnet_block_graph": 395, "conv_param": 395, "act_block_h": 395, "__call__": 395, "fp32_dest_acc_en": 395, "packer_l1_accum_en": 395, "_out_height": 395, "_out_width": 395, "return_output_s": 395, "return_prepared_device_weight": 395, "ttnnbasicblock": 395, "get_memory_config": 395, "ttnn_model": 395, "12638": 395, "walk": 396, "colab": 396, "research": 396, "run_dit": 396, "ipynb": 396, "tab": 396, "ov": 396, "assumpt": 396, "chdir": 396, "content": 396, "upgrad": 396, "save_imag": 396, "create_diffus": 396, "autoencoderkl": 396, "find_model": 396, "collis": 396, "pil": 396, "set_grad_en": 396, "cuda": 396, "is_avail": 396, "gpu": 396, "322": 396, "fatal": 396, "destin": 396, "date": 396, "safetensor": 396, "sympi": 396, "mpmath": 396, "image_s": 396, "512": 396, "vae_model": 396, "stabilityai": 396, "sd": 396, "vae": 396, "ft": 396, "ema": 396, "mse": 396, "latent_s": 396, "input_s": 396, "pt": 396, "load_state_dict": 396, "num_sampling_step": 396, "slider": 396, "cfg_scale": 396, "class_label": 396, "207": 396, "387": 396, "974": 396, "88": 396, "979": 396, "417": 396, "279": 396, "samples_per_row": 396, "nois": 396, "len": 396, "classifi": 396, "free": 396, "guidanc": 396, "y_null": 396, "model_kwarg": 396, "p_sample_loop": 396, "forward_with_cfg": 396, "clip_denois": 396, "null": 396, "18215": 396, "dit_model_graph": 396, "png": 396, "nrow": 396, "value_rang": 396, "06": 396, "987": 396, "210": 396, "show_svg": 396, "snippet": 397, "matmul_output_tensor": 397, "torch_matmul_output_tensor": 397, "unlik": 397, "start_tim": 397, "end_tim": 397, "stdout": 397, "6391518115997314": 397, "0007393360137939453": 397, "9998": 397, "construct": 397, "exp_trac": 397, "miss": 397, "tt_logger_typ": 397, "tt_logger_level": 397, "substitut": 397, "disk": 397, "implementaiton": 397, "insid": 397, "addition": 397, "ttnn_config_path": 397, "app": 397, "pre_hook_to_print_args_and_kwarg": 397, "post_hook_to_print_output": 397, "query_registered_oper": 397, "begin_graph_captur": 397, "runmod": 397, "no_dispatch": 397, "captured_graph": 397, "end_graph_captur": 397, "pretty_print": 397}, "objects": {"ttnn": [[8, 0, 1, "", "Conv2dConfig"], [9, 0, 1, "", "Conv2dSliceConfig"], [10, 3, 1, "", "GetDefaultDevice"], [11, 3, 1, "", "SetDefaultDevice"], [381, 0, 1, "", "Shape"], [12, 5, 1, "", "abs"], [13, 5, 1, "", "abs_bw"], [14, 5, 1, "", "acos"], [15, 5, 1, "", "acos_bw"], [16, 5, 1, "", "acosh"], [17, 5, 1, "", "acosh_bw"], [18, 5, 1, "", "add"], [19, 5, 1, "", "add_bw"], [20, 5, 1, "", "addalpha"], [21, 5, 1, "", "addalpha_bw"], [22, 5, 1, "", "addcdiv"], [23, 5, 1, "", "addcdiv_bw"], [24, 5, 1, "", "addcmul"], [25, 5, 1, "", "addcmul_bw"], [26, 5, 1, "", "all_gather"], [27, 5, 1, "", "alt_complex_rotate90"], [28, 5, 1, "", "angle"], [29, 5, 1, "", "angle_bw"], [30, 5, 1, "", "arange"], [31, 5, 1, "", "argmax"], [32, 5, 1, "", "as_tensor"], [33, 5, 1, "", "asin"], [34, 5, 1, "", "asin_bw"], [35, 5, 1, "", "asinh"], [36, 5, 1, "", "asinh_bw"], [37, 5, 1, "", "assign_bw"], [38, 5, 1, "", "atan"], [39, 5, 1, "", "atan2"], [40, 5, 1, "", "atan2_bw"], [41, 5, 1, "", "atan_bw"], [42, 5, 1, "", "atanh"], [43, 5, 1, "", "atanh_bw"], [44, 5, 1, "", "batch_norm"], [45, 5, 1, "", "bias_gelu_bw"], [46, 5, 1, "", "bitwise_and"], [47, 5, 1, "", "bitwise_left_shift"], [48, 5, 1, "", "bitwise_not"], [49, 5, 1, "", "bitwise_or"], [50, 5, 1, "", "bitwise_right_shift"], [51, 5, 1, "", "bitwise_xor"], [52, 5, 1, "", "cbrt"], [53, 5, 1, "", "ceil"], [54, 5, 1, "", "ceil_bw"], [55, 5, 1, "", "celu"], [56, 5, 1, "", "celu_bw"], [57, 5, 1, "", "clamp"], [58, 5, 1, "", "clamp_bw"], [59, 5, 1, "", "clip"], [60, 5, 1, "", "clip_bw"], [61, 5, 1, "", "clone"], [62, 3, 1, "", "close_device"], [63, 5, 1, "", "concat"], [64, 5, 1, "", "concat_bw"], [65, 5, 1, "", "conj"], [66, 5, 1, "", "conj_bw"], [67, 5, 1, "", "conv1d"], [68, 5, 1, "", "conv2d"], [69, 5, 1, "", "conv_transpose2d"], [70, 5, 1, "", "cos"], [71, 5, 1, "", "cos_bw"], [72, 5, 1, "", "cosh"], [73, 5, 1, "", "cosh_bw"], [74, 3, 1, "", "create_sharded_memory_config"], [75, 5, 1, "", "deallocate"], [76, 5, 1, "", "deg2rad"], [77, 5, 1, "", "deg2rad_bw"], [78, 5, 1, "", "digamma"], [79, 5, 1, "", "digamma_bw"], [80, 5, 1, "", "div"], [81, 5, 1, "", "div_bw"], [82, 5, 1, "", "div_no_nan"], [83, 5, 1, "", "div_no_nan_bw"], [84, 5, 1, "", "dump_tensor"], [85, 5, 1, "", "elu"], [86, 5, 1, "", "elu_bw"], [87, 5, 1, "", "embedding"], [88, 5, 1, "", "embedding_bw"], [89, 5, 1, "", "empty"], [90, 5, 1, "", "empty_like"], [91, 5, 1, "", "eq"], [92, 5, 1, "", "eq_"], [93, 5, 1, "", "eqz"], [94, 5, 1, "", "erf"], [95, 5, 1, "", "erf_bw"], [96, 5, 1, "", "erfc"], [97, 5, 1, "", "erfc_bw"], [98, 5, 1, "", "erfinv"], [99, 5, 1, "", "erfinv_bw"], [100, 5, 1, "", "exp"], [101, 5, 1, "", "exp2"], [102, 5, 1, "", "exp2_bw"], [103, 5, 1, "", "exp_bw"], [112, 5, 1, "", "expm1"], [113, 5, 1, "", "expm1_bw"], [114, 5, 1, "", "fill"], [115, 5, 1, "", "fill_bw"], [116, 5, 1, "", "fill_ones_rm"], [117, 5, 1, "", "fill_rm"], [118, 5, 1, "", "fill_zero_bw"], [119, 5, 1, "", "floor"], [120, 5, 1, "", "floor_bw"], [121, 5, 1, "", "floor_div"], [122, 5, 1, "", "fmod"], [123, 5, 1, "", "fmod_bw"], [124, 3, 1, "", "format_input_tensor"], [125, 3, 1, "", "format_output_tensor"], [126, 5, 1, "", "frac"], [127, 5, 1, "", "frac_bw"], [128, 5, 1, "", "from_device"], [129, 5, 1, "", "from_torch"], [130, 5, 1, "", "full"], [131, 5, 1, "", "full_like"], [132, 5, 1, "", "gcd"], [133, 5, 1, "", "ge"], [134, 5, 1, "", "ge_"], [135, 5, 1, "", "geglu"], [136, 5, 1, "", "gelu"], [137, 5, 1, "", "gelu_bw"], [138, 5, 1, "", "gez"], [139, 5, 1, "", "global_avg_pool2d"], [140, 5, 1, "", "glu"], [141, 5, 1, "", "group_norm"], [142, 5, 1, "", "gt"], [143, 5, 1, "", "gt_"], [144, 5, 1, "", "gtz"], [145, 5, 1, "", "hardshrink"], [146, 5, 1, "", "hardshrink_bw"], [147, 5, 1, "", "hardsigmoid"], [148, 5, 1, "", "hardsigmoid_bw"], [149, 5, 1, "", "hardswish"], [150, 5, 1, "", "hardswish_bw"], [151, 5, 1, "", "hardtanh"], [152, 5, 1, "", "hardtanh_bw"], [153, 5, 1, "", "heaviside"], [154, 5, 1, "", "hypot"], [155, 5, 1, "", "hypot_bw"], [156, 5, 1, "", "i0"], [157, 5, 1, "", "i0_bw"], [158, 5, 1, "", "identity"], [159, 5, 1, "", "imag"], [160, 5, 1, "", "imag_bw"], [161, 5, 1, "", "indexed_fill"], [162, 5, 1, "", "is_imag"], [163, 5, 1, "", "is_real"], [164, 5, 1, "", "isclose"], [165, 5, 1, "", "isfinite"], [166, 5, 1, "", "isinf"], [167, 5, 1, "", "isnan"], [168, 5, 1, "", "isneginf"], [169, 5, 1, "", "isposinf"], [172, 5, 1, "", "l1_loss"], [173, 5, 1, "", "layer_norm"], [174, 5, 1, "", "lcm"], [175, 5, 1, "", "ldexp"], [176, 5, 1, "", "ldexp_bw"], [177, 5, 1, "", "le"], [178, 5, 1, "", "le_"], [179, 5, 1, "", "leaky_relu"], [180, 5, 1, "", "leaky_relu_bw"], [181, 5, 1, "", "lerp"], [182, 5, 1, "", "lerp_bw"], [183, 5, 1, "", "lez"], [184, 5, 1, "", "lgamma"], [185, 5, 1, "", "lgamma_bw"], [186, 5, 1, "", "linear"], [187, 5, 1, "", "load_tensor"], [188, 5, 1, "", "log"], [189, 5, 1, "", "log10"], [190, 5, 1, "", "log10_bw"], [191, 5, 1, "", "log1p"], [192, 5, 1, "", "log1p_bw"], [193, 5, 1, "", "log2"], [194, 5, 1, "", "log2_bw"], [195, 5, 1, "", "log_bw"], [196, 5, 1, "", "log_sigmoid"], [197, 5, 1, "", "log_sigmoid_bw"], [198, 5, 1, "", "logaddexp"], [199, 5, 1, "", "logaddexp2"], [200, 5, 1, "", "logaddexp2_bw"], [201, 5, 1, "", "logaddexp_bw"], [202, 5, 1, "", "logical_and"], [203, 5, 1, "", "logical_and_"], [204, 5, 1, "", "logical_not"], [205, 5, 1, "", "logical_not_"], [206, 5, 1, "", "logical_or"], [207, 5, 1, "", "logical_or_"], [208, 5, 1, "", "logical_xor"], [209, 5, 1, "", "logical_xor_"], [210, 5, 1, "", "logit"], [211, 5, 1, "", "logit_bw"], [212, 5, 1, "", "logiteps_bw"], [213, 5, 1, "", "lt"], [214, 5, 1, "", "lt_"], [215, 5, 1, "", "ltz"], [216, 5, 1, "", "mac"], [217, 3, 1, "", "manage_device"], [218, 5, 1, "", "matmul"], [219, 5, 1, "", "max"], [220, 5, 1, "", "max_bw"], [221, 5, 1, "", "max_pool2d"], [222, 5, 1, "", "maximum"], [223, 5, 1, "", "mean"], [224, 5, 1, "", "min"], [225, 5, 1, "", "min_bw"], [226, 5, 1, "", "minimum"], [227, 5, 1, "", "mish"], [230, 5, 1, "", "moreh_sum"], [231, 5, 1, "", "mse_loss"], [232, 5, 1, "", "mul_bw"], [233, 5, 1, "", "multigammaln"], [234, 5, 1, "", "multigammaln_bw"], [235, 5, 1, "", "multiply"], [236, 5, 1, "", "ne"], [237, 5, 1, "", "ne_"], [238, 5, 1, "", "neg"], [239, 5, 1, "", "neg_bw"], [240, 5, 1, "", "nextafter"], [241, 5, 1, "", "nez"], [242, 5, 1, "", "nonzero"], [243, 5, 1, "", "normalize_global"], [244, 5, 1, "", "normalize_hw"], [245, 5, 1, "", "ones"], [246, 5, 1, "", "ones_like"], [247, 3, 1, "", "open_device"], [248, 5, 1, "", "outer"], [249, 5, 1, "", "pad"], [250, 3, 1, "", "pad_to_tile_shape"], [251, 5, 1, "", "permute"], [252, 5, 1, "", "polar"], [253, 5, 1, "", "polar_bw"], [254, 5, 1, "", "polygamma"], [255, 5, 1, "", "polygamma_bw"], [256, 5, 1, "", "polyval"], [257, 5, 1, "", "pow"], [258, 5, 1, "", "pow_bw"], [259, 5, 1, "", "prelu"], [260, 3, 1, "", "prepare_conv_bias"], [261, 3, 1, "", "prepare_conv_transpose2d_bias"], [262, 3, 1, "", "prepare_conv_transpose2d_weights"], [263, 3, 1, "", "prepare_conv_weights"], [264, 5, 1, "", "prod"], [265, 5, 1, "", "prod_bw"], [266, 5, 1, "", "rad2deg"], [267, 5, 1, "", "rad2deg_bw"], [268, 5, 1, "", "rdiv"], [269, 5, 1, "", "rdiv_bw"], [270, 5, 1, "", "real"], [271, 5, 1, "", "real_bw"], [272, 5, 1, "", "reallocate"], [273, 5, 1, "", "reciprocal"], [274, 5, 1, "", "reciprocal_bw"], [275, 5, 1, "", "reduce_scatter"], [276, 3, 1, "", "register_post_operation_hook"], [277, 3, 1, "", "register_pre_operation_hook"], [278, 5, 1, "", "reglu"], [279, 5, 1, "", "relu"], [280, 5, 1, "", "relu6"], [281, 5, 1, "", "relu6_bw"], [282, 5, 1, "", "relu_bw"], [283, 5, 1, "", "relu_max"], [284, 5, 1, "", "relu_min"], [285, 5, 1, "", "remainder"], [286, 5, 1, "", "remainder_bw"], [287, 5, 1, "", "repeat"], [288, 5, 1, "", "repeat_bw"], [289, 5, 1, "", "repeat_interleave"], [290, 5, 1, "", "reshape"], [291, 5, 1, "", "rms_norm"], [292, 5, 1, "", "round"], [293, 5, 1, "", "round_bw"], [294, 5, 1, "", "rpow"], [295, 5, 1, "", "rpow_bw"], [296, 5, 1, "", "rsqrt"], [297, 5, 1, "", "rsqrt_bw"], [298, 5, 1, "", "rsub"], [299, 5, 1, "", "rsub_bw"], [300, 5, 1, "", "scatter"], [301, 5, 1, "", "selu"], [302, 5, 1, "", "selu_bw"], [303, 3, 1, "", "set_printoptions"], [304, 5, 1, "", "sigmoid"], [305, 5, 1, "", "sigmoid_accurate"], [306, 5, 1, "", "sigmoid_bw"], [307, 5, 1, "", "sign"], [308, 5, 1, "", "sign_bw"], [309, 5, 1, "", "signbit"], [310, 5, 1, "", "silu"], [311, 5, 1, "", "silu_bw"], [312, 5, 1, "", "sin"], [313, 5, 1, "", "sin_bw"], [314, 5, 1, "", "sinh"], [315, 5, 1, "", "sinh_bw"], [316, 5, 1, "", "slice"], [317, 5, 1, "", "softmax"], [318, 5, 1, "", "softplus"], [319, 5, 1, "", "softplus_bw"], [320, 5, 1, "", "softshrink"], [321, 5, 1, "", "softshrink_bw"], [322, 5, 1, "", "softsign"], [323, 5, 1, "", "softsign_bw"], [324, 5, 1, "", "sqrt"], [325, 5, 1, "", "sqrt_bw"], [326, 5, 1, "", "square"], [327, 5, 1, "", "square_bw"], [328, 5, 1, "", "squared_difference"], [329, 5, 1, "", "squared_difference_bw"], [330, 5, 1, "", "std"], [331, 5, 1, "", "sub_bw"], [332, 5, 1, "", "subalpha"], [333, 5, 1, "", "subalpha_bw"], [334, 5, 1, "", "subtract"], [335, 5, 1, "", "sum"], [336, 5, 1, "", "swiglu"], [337, 5, 1, "", "swish"], [338, 3, 1, "", "synchronize_device"], [339, 5, 1, "", "tan"], [340, 5, 1, "", "tan_bw"], [341, 5, 1, "", "tanh"], [342, 5, 1, "", "tanh_bw"], [343, 5, 1, "", "tanhshrink"], [344, 5, 1, "", "tanhshrink_bw"], [345, 5, 1, "", "threshold"], [346, 5, 1, "", "threshold_bw"], [347, 5, 1, "", "tilize"], [348, 5, 1, "", "tilize_with_val_padding"], [349, 5, 1, "", "to_device"], [350, 5, 1, "", "to_layout"], [351, 5, 1, "", "to_memory_config"], [352, 5, 1, "", "to_torch"], [353, 5, 1, "", "topk"], [360, 5, 1, "", "tril"], [361, 5, 1, "", "triu"], [362, 5, 1, "", "trunc"], [363, 5, 1, "", "trunc_bw"], [364, 5, 1, "", "unary_chain"], [365, 5, 1, "", "untilize"], [366, 5, 1, "", "untilize_with_unpadding"], [367, 5, 1, "", "upsample"], [368, 5, 1, "", "var"], [369, 5, 1, "", "where"], [370, 5, 1, "", "where_bw"], [371, 5, 1, "", "xlogy"], [372, 5, 1, "", "xlogy_bw"], [373, 5, 1, "", "zeros"], [374, 5, 1, "", "zeros_like"]], "ttnn.Conv2dConfig": [[8, 1, 1, "", "act_block_h_override"], [8, 1, 1, "", "act_block_w_div"], [8, 1, 1, "", "activation"], [8, 1, 1, "", "always_preprocess_weights"], [8, 1, 1, "", "core_grid"], [8, 1, 1, "", "deallocate_activation"], [8, 1, 1, "", "dtype"], [8, 1, 1, "", "enable_act_double_buffer"], [8, 1, 1, "", "enable_kernel_stride_folding"], [8, 1, 1, "", "enable_split_reader"], [8, 1, 1, "", "enable_subblock_padding"], [8, 1, 1, "", "enable_weights_double_buffer"], [8, 1, 1, "", "in_place"], [8, 1, 1, "", "output_layout"], [8, 1, 1, "", "override_sharding_config"], [8, 1, 1, "", "preprocess_weights_on_device"], [8, 1, 1, "", "reallocate_halo_output"], [8, 1, 1, "", "reshard_if_not_optimal"], [8, 1, 1, "", "shard_layout"], [8, 1, 1, "", "transpose_shards"], [8, 1, 1, "", "weights_dtype"]], "ttnn.Conv2dSliceConfig": [[9, 0, 1, "", "SliceTypeEnum"], [9, 1, 1, "", "num_slices"], [9, 1, 1, "", "slice_type"]], "ttnn.Conv2dSliceConfig.SliceTypeEnum": [[9, 2, 1, "", "SliceHeight"], [9, 2, 1, "", "SliceWidth"], [9, 1, 1, "", "name"], [9, 1, 1, "", "value"]], "ttnn.Shape": [[381, 1, 1, "", "rank"], [381, 4, 1, "", "to_rank"]], "ttnn.experimental": [[104, 5, 1, "", "all_reduce"], [105, 5, 1, "", "conv3d"], [106, 5, 1, "", "cumprod"], [107, 5, 1, "", "cumsum"], [108, 5, 1, "", "dropout"], [109, 5, 1, "", "gelu_bw"], [110, 5, 1, "", "rotary_embedding"], [111, 5, 1, "", "sort"]], "ttnn.kv_cache": [[170, 5, 1, "", "fill_cache_for_user_"], [171, 5, 1, "", "update_cache_for_token_"]], "ttnn.model_preprocessing": [[228, 3, 1, "", "preprocess_model"], [229, 3, 1, "", "preprocess_model_parameters"]], "ttnn.transformer": [[354, 5, 1, "", "attention_softmax"], [355, 5, 1, "", "attention_softmax_"], [356, 5, 1, "", "concatenate_heads"], [357, 5, 1, "", "scaled_dot_product_attention"], [358, 5, 1, "", "scaled_dot_product_attention_decode"], [359, 5, 1, "", "split_query_key_value_and_split_heads"]]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:attribute", "3": "py:function", "4": "py:method", "5": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"]}, "titleterms": {"welcom": 0, "tt": [0, 5, 6, 375, 377, 378, 380, 397], "nn": [0, 5, 6, 375, 377, 378, 380, 397], "document": [0, 378], "ttnn": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 383, 386, 389, 390, 392, 393, 394, 395], "model": [0, 4, 7, 375, 377, 378, 392, 393, 396], "resourc": 0, "indic": 0, "tabl": 0, "contribut": [1, 378], "develop": 1, "support": [2, 397], "report": [2, 7, 380], "bug": 2, "featur": 2, "propos": 2, "request": 2, "troubleshoot": 2, "debug": [2, 397], "tip": 2, "commun": 2, "perform": [3, 391], "prerequisit": [3, 4, 378], "run": [3, 4, 392, 395, 397], "perf": [3, 380], "file": 3, "all": [3, 378, 397], "get": [4, 377, 395], "start": [4, 377], "an": [4, 397], "exampl": [4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 350, 351, 352, 360, 361, 362, 363, 364, 368, 369, 370, 371, 372, 373, 374, 375, 378, 397], "what": [5, 6], "i": [5, 6], "ad": 6, "new": [6, 379], "oper": [6, 7, 375, 380, 384, 388, 390, 393, 394, 397], "faq": 6, "step": [6, 375, 378], "ar": [6, 378], "need": 6, "add": [6, 18, 388, 390], "c": [6, 397], "python": [6, 397], "devic": [6, 7, 378, 390, 391, 392, 397], "implement": [6, 392, 395], "1": [6, 375, 377, 378, 397], "2": [6, 375, 377, 378, 396, 397], "bind": 6, "option": [6, 378], "golden": 6, "function": [6, 379, 393, 397], "api": [7, 381], "memori": [7, 381], "config": [7, 381, 391], "core": 7, "tensor": [7, 381, 388, 390, 391, 397], "creation": 7, "matrix": [7, 391], "multipl": [7, 381, 391], "pointwis": 7, "unari": 7, "binari": 7, "ternari": 7, "loss": 7, "reduct": 7, "data": [7, 381, 390], "movement": 7, "normal": 7, "moreh": 7, "transform": [7, 354, 355, 356, 357, 358, 359], "ccl": 7, "embed": [7, 87], "convolut": 7, "pool": 7, "vision": 7, "kv": 7, "cach": [7, 391, 392, 397], "convers": 7, "hook": [7, 397], "conv2dconfig": 8, "conv2dsliceconfig": 9, "getdefaultdevic": 10, "setdefaultdevic": 11, "ab": 12, "abs_bw": 13, "aco": 14, "acos_bw": 15, "acosh": 16, "acosh_bw": 17, "add_bw": 19, "addalpha": 20, "addalpha_bw": 21, "addcdiv": 22, "addcdiv_bw": 23, "addcmul": 24, "addcmul_bw": 25, "all_gath": 26, "alt_complex_rotate90": 27, "angl": 28, "angle_bw": 29, "arang": 30, "argmax": 31, "as_tensor": 32, "asin": 33, "asin_bw": 34, "asinh": 35, "asinh_bw": 36, "assign_bw": 37, "atan": 38, "atan2": 39, "atan2_bw": 40, "atan_bw": 41, "atanh": 42, "atanh_bw": 43, "batch_norm": 44, "bias_gelu_bw": 45, "bitwise_and": 46, "bitwise_left_shift": 47, "bitwise_not": 48, "bitwise_or": 49, "bitwise_right_shift": 50, "bitwise_xor": 51, "cbrt": 52, "ceil": 53, "ceil_bw": 54, "celu": 55, "celu_bw": 56, "clamp": 57, "clamp_bw": 58, "clip": 59, "clip_bw": 60, "clone": [61, 378, 396], "close_devic": 62, "concat": 63, "concat_bw": 64, "conj": 65, "conj_bw": 66, "conv1d": 67, "conv2d": 68, "conv_transpose2d": 69, "co": 70, "cos_bw": 71, "cosh": 72, "cosh_bw": 73, "create_sharded_memory_config": 74, "dealloc": 75, "deg2rad": 76, "deg2rad_bw": 77, "digamma": 78, "digamma_bw": 79, "div": 80, "div_bw": 81, "div_no_nan": 82, "div_no_nan_bw": 83, "dump_tensor": 84, "elu": 85, "elu_bw": 86, "embedding_bw": 88, "empti": 89, "empty_lik": 90, "eq": 91, "eq_": 92, "eqz": 93, "erf": 94, "erf_bw": 95, "erfc": 96, "erfc_bw": 97, "erfinv": 98, "erfinv_bw": 99, "exp": 100, "exp2": 101, "exp2_bw": 102, "exp_bw": 103, "experiment": [104, 105, 106, 107, 108, 109, 110, 111], "all_reduc": 104, "conv3d": 105, "cumprod": 106, "cumsum": 107, "dropout": 108, "gelu_bw": [109, 137], "rotary_embed": 110, "sort": 111, "expm1": 112, "expm1_bw": 113, "fill": 114, "fill_bw": 115, "fill_ones_rm": 116, "fill_rm": 117, "fill_zero_bw": 118, "floor": 119, "floor_bw": 120, "floor_div": 121, "fmod": 122, "fmod_bw": 123, "format_input_tensor": 124, "format_output_tensor": 125, "frac": 126, "frac_bw": 127, "from_devic": 128, "from_torch": 129, "full": 130, "full_lik": 131, "gcd": 132, "ge": 133, "ge_": 134, "geglu": 135, "gelu": 136, "gez": 138, "global_avg_pool2d": 139, "glu": 140, "group_norm": 141, "gt": 142, "gt_": 143, "gtz": 144, "hardshrink": 145, "hardshrink_bw": 146, "hardsigmoid": 147, "hardsigmoid_bw": 148, "hardswish": 149, "hardswish_bw": 150, "hardtanh": 151, "hardtanh_bw": 152, "heavisid": 153, "hypot": 154, "hypot_bw": 155, "i0": 156, "i0_bw": 157, "ident": 158, "imag": [159, 378], "imag_bw": 160, "indexed_fil": 161, "is_imag": 162, "is_real": 163, "isclos": 164, "isfinit": 165, "isinf": 166, "isnan": 167, "isneginf": 168, "isposinf": 169, "kv_cach": [170, 171], "fill_cache_for_user_": 170, "update_cache_for_token_": 171, "l1_loss": 172, "layer_norm": 173, "lcm": 174, "ldexp": 175, "ldexp_bw": 176, "le": 177, "le_": 178, "leaky_relu": 179, "leaky_relu_bw": 180, "lerp": 181, "lerp_bw": 182, "lez": 183, "lgamma": 184, "lgamma_bw": 185, "linear": 186, "load_tensor": 187, "log": [188, 397], "log10": 189, "log10_bw": 190, "log1p": 191, "log1p_bw": 192, "log2": 193, "log2_bw": 194, "log_bw": 195, "log_sigmoid": 196, "log_sigmoid_bw": 197, "logaddexp": 198, "logaddexp2": 199, "logaddexp2_bw": 200, "logaddexp_bw": 201, "logical_and": 202, "logical_and_": 203, "logical_not": 204, "logical_not_": 205, "logical_or": 206, "logical_or_": 207, "logical_xor": 208, "logical_xor_": 209, "logit": 210, "logit_bw": 211, "logiteps_bw": 212, "lt": 213, "lt_": 214, "ltz": 215, "mac": 216, "manage_devic": 217, "matmul": [218, 384], "max": 219, "max_bw": 220, "max_pool2d": 221, "maximum": 222, "mean": 223, "min": 224, "min_bw": 225, "minimum": 226, "mish": 227, "model_preprocess": [228, 229], "preprocess_model": 228, "preprocess_model_paramet": 229, "moreh_sum": 230, "mse_loss": 231, "mul_bw": 232, "multigammaln": 233, "multigammaln_bw": 234, "multipli": [235, 391], "ne": 236, "ne_": 237, "neg": 238, "neg_bw": 239, "nextaft": 240, "nez": 241, "nonzero": 242, "normalize_glob": 243, "normalize_hw": 244, "ones": 245, "ones_lik": 246, "open_devic": 247, "outer": 248, "pad": 249, "pad_to_tile_shap": 250, "permut": 251, "polar": 252, "polar_bw": 253, "polygamma": 254, "polygamma_bw": 255, "polyv": 256, "pow": 257, "pow_bw": 258, "prelu": 259, "prepare_conv_bia": 260, "prepare_conv_transpose2d_bia": 261, "prepare_conv_transpose2d_weight": 262, "prepare_conv_weight": 263, "prod": 264, "prod_bw": 265, "rad2deg": 266, "rad2deg_bw": 267, "rdiv": 268, "rdiv_bw": 269, "real": 270, "real_bw": 271, "realloc": 272, "reciproc": 273, "reciprocal_bw": 274, "reduce_scatt": 275, "register_post_operation_hook": 276, "register_pre_operation_hook": 277, "reglu": 278, "relu": 279, "relu6": 280, "relu6_bw": 281, "relu_bw": 282, "relu_max": 283, "relu_min": 284, "remaind": 285, "remainder_bw": 286, "repeat": 287, "repeat_bw": 288, "repeat_interleav": 289, "reshap": 290, "rms_norm": 291, "round": 292, "round_bw": 293, "rpow": 294, "rpow_bw": 295, "rsqrt": 296, "rsqrt_bw": 297, "rsub": 298, "rsub_bw": 299, "scatter": 300, "selu": 301, "selu_bw": 302, "set_printopt": 303, "sigmoid": 304, "sigmoid_accur": 305, "sigmoid_bw": 306, "sign": 307, "sign_bw": 308, "signbit": 309, "silu": 310, "silu_bw": 311, "sin": 312, "sin_bw": 313, "sinh": 314, "sinh_bw": 315, "slice": [316, 397], "softmax": 317, "softplu": 318, "softplus_bw": 319, "softshrink": 320, "softshrink_bw": 321, "softsign": 322, "softsign_bw": 323, "sqrt": 324, "sqrt_bw": 325, "squar": 326, "square_bw": 327, "squared_differ": 328, "squared_difference_bw": 329, "std": 330, "sub_bw": 331, "subalpha": 332, "subalpha_bw": 333, "subtract": 334, "sum": 335, "swiglu": 336, "swish": 337, "synchronize_devic": 338, "tan": 339, "tan_bw": 340, "tanh": 341, "tanh_bw": 342, "tanhshrink": 343, "tanhshrink_bw": 344, "threshold": 345, "threshold_bw": 346, "tiliz": 347, "tilize_with_val_pad": 348, "to_devic": 349, "to_layout": 350, "to_memory_config": 351, "to_torch": 352, "topk": 353, "attention_softmax": 354, "attention_softmax_": 355, "concatenate_head": 356, "scaled_dot_product_attent": 357, "scaled_dot_product_attention_decod": 358, "split_query_key_value_and_split_head": 359, "tril": 360, "triu": 361, "trunc": 362, "trunc_bw": 363, "unary_chain": 364, "until": 365, "untilize_with_unpad": 366, "upsampl": 367, "var": 368, "where": [369, 377], "where_bw": 370, "xlogi": 371, "xlogy_bw": 372, "zero": 373, "zeros_lik": 374, "convert": [375, 390, 392, 397], "pytorch": [375, 396], "rewrit": 375, "switch": 375, "3": [375, 377, 378, 397], "optim": [375, 377, 392], "more": [375, 391], "build": [376, 377, 378, 396], "uplift": 376, "demo": [376, 377], "instal": [377, 378], "explor": 377, "our": 377, "tutori": [377, 382], "multi": [377, 378, 385, 392], "head": [377, 385, 392], "attent": [377, 385, 392], "simpl": 377, "4": [377, 397], "To": [377, 378], "go": 377, "from": [377, 378, 395, 396, 397], "here": 377, "set": 378, "up": 378, "hardwar": 378, "driver": 378, "firmwar": 378, "system": 378, "level": 378, "depend": 378, "kmd": 378, "updat": 378, "flash": 378, "manag": 378, "interfac": 378, "smi": 378, "card": 378, "configur": [378, 391, 392], "topologi": 378, "metalium": 378, "There": 378, "three": 378, "sourc": 378, "repositori": 378, "librari": [378, 396], "crate": 378, "virtual": 378, "environ": 378, "docker": 378, "releas": 378, "wheel": 378, "download": [378, 396], "latest": 378, "For": 378, "user": 378, "onli": 378, "you": 378, "verifi": 378, "your": 378, "try": 378, "execut": 378, "program": [378, 391, 392, 397], "interest": 378, "onboard": 379, "profil": [380, 386, 394], "header": 380, "profile_thi": 380, "descript": 380, "shape": 381, "layout": [381, 390, 391], "type": [381, 390], "requir": 381, "width": 381, "limit": 381, "bfloat8_b": 381, "storag": [381, 390], "shard": 381, "graph": [383, 395, 396, 397], "torch": [383, 390, 391, 392, 393, 395, 397], "dit_xl_2": 383, "With": 383, "resnet": [387, 395], "basic": [387, 397], "block": [387, 395], "tracer": 389, "creat": [390, 395], "host": 390, "borrow": 390, "v": 390, "own": 390, "open": 390, "initi": [390, 391, 392], "b": [390, 391], "random": [390, 391], "valu": [390, 391], "us": [390, 391, 392, 393, 397], "inspect": [390, 391], "output": [390, 391, 392], "attribut": 390, "close": [390, 391, 392], "enabl": [391, 392, 397], "result": 391, "write": 392, "activ": 392, "weight": 392, "first": 392, "iter": 392, "subsequ": 392, "version": [392, 395], "pre": [392, 396, 397], "process": 392, "paramet": [392, 395], "check": 392, "match": 392, "origin": 392, "trace": [393, 395, 397], "modul": [393, 395], "written": 393, "torchvis": 395, "preprocess": 395, "displai": [395, 396], "pass": 395, "constructor": 395, "base": 396, "http": 396, "github": 396, "com": 396, "facebookresearch": 396, "dit": 396, "git": 396, "xl": 396, "sampl": 396, "train": 396, "__getitem__": 397, "5": 397, "intermedi": 397, "6": 397, "7": 397, "tt_lib": 397, "8": 397, "9": 397, "10": 397, "chang": 397, "string": 397, "represent": 397, "11": 397, "visual": 397, "web": 397, "browser": 397, "12": 397, "regist": 397, "post": 397, "13": 397, "queri": 397, "14": 397, "fall": 397, "back": 397, "15": 397, "captur": 397, "buffer": 397, "alloc": 397, "etc": 397}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Welcome to TT-NN documentation!": [[0, "welcome-to-tt-nn-documentation"]], "TTNN": [[0, null]], "Models": [[0, null]], "Resources": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Contributing as a developer": [[1, "contributing-as-a-developer"]], "Support": [[2, "support"]], "Reporting bugs, feature proposals, or support requests": [[2, "reporting-bugs-feature-proposals-or-support-requests"]], "Troubleshooting and debugging tips": [[2, "troubleshooting-and-debugging-tips"]], "Community": [[2, "community"]], "Performance": [[3, "performance"]], "Prerequisites": [[3, "prerequisites"], [4, "prerequisites"]], "Running a perf file": [[3, "running-a-perf-file"]], "Running all the perf files": [[3, "running-all-the-perf-files"]], "Getting Started": [[4, "getting-started"], [377, "getting-started"]], "Running an example model": [[4, "running-an-example-model"]], "What is TT-NN?": [[5, "what-is-tt-nn"]], "Adding New TT-NN Operation": [[6, "adding-new-tt-nn-operation"]], "FAQ": [[6, "faq"]], "What is a TT-NN operation?": [[6, "what-is-a-tt-nn-operation"]], "What steps are needed to add TT-NN operation in C++?": [[6, "what-steps-are-needed-to-add-tt-nn-operation-in-c"]], "What steps are needed to add TT-NN operation in Python?": [[6, "what-steps-are-needed-to-add-tt-nn-operation-in-python"]], "Example of Adding a new Device Operation": [[6, "example-of-adding-a-new-device-operation"]], "C++ Implementation": [[6, "c-implementation"]], "Step 1: Implement device operation": [[6, "step-1-implement-device-operation"]], "Step 2: Implement the operation in C++": [[6, "step-2-implement-the-operation-in-c"]], "Python Implementation": [[6, "python-implementation"]], "Step 1: Add Python binding": [[6, "step-1-add-python-binding"]], "Step 2: (Optional) Add golden function for the operation in Python": [[6, "step-2-optional-add-golden-function-for-the-operation-in-python"]], "APIs": [[7, "apis"], [381, "apis"]], "Device": [[7, "device"]], "Memory Config": [[7, "memory-config"], [381, "memory-config"]], "Operations": [[7, "operations"]], "Core": [[7, "core"]], "Tensor Creation": [[7, "tensor-creation"]], "Matrix Multiplication": [[7, "matrix-multiplication"], [391, "Matrix-Multiplication"]], "Pointwise Unary": [[7, "pointwise-unary"]], "Pointwise Binary": [[7, "pointwise-binary"]], "Pointwise Ternary": [[7, "pointwise-ternary"]], "Losses": [[7, "losses"]], "Reduction": [[7, "reduction"]], "Data Movement": [[7, "data-movement"]], "Normalization": [[7, "normalization"]], "Moreh Operations": [[7, "moreh-operations"]], "Transformer": [[7, "transformer"]], "CCL": [[7, "ccl"]], "Embedding": [[7, "embedding"]], "Convolution": [[7, "convolution"]], "Pooling": [[7, "pooling"]], "Vision": [[7, "vision"]], "KV Cache": [[7, "kv-cache"]], "Model Conversion": [[7, "model-conversion"]], "Reports": [[7, "reports"]], "Operation Hooks": [[7, "operation-hooks"]], "ttnn.Conv2dConfig": [[8, "ttnn-conv2dconfig"]], "ttnn.Conv2dSliceConfig": [[9, "ttnn-conv2dsliceconfig"]], "ttnn.GetDefaultDevice": [[10, "ttnn-getdefaultdevice"]], "Example": [[10, null], [11, null], [12, null], [13, null], [14, null], [15, null], [16, null], [17, null], [18, null], [19, null], [20, null], [21, null], [22, null], [23, null], [24, null], [25, null], [26, null], [27, null], [28, null], [29, null], [30, null], [33, null], [34, null], [35, null], [36, null], [37, null], [38, null], [39, null], [40, null], [41, null], [42, null], [43, null], [44, null], [45, null], [46, null], [47, null], [48, null], [49, null], [50, null], [51, null], [52, null], [53, null], [54, null], [55, null], [56, null], [57, null], [58, null], [59, null], [60, null], [62, null], [63, null], [64, null], [65, null], [66, null], [70, null], [71, null], [72, null], [73, null], [74, null], [75, null], [76, null], [77, null], [78, null], [79, null], [80, null], [81, null], [82, null], [83, null], [84, null], [85, null], [86, null], [87, null], [88, null], [89, null], [90, null], [91, null], [92, null], [93, null], [94, null], [95, null], [96, null], [97, null], [98, null], [99, null], [100, null], [101, null], [102, null], [103, null], [104, null], [106, null], [108, null], [109, null], [112, null], [113, null], [114, null], [115, null], [118, null], [119, null], [120, null], [121, null], [122, null], [123, null], [124, null], [125, null], [126, null], [127, null], [129, null], [130, null], [131, null], [132, null], [133, null], [134, null], [135, null], [136, null], [137, null], [138, null], [139, null], [140, null], [142, null], [143, null], [144, null], [145, null], [146, null], [147, null], [148, null], [149, null], [150, null], [151, null], [152, null], [153, null], [154, null], [155, null], [156, null], [157, null], [158, null], [159, null], [160, null], [161, null], [162, null], [163, null], [164, null], [165, null], [166, null], [167, null], [168, null], [169, null], [172, null], [174, null], [175, null], [176, null], [177, null], [178, null], [179, null], [180, null], [181, null], [182, null], [183, null], [184, null], [185, null], [186, null], [187, null], [188, null], [189, null], [190, null], [191, null], [192, null], [193, null], [194, null], [195, null], [196, null], [197, null], [198, null], [199, null], [200, null], [201, null], [202, null], [203, null], [204, null], [205, null], [206, null], [207, null], [208, null], [209, null], [210, null], [211, null], [212, null], [213, null], [214, null], [215, null], [216, null], [217, null], [218, null], [219, null], [220, null], [221, null], [222, null], [223, null], [224, null], [225, null], [226, null], [227, null], [231, null], [232, null], [233, null], [234, null], [235, null], [236, null], [237, null], [238, null], [239, null], [240, null], [241, null], [242, null], [243, null], [244, null], [245, null], [246, null], [247, null], [248, null], [249, null], [250, null], [252, null], [253, null], [254, null], [255, null], [256, null], [257, null], [258, null], [259, null], [265, null], [266, null], [267, null], [268, null], [269, null], [270, null], [271, null], [272, null], [273, null], [274, null], [275, null], [278, null], [279, null], [280, null], [281, null], [282, null], [283, null], [284, null], [285, null], [286, null], [287, null], [288, null], [290, null], [292, null], [293, null], [294, null], [295, null], [296, null], [297, null], [298, null], [299, null], [300, null], [301, null], [302, null], [304, null], [305, null], [306, null], [307, null], [308, null], [309, null], [310, null], [311, null], [312, null], [313, null], [314, null], [315, null], [316, null], [317, null], [318, null], [319, null], [320, null], [321, null], [322, null], [323, null], [324, null], [325, null], [326, null], [327, null], [328, null], [329, null], [330, null], [331, null], [332, null], [333, null], [334, null], [335, null], [336, null], [337, null], [339, null], [340, null], [341, null], [342, null], [343, null], [344, null], [345, null], [346, null], [350, null], [351, null], [352, null], [360, null], [361, null], [362, null], [363, null], [364, null], [368, null], [369, null], [370, null], [371, null], [372, null], [373, null], [374, null]], "ttnn.SetDefaultDevice": [[11, "ttnn-setdefaultdevice"]], "ttnn.abs": [[12, "ttnn-abs"]], "ttnn.abs_bw": [[13, "ttnn-abs-bw"]], "ttnn.acos": [[14, "ttnn-acos"]], "ttnn.acos_bw": [[15, "ttnn-acos-bw"]], "ttnn.acosh": [[16, "ttnn-acosh"]], "ttnn.acosh_bw": [[17, "ttnn-acosh-bw"]], "ttnn.add": [[18, "ttnn-add"]], "ttnn.add_bw": [[19, "ttnn-add-bw"]], "ttnn.addalpha": [[20, "ttnn-addalpha"]], "ttnn.addalpha_bw": [[21, "ttnn-addalpha-bw"]], "ttnn.addcdiv": [[22, "ttnn-addcdiv"]], "ttnn.addcdiv_bw": [[23, "ttnn-addcdiv-bw"]], "ttnn.addcmul": [[24, "ttnn-addcmul"]], "ttnn.addcmul_bw": [[25, "ttnn-addcmul-bw"]], "ttnn.all_gather": [[26, "ttnn-all-gather"]], "ttnn.alt_complex_rotate90": [[27, "ttnn-alt-complex-rotate90"]], "ttnn.angle": [[28, "ttnn-angle"]], "ttnn.angle_bw": [[29, "ttnn-angle-bw"]], "ttnn.arange": [[30, "ttnn-arange"]], "ttnn.argmax": [[31, "ttnn-argmax"]], "ttnn.as_tensor": [[32, "ttnn-as-tensor"]], "Examples": [[32, null], [303, null]], "ttnn.asin": [[33, "ttnn-asin"]], "ttnn.asin_bw": [[34, "ttnn-asin-bw"]], "ttnn.asinh": [[35, "ttnn-asinh"]], "ttnn.asinh_bw": [[36, "ttnn-asinh-bw"]], "ttnn.assign_bw": [[37, "ttnn-assign-bw"]], "ttnn.atan": [[38, "ttnn-atan"]], "ttnn.atan2": [[39, "ttnn-atan2"]], "ttnn.atan2_bw": [[40, "ttnn-atan2-bw"]], "ttnn.atan_bw": [[41, "ttnn-atan-bw"]], "ttnn.atanh": [[42, "ttnn-atanh"]], "ttnn.atanh_bw": [[43, "ttnn-atanh-bw"]], "ttnn.batch_norm": [[44, "ttnn-batch-norm"]], "ttnn.bias_gelu_bw": [[45, "ttnn-bias-gelu-bw"]], "ttnn.bitwise_and": [[46, "ttnn-bitwise-and"]], "ttnn.bitwise_left_shift": [[47, "ttnn-bitwise-left-shift"]], "ttnn.bitwise_not": [[48, "ttnn-bitwise-not"]], "ttnn.bitwise_or": [[49, "ttnn-bitwise-or"]], "ttnn.bitwise_right_shift": [[50, "ttnn-bitwise-right-shift"]], "ttnn.bitwise_xor": [[51, "ttnn-bitwise-xor"]], "ttnn.cbrt": [[52, "ttnn-cbrt"]], "ttnn.ceil": [[53, "ttnn-ceil"]], "ttnn.ceil_bw": [[54, "ttnn-ceil-bw"]], "ttnn.celu": [[55, "ttnn-celu"]], "ttnn.celu_bw": [[56, "ttnn-celu-bw"]], "ttnn.clamp": [[57, "ttnn-clamp"]], "ttnn.clamp_bw": [[58, "ttnn-clamp-bw"]], "ttnn.clip": [[59, "ttnn-clip"]], "ttnn.clip_bw": [[60, "ttnn-clip-bw"]], "ttnn.clone": [[61, "ttnn-clone"]], "ttnn.close_device": [[62, "ttnn-close-device"]], "ttnn.concat": [[63, "ttnn-concat"]], "ttnn.concat_bw": [[64, "ttnn-concat-bw"]], "ttnn.conj": [[65, "ttnn-conj"]], "ttnn.conj_bw": [[66, "ttnn-conj-bw"]], "ttnn.conv1d": [[67, "ttnn-conv1d"]], "ttnn.conv2d": [[68, "ttnn-conv2d"]], "ttnn.conv_transpose2d": [[69, "ttnn-conv-transpose2d"]], "ttnn.cos": [[70, "ttnn-cos"]], "ttnn.cos_bw": [[71, "ttnn-cos-bw"]], "ttnn.cosh": [[72, "ttnn-cosh"]], "ttnn.cosh_bw": [[73, "ttnn-cosh-bw"]], "ttnn.create_sharded_memory_config": [[74, "ttnn-create-sharded-memory-config"]], "ttnn.deallocate": [[75, "ttnn-deallocate"]], "ttnn.deg2rad": [[76, "ttnn-deg2rad"]], "ttnn.deg2rad_bw": [[77, "ttnn-deg2rad-bw"]], "ttnn.digamma": [[78, "ttnn-digamma"]], "ttnn.digamma_bw": [[79, "ttnn-digamma-bw"]], "ttnn.div": [[80, "ttnn-div"]], "ttnn.div_bw": [[81, "ttnn-div-bw"]], "ttnn.div_no_nan": [[82, "ttnn-div-no-nan"]], "ttnn.div_no_nan_bw": [[83, "ttnn-div-no-nan-bw"]], "ttnn.dump_tensor": [[84, "ttnn-dump-tensor"]], "ttnn.elu": [[85, "ttnn-elu"]], "ttnn.elu_bw": [[86, "ttnn-elu-bw"]], "ttnn.embedding": [[87, "ttnn-embedding"]], "ttnn.embedding_bw": [[88, "ttnn-embedding-bw"]], "ttnn.empty": [[89, "ttnn-empty"]], "ttnn.empty_like": [[90, "ttnn-empty-like"]], "ttnn.eq": [[91, "ttnn-eq"]], "ttnn.eq_": [[92, "ttnn-eq"]], "ttnn.eqz": [[93, "ttnn-eqz"]], "ttnn.erf": [[94, "ttnn-erf"]], "ttnn.erf_bw": [[95, "ttnn-erf-bw"]], "ttnn.erfc": [[96, "ttnn-erfc"]], "ttnn.erfc_bw": [[97, "ttnn-erfc-bw"]], "ttnn.erfinv": [[98, "ttnn-erfinv"]], "ttnn.erfinv_bw": [[99, "ttnn-erfinv-bw"]], "ttnn.exp": [[100, "ttnn-exp"]], "ttnn.exp2": [[101, "ttnn-exp2"]], "ttnn.exp2_bw": [[102, "ttnn-exp2-bw"]], "ttnn.exp_bw": [[103, "ttnn-exp-bw"]], "ttnn.experimental.all_reduce": [[104, "ttnn-experimental-all-reduce"]], "ttnn.experimental.conv3d": [[105, "ttnn-experimental-conv3d"]], "ttnn.experimental.cumprod": [[106, "ttnn-experimental-cumprod"]], "ttnn.experimental.cumsum": [[107, "ttnn-experimental-cumsum"]], "ttnn.experimental.dropout": [[108, "ttnn-experimental-dropout"]], "ttnn.experimental.gelu_bw": [[109, "ttnn-experimental-gelu-bw"]], "ttnn.experimental.rotary_embedding": [[110, "ttnn-experimental-rotary-embedding"]], "ttnn.experimental.sort": [[111, "ttnn-experimental-sort"]], "ttnn.expm1": [[112, "ttnn-expm1"]], "ttnn.expm1_bw": [[113, "ttnn-expm1-bw"]], "ttnn.fill": [[114, "ttnn-fill"]], "ttnn.fill_bw": [[115, "ttnn-fill-bw"]], "ttnn.fill_ones_rm": [[116, "ttnn-fill-ones-rm"]], "ttnn.fill_rm": [[117, "ttnn-fill-rm"]], "ttnn.fill_zero_bw": [[118, "ttnn-fill-zero-bw"]], "ttnn.floor": [[119, "ttnn-floor"]], "ttnn.floor_bw": [[120, "ttnn-floor-bw"]], "ttnn.floor_div": [[121, "ttnn-floor-div"]], "ttnn.fmod": [[122, "ttnn-fmod"]], "ttnn.fmod_bw": [[123, "ttnn-fmod-bw"]], "ttnn.format_input_tensor": [[124, "ttnn-format-input-tensor"]], "ttnn.format_output_tensor": [[125, "ttnn-format-output-tensor"]], "ttnn.frac": [[126, "ttnn-frac"]], "ttnn.frac_bw": [[127, "ttnn-frac-bw"]], "ttnn.from_device": [[128, "ttnn-from-device"]], "ttnn.from_torch": [[129, "ttnn-from-torch"]], "ttnn.full": [[130, "ttnn-full"]], "ttnn.full_like": [[131, "ttnn-full-like"]], "ttnn.gcd": [[132, "ttnn-gcd"]], "ttnn.ge": [[133, "ttnn-ge"]], "ttnn.ge_": [[134, "ttnn-ge"]], "ttnn.geglu": [[135, "ttnn-geglu"]], "ttnn.gelu": [[136, "ttnn-gelu"]], "ttnn.gelu_bw": [[137, "ttnn-gelu-bw"]], "ttnn.gez": [[138, "ttnn-gez"]], "ttnn.global_avg_pool2d": [[139, "ttnn-global-avg-pool2d"]], "ttnn.glu": [[140, "ttnn-glu"]], "ttnn.group_norm": [[141, "ttnn-group-norm"]], "ttnn.gt": [[142, "ttnn-gt"]], "ttnn.gt_": [[143, "ttnn-gt"]], "ttnn.gtz": [[144, "ttnn-gtz"]], "ttnn.hardshrink": [[145, "ttnn-hardshrink"]], "ttnn.hardshrink_bw": [[146, "ttnn-hardshrink-bw"]], "ttnn.hardsigmoid": [[147, "ttnn-hardsigmoid"]], "ttnn.hardsigmoid_bw": [[148, "ttnn-hardsigmoid-bw"]], "ttnn.hardswish": [[149, "ttnn-hardswish"]], "ttnn.hardswish_bw": [[150, "ttnn-hardswish-bw"]], "ttnn.hardtanh": [[151, "ttnn-hardtanh"]], "ttnn.hardtanh_bw": [[152, "ttnn-hardtanh-bw"]], "ttnn.heaviside": [[153, "ttnn-heaviside"]], "ttnn.hypot": [[154, "ttnn-hypot"]], "ttnn.hypot_bw": [[155, "ttnn-hypot-bw"]], "ttnn.i0": [[156, "ttnn-i0"]], "ttnn.i0_bw": [[157, "ttnn-i0-bw"]], "ttnn.identity": [[158, "ttnn-identity"]], "ttnn.imag": [[159, "ttnn-imag"]], "ttnn.imag_bw": [[160, "ttnn-imag-bw"]], "ttnn.indexed_fill": [[161, "ttnn-indexed-fill"]], "ttnn.is_imag": [[162, "ttnn-is-imag"]], "ttnn.is_real": [[163, "ttnn-is-real"]], "ttnn.isclose": [[164, "ttnn-isclose"]], "ttnn.isfinite": [[165, "ttnn-isfinite"]], "ttnn.isinf": [[166, "ttnn-isinf"]], "ttnn.isnan": [[167, "ttnn-isnan"]], "ttnn.isneginf": [[168, "ttnn-isneginf"]], "ttnn.isposinf": [[169, "ttnn-isposinf"]], "ttnn.kv_cache.fill_cache_for_user_": [[170, "ttnn-kv-cache-fill-cache-for-user"]], "ttnn.kv_cache.update_cache_for_token_": [[171, "ttnn-kv-cache-update-cache-for-token"]], "ttnn.l1_loss": [[172, "ttnn-l1-loss"]], "ttnn.layer_norm": [[173, "ttnn-layer-norm"]], "ttnn.lcm": [[174, "ttnn-lcm"]], "ttnn.ldexp": [[175, "ttnn-ldexp"]], "ttnn.ldexp_bw": [[176, "ttnn-ldexp-bw"]], "ttnn.le": [[177, "ttnn-le"]], "ttnn.le_": [[178, "ttnn-le"]], "ttnn.leaky_relu": [[179, "ttnn-leaky-relu"]], "ttnn.leaky_relu_bw": [[180, "ttnn-leaky-relu-bw"]], "ttnn.lerp": [[181, "ttnn-lerp"]], "ttnn.lerp_bw": [[182, "ttnn-lerp-bw"]], "ttnn.lez": [[183, "ttnn-lez"]], "ttnn.lgamma": [[184, "ttnn-lgamma"]], "ttnn.lgamma_bw": [[185, "ttnn-lgamma-bw"]], "ttnn.linear": [[186, "ttnn-linear"]], "ttnn.load_tensor": [[187, "ttnn-load-tensor"]], "ttnn.log": [[188, "ttnn-log"]], "ttnn.log10": [[189, "ttnn-log10"]], "ttnn.log10_bw": [[190, "ttnn-log10-bw"]], "ttnn.log1p": [[191, "ttnn-log1p"]], "ttnn.log1p_bw": [[192, "ttnn-log1p-bw"]], "ttnn.log2": [[193, "ttnn-log2"]], "ttnn.log2_bw": [[194, "ttnn-log2-bw"]], "ttnn.log_bw": [[195, "ttnn-log-bw"]], "ttnn.log_sigmoid": [[196, "ttnn-log-sigmoid"]], "ttnn.log_sigmoid_bw": [[197, "ttnn-log-sigmoid-bw"]], "ttnn.logaddexp": [[198, "ttnn-logaddexp"]], "ttnn.logaddexp2": [[199, "ttnn-logaddexp2"]], "ttnn.logaddexp2_bw": [[200, "ttnn-logaddexp2-bw"]], "ttnn.logaddexp_bw": [[201, "ttnn-logaddexp-bw"]], "ttnn.logical_and": [[202, "ttnn-logical-and"]], "ttnn.logical_and_": [[203, "ttnn-logical-and"]], "ttnn.logical_not": [[204, "ttnn-logical-not"]], "ttnn.logical_not_": [[205, "ttnn-logical-not"]], "ttnn.logical_or": [[206, "ttnn-logical-or"]], "ttnn.logical_or_": [[207, "ttnn-logical-or"]], "ttnn.logical_xor": [[208, "ttnn-logical-xor"]], "ttnn.logical_xor_": [[209, "ttnn-logical-xor"]], "ttnn.logit": [[210, "ttnn-logit"]], "ttnn.logit_bw": [[211, "ttnn-logit-bw"]], "ttnn.logiteps_bw": [[212, "ttnn-logiteps-bw"]], "ttnn.lt": [[213, "ttnn-lt"]], "ttnn.lt_": [[214, "ttnn-lt"]], "ttnn.ltz": [[215, "ttnn-ltz"]], "ttnn.mac": [[216, "ttnn-mac"]], "ttnn.manage_device": [[217, "ttnn-manage-device"]], "ttnn.matmul": [[218, "ttnn-matmul"]], "ttnn.max": [[219, "ttnn-max"]], "ttnn.max_bw": [[220, "ttnn-max-bw"]], "ttnn.max_pool2d": [[221, "ttnn-max-pool2d"]], "ttnn.maximum": [[222, "ttnn-maximum"]], "ttnn.mean": [[223, "ttnn-mean"]], "ttnn.min": [[224, "ttnn-min"]], "ttnn.min_bw": [[225, "ttnn-min-bw"]], "ttnn.minimum": [[226, "ttnn-minimum"]], "ttnn.mish": [[227, "ttnn-mish"]], "ttnn.model_preprocessing.preprocess_model": [[228, "ttnn-model-preprocessing-preprocess-model"]], "ttnn.model_preprocessing.preprocess_model_parameters": [[229, "ttnn-model-preprocessing-preprocess-model-parameters"]], "ttnn.moreh_sum": [[230, "ttnn-moreh-sum"]], "ttnn.mse_loss": [[231, "ttnn-mse-loss"]], "ttnn.mul_bw": [[232, "ttnn-mul-bw"]], "ttnn.multigammaln": [[233, "ttnn-multigammaln"]], "ttnn.multigammaln_bw": [[234, "ttnn-multigammaln-bw"]], "ttnn.multiply": [[235, "ttnn-multiply"]], "ttnn.ne": [[236, "ttnn-ne"]], "ttnn.ne_": [[237, "ttnn-ne"]], "ttnn.neg": [[238, "ttnn-neg"]], "ttnn.neg_bw": [[239, "ttnn-neg-bw"]], "ttnn.nextafter": [[240, "ttnn-nextafter"]], "ttnn.nez": [[241, "ttnn-nez"]], "ttnn.nonzero": [[242, "ttnn-nonzero"]], "ttnn.normalize_global": [[243, "ttnn-normalize-global"]], "ttnn.normalize_hw": [[244, "ttnn-normalize-hw"]], "ttnn.ones": [[245, "ttnn-ones"]], "ttnn.ones_like": [[246, "ttnn-ones-like"]], "ttnn.open_device": [[247, "ttnn-open-device"]], "ttnn.outer": [[248, "ttnn-outer"]], "ttnn.pad": [[249, "ttnn-pad"]], "ttnn.pad_to_tile_shape": [[250, "ttnn-pad-to-tile-shape"]], "ttnn.permute": [[251, "ttnn-permute"]], "ttnn.polar": [[252, "ttnn-polar"]], "ttnn.polar_bw": [[253, "ttnn-polar-bw"]], "ttnn.polygamma": [[254, "ttnn-polygamma"]], "ttnn.polygamma_bw": [[255, "ttnn-polygamma-bw"]], "ttnn.polyval": [[256, "ttnn-polyval"]], "ttnn.pow": [[257, "ttnn-pow"]], "ttnn.pow_bw": [[258, "ttnn-pow-bw"]], "ttnn.prelu": [[259, "ttnn-prelu"]], "ttnn.prepare_conv_bias": [[260, "ttnn-prepare-conv-bias"]], "ttnn.prepare_conv_transpose2d_bias": [[261, "ttnn-prepare-conv-transpose2d-bias"]], "ttnn.prepare_conv_transpose2d_weights": [[262, "ttnn-prepare-conv-transpose2d-weights"]], "ttnn.prepare_conv_weights": [[263, "ttnn-prepare-conv-weights"]], "ttnn.prod": [[264, "ttnn-prod"]], "ttnn.prod_bw": [[265, "ttnn-prod-bw"]], "ttnn.rad2deg": [[266, "ttnn-rad2deg"]], "ttnn.rad2deg_bw": [[267, "ttnn-rad2deg-bw"]], "ttnn.rdiv": [[268, "ttnn-rdiv"]], "ttnn.rdiv_bw": [[269, "ttnn-rdiv-bw"]], "ttnn.real": [[270, "ttnn-real"]], "ttnn.real_bw": [[271, "ttnn-real-bw"]], "ttnn.reallocate": [[272, "ttnn-reallocate"]], "ttnn.reciprocal": [[273, "ttnn-reciprocal"]], "ttnn.reciprocal_bw": [[274, "ttnn-reciprocal-bw"]], "ttnn.reduce_scatter": [[275, "ttnn-reduce-scatter"]], "ttnn.register_post_operation_hook": [[276, "ttnn-register-post-operation-hook"]], "ttnn.register_pre_operation_hook": [[277, "ttnn-register-pre-operation-hook"]], "ttnn.reglu": [[278, "ttnn-reglu"]], "ttnn.relu": [[279, "ttnn-relu"]], "ttnn.relu6": [[280, "ttnn-relu6"]], "ttnn.relu6_bw": [[281, "ttnn-relu6-bw"]], "ttnn.relu_bw": [[282, "ttnn-relu-bw"]], "ttnn.relu_max": [[283, "ttnn-relu-max"]], "ttnn.relu_min": [[284, "ttnn-relu-min"]], "ttnn.remainder": [[285, "ttnn-remainder"]], "ttnn.remainder_bw": [[286, "ttnn-remainder-bw"]], "ttnn.repeat": [[287, "ttnn-repeat"]], "ttnn.repeat_bw": [[288, "ttnn-repeat-bw"]], "ttnn.repeat_interleave": [[289, "ttnn-repeat-interleave"]], "ttnn.reshape": [[290, "ttnn-reshape"]], "ttnn.rms_norm": [[291, "ttnn-rms-norm"]], "ttnn.round": [[292, "ttnn-round"]], "ttnn.round_bw": [[293, "ttnn-round-bw"]], "ttnn.rpow": [[294, "ttnn-rpow"]], "ttnn.rpow_bw": [[295, "ttnn-rpow-bw"]], "ttnn.rsqrt": [[296, "ttnn-rsqrt"]], "ttnn.rsqrt_bw": [[297, "ttnn-rsqrt-bw"]], "ttnn.rsub": [[298, "ttnn-rsub"]], "ttnn.rsub_bw": [[299, "ttnn-rsub-bw"]], "ttnn.scatter": [[300, "ttnn-scatter"]], "ttnn.selu": [[301, "ttnn-selu"]], "ttnn.selu_bw": [[302, "ttnn-selu-bw"]], "ttnn.set_printoptions": [[303, "ttnn-set-printoptions"]], "ttnn.sigmoid": [[304, "ttnn-sigmoid"]], "ttnn.sigmoid_accurate": [[305, "ttnn-sigmoid-accurate"]], "ttnn.sigmoid_bw": [[306, "ttnn-sigmoid-bw"]], "ttnn.sign": [[307, "ttnn-sign"]], "ttnn.sign_bw": [[308, "ttnn-sign-bw"]], "ttnn.signbit": [[309, "ttnn-signbit"]], "ttnn.silu": [[310, "ttnn-silu"]], "ttnn.silu_bw": [[311, "ttnn-silu-bw"]], "ttnn.sin": [[312, "ttnn-sin"]], "ttnn.sin_bw": [[313, "ttnn-sin-bw"]], "ttnn.sinh": [[314, "ttnn-sinh"]], "ttnn.sinh_bw": [[315, "ttnn-sinh-bw"]], "ttnn.slice": [[316, "ttnn-slice"]], "ttnn.softmax": [[317, "ttnn-softmax"]], "ttnn.softplus": [[318, "ttnn-softplus"]], "ttnn.softplus_bw": [[319, "ttnn-softplus-bw"]], "ttnn.softshrink": [[320, "ttnn-softshrink"]], "ttnn.softshrink_bw": [[321, "ttnn-softshrink-bw"]], "ttnn.softsign": [[322, "ttnn-softsign"]], "ttnn.softsign_bw": [[323, "ttnn-softsign-bw"]], "ttnn.sqrt": [[324, "ttnn-sqrt"]], "ttnn.sqrt_bw": [[325, "ttnn-sqrt-bw"]], "ttnn.square": [[326, "ttnn-square"]], "ttnn.square_bw": [[327, "ttnn-square-bw"]], "ttnn.squared_difference": [[328, "ttnn-squared-difference"]], "ttnn.squared_difference_bw": [[329, "ttnn-squared-difference-bw"]], "ttnn.std": [[330, "ttnn-std"]], "ttnn.sub_bw": [[331, "ttnn-sub-bw"]], "ttnn.subalpha": [[332, "ttnn-subalpha"]], "ttnn.subalpha_bw": [[333, "ttnn-subalpha-bw"]], "ttnn.subtract": [[334, "ttnn-subtract"]], "ttnn.sum": [[335, "ttnn-sum"]], "ttnn.swiglu": [[336, "ttnn-swiglu"]], "ttnn.swish": [[337, "ttnn-swish"]], "ttnn.synchronize_device": [[338, "ttnn-synchronize-device"]], "ttnn.tan": [[339, "ttnn-tan"]], "ttnn.tan_bw": [[340, "ttnn-tan-bw"]], "ttnn.tanh": [[341, "ttnn-tanh"]], "ttnn.tanh_bw": [[342, "ttnn-tanh-bw"]], "ttnn.tanhshrink": [[343, "ttnn-tanhshrink"]], "ttnn.tanhshrink_bw": [[344, "ttnn-tanhshrink-bw"]], "ttnn.threshold": [[345, "ttnn-threshold"]], "ttnn.threshold_bw": [[346, "ttnn-threshold-bw"]], "ttnn.tilize": [[347, "ttnn-tilize"]], "ttnn.tilize_with_val_padding": [[348, "ttnn-tilize-with-val-padding"]], "ttnn.to_device": [[349, "ttnn-to-device"]], "ttnn.to_layout": [[350, "ttnn-to-layout"]], "ttnn.to_memory_config": [[351, "ttnn-to-memory-config"]], "ttnn.to_torch": [[352, "ttnn-to-torch"]], "ttnn.topk": [[353, "ttnn-topk"]], "ttnn.transformer.attention_softmax": [[354, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.attention_softmax_": [[355, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.concatenate_heads": [[356, "ttnn-transformer-concatenate-heads"]], "ttnn.transformer.scaled_dot_product_attention": [[357, "ttnn-transformer-scaled-dot-product-attention"]], "ttnn.transformer.scaled_dot_product_attention_decode": [[358, "ttnn-transformer-scaled-dot-product-attention-decode"]], "ttnn.transformer.split_query_key_value_and_split_heads": [[359, "ttnn-transformer-split-query-key-value-and-split-heads"]], "ttnn.tril": [[360, "ttnn-tril"]], "ttnn.triu": [[361, "ttnn-triu"]], "ttnn.trunc": [[362, "ttnn-trunc"]], "ttnn.trunc_bw": [[363, "ttnn-trunc-bw"]], "ttnn.unary_chain": [[364, "ttnn-unary-chain"]], "ttnn.untilize": [[365, "ttnn-untilize"]], "ttnn.untilize_with_unpadding": [[366, "ttnn-untilize-with-unpadding"]], "ttnn.upsample": [[367, "ttnn-upsample"]], "ttnn.var": [[368, "ttnn-var"]], "ttnn.where": [[369, "ttnn-where"]], "ttnn.where_bw": [[370, "ttnn-where-bw"]], "ttnn.xlogy": [[371, "ttnn-xlogy"]], "ttnn.xlogy_bw": [[372, "ttnn-xlogy-bw"]], "ttnn.zeros": [[373, "ttnn-zeros"]], "ttnn.zeros_like": [[374, "ttnn-zeros-like"]], "Converting PyTorch Model to TT-NN": [[375, "converting-pytorch-model-to-tt-nn"]], "Step 1 - Rewriting the Model": [[375, "step-1-rewriting-the-model"]], "Step 2 - Switching to ttnn Operations": [[375, "step-2-switching-to-ttnn-operations"]], "Step 3 - Optimizing the Model": [[375, "step-3-optimizing-the-model"]], "More examples": [[375, "more-examples"]], "Building and Uplifting Demos": [[376, "building-and-uplifting-demos"]], "1. Install and Build": [[377, "install-and-build"]], "2. Explore Our Model Demos": [[377, "explore-our-model-demos"]], "3. TT-NN Tutorial: Multi-Head Attention (Simple)": [[377, "tt-nn-tutorial-multi-head-attention-simple"]], "4. TT-NN Tutorial: Multi-Head Attention (Optimized)": [[377, "tt-nn-tutorial-multi-head-attention-optimized"]], "Where To Go From Here": [[377, "where-to-go-from-here"]], "Install": [[378, "install"]], "Prerequisites:": [[378, "prerequisites"]], "1: Set Up the Hardware": [[378, "set-up-the-hardware"]], "2: Install Driver & Firmware": [[378, "install-driver-firmware"]], "Install System-level Dependencies": [[378, "install-system-level-dependencies"]], "Install the Driver (TT-KMD)": [[378, "install-the-driver-tt-kmd"]], "Update Device TT-Firmware with TT-Flash": [[378, "update-device-tt-firmware-with-tt-flash"]], "Install System Management Interface (TT-SMI)": [[378, "install-system-management-interface-tt-smi"]], "(Optional) Multi-Card Configuration (TT-Topology)": [[378, "optional-multi-card-configuration-tt-topology"]], "TT-NN / TT-Metalium Installation": [[378, "tt-nn-tt-metalium-installation"]], "There are three options for installing TT-Metalium:": [[378, "there-are-three-options-for-installing-tt-metalium"]], "Option 1: From Source": [[378, "option-1-from-source"]], "Step 1. Clone the Repository:": [[378, "step-1-clone-the-repository"]], "Step 2. Build the Library:": [[378, "step-2-build-the-library"]], "Step 3. Crate a virtual environment and (optional) documentation.": [[378, "step-3-crate-a-virtual-environment-and-optional-documentation"]], "Option 2: From Docker Release Image": [[378, "option-2-from-docker-release-image"]], "Option 3: From Wheel": [[378, "option-3-from-wheel"]], "Step 1. Download and Install the Latest Wheel:": [[378, "step-1-download-and-install-the-latest-wheel"]], "Step 2. (For models users only) Set Up Environment for Models:": [[378, "step-2-for-models-users-only-set-up-environment-for-models"]], "You are All Set!": [[378, "you-are-all-set"]], "To verify your installation (for source or wheel installation only), try executing a programming example:": [[378, "to-verify-your-installation-for-source-or-wheel-installation-only-try-executing-a-programming-example"]], "Interested in Contributing?": [[378, "interested-in-contributing"]], "Onboarding New Functionality": [[379, "onboarding-new-functionality"]], "Profiling TT-NN Operations": [[380, "profiling-tt-nn-operations"]], "Perf Report Headers": [[380, "perf-report-headers"]], "profile_this description": [[380, "profile-this-description"]], "Tensor": [[381, "tensor"]], "Shape": [[381, "shape"]], "Layout": [[381, "layout"], [390, "Layout"]], "Data Type": [[381, "data-type"], [390, "Data-Type"]], "Required Width Multiples for Data Types": [[381, "id4"]], "Limitation of BFLOAT8_B": [[381, "limitation-of-bfloat8-b"]], "Storage": [[381, "storage"]], "Tensor Sharding": [[381, "tensor-sharding"]], "Tutorials": [[382, "id1"]], "Graphing Torch DiT_XL_2 With TTNN": [[383, "graphing-torch-dit-xl-2-with-ttnn"]], "Matmul Operation": [[384, "matmul-operation"]], "Multi-Head Attention": [[385, "multi-head-attention"], [392, "Multi-Head-Attention"]], "ttnn Profiling": [[386, "ttnn-profiling"]], "Resnet Basic Block": [[387, "resnet-basic-block"]], "Tensor and Add Operation": [[388, "tensor-and-add-operation"], [390, "Tensor-and-Add-Operation"]], "ttnn Tracer": [[389, "ttnn-tracer"]], "Creating a tensor": [[390, "Creating-a-tensor"]], "Host Storage: Borrowed vs Owned": [[390, "Host-Storage:-Borrowed-vs-Owned"]], "Device storage": [[390, "Device-storage"]], "Open the device": [[390, "Open-the-device"]], "Initialize tensors a and b with random values using torch": [[390, "Initialize-tensors-a-and-b-with-random-values-using-torch"], [391, "Initialize-tensors-a-and-b-with-random-values-using-torch"]], "Add tensor a and b": [[390, "Add-tensor-a-and-b"]], "Inspect the output tensor of the add in ttnn": [[390, "Inspect-the-output-tensor-of-the-add-in-ttnn"]], "Convert to torch and inspect the attributes of the torch tensor": [[390, "Convert-to-torch-and-inspect-the-attributes-of-the-torch-tensor"]], "Close the device": [[390, "Close-the-device"], [391, "Close-the-device"], [392, "Close-the-device"]], "Enable program cache": [[391, "Enable-program-cache"], [392, "Enable-program-cache"]], "Configuration": [[391, "Configuration"], [392, "Configuration"]], "Matrix multiply tensor a and b": [[391, "Matrix-multiply-tensor-a-and-b"]], "Inspect the layout of matrix multiplication output": [[391, "Inspect-the-layout-of-matrix-multiplication-output"]], "Inspect the result of the matrix multiplication": [[391, "Inspect-the-result-of-the-matrix-multiplication"]], "Matrix multiply tensor a and b by using more performant config": [[391, "Matrix-multiply-tensor-a-and-b-by-using-more-performant-config"]], "Write Multi-Head Attention using ttnn": [[392, "Write-Multi-Head-Attention-using-ttnn"]], "Initialize activations and weights using torch": [[392, "Initialize-activations-and-weights-using-torch"]], "Convert activations and weights to ttnn": [[392, "Convert-activations-and-weights-to-ttnn"]], "Run the first iteration of Multi-Head Attention": [[392, "Run-the-first-iteration-of-Multi-Head-Attention"]], "Run a subsequent iteration of Multi-Head Attention": [[392, "Run-a-subsequent-iteration-of-Multi-Head-Attention"]], "Write optimized version of Multi-Head Attention": [[392, "Write-optimized-version-of-Multi-Head-Attention"]], "Pre-process the parameters of the optimized model": [[392, "Pre-process-the-parameters-of-the-optimized-model"]], "Run the first iteration of the optimized Multi-Head Attention": [[392, "Run-the-first-iteration-of-the-optimized-Multi-Head-Attention"]], "Run a subsequent iteration of the optimized Multi-Head Attention": [[392, "Run-a-subsequent-iteration-of-the-optimized-Multi-Head-Attention"]], "Check that the output of the optimized version matches the output of the original implementation": [[392, "Check-that-the-output-of-the-optimized-version-matches-the-output-of-the-original-implementation"]], "Tracing ttnn operations and torch modules/functions": [[393, "Tracing-ttnn-operations-and-torch-modules/functions"]], "Trace torch functions": [[393, "Trace-torch-functions"]], "Trace torch functions and ttnn operations": [[393, "Trace-torch-functions-and-ttnn-operations"]], "Trace torch functions, torch modules and ttnn operations": [[393, "Trace-torch-functions,-torch-modules-and-ttnn-operations"]], "Trace models written using ttnn": [[393, "Trace-models-written-using-ttnn"]], "Profiling ttnn operations": [[394, "Profiling-ttnn-operations"]], "Resnet Block": [[395, "Resnet-Block"]], "Torch Module (from torchvision)": [[395, "Torch-Module-(from-torchvision)"]], "Create torch module and preprocess it to get ttnn parameters": [[395, "Create-torch-module-and-preprocess-it-to-get-ttnn-parameters"]], "Display the parameters of the module": [[395, "Display-the-parameters-of-the-module"]], "Display the traced torch graph": [[395, "Display-the-traced-torch-graph"]], "Implement ttnn version of the module. Pass in the parameters into the constructor.": [[395, "Implement-ttnn-version-of-the-module.-Pass-in-the-parameters-into-the-constructor."]], "Run ttnn module and display the traced graph": [[395, "Run-ttnn-module-and-display-the-traced-graph"]], "Build a graph of a pytorch based model": [[396, "Build-a-graph-of-a-pytorch-based-model"]], "Clone the library from https://github.com/facebookresearch/DiT.git": [[396, "Clone-the-library-from-https://github.com/facebookresearch/DiT.git"]], "Download DiT-XL/2 Models": [[396, "Download-DiT-XL/2-Models"]], "Sample from Pre-trained DiT Models and build the graph": [[396, "Sample-from-Pre-trained-DiT-Models-and-build-the-graph"]], "Display the graph": [[396, "Display-the-graph"]], "Using TT-NN": [[397, "using-tt-nn"]], "Basic Examples": [[397, "basic-examples"]], "1. Converting from and to torch tensor": [[397, "converting-from-and-to-torch-tensor"]], "2. Running an operation on the device": [[397, "running-an-operation-on-the-device"]], "3. Using __getitem__ to slice the tensor": [[397, "using-getitem-to-slice-the-tensor"]], "4. Enabling program cache": [[397, "enabling-program-cache"]], "5. Debugging intermediate tensors": [[397, "debugging-intermediate-tensors"]], "6. Tracing the graph of operations": [[397, "tracing-the-graph-of-operations"]], "7. Using tt_lib operation in TT-NN": [[397, "using-tt-lib-operation-in-tt-nn"]], "8. Enabling Logging": [[397, "enabling-logging"]], "9. Supported Python Operators": [[397, "supported-python-operators"]], "10. Changing the string representation of the tensor": [[397, "changing-the-string-representation-of-the-tensor"]], "11. Visualize using Web Browser": [[397, "visualize-using-web-browser"]], "12. Register pre- and/or post-operation hooks": [[397, "register-pre-and-or-post-operation-hooks"]], "13. Query all operations": [[397, "query-all-operations"]], "14. Falling back to torch": [[397, "falling-back-to-torch"]], "15. Capturing graph of C++ functions, buffer allocations, etc": [[397, "capturing-graph-of-c-functions-buffer-allocations-etc"]]}, "indexentries": {"conv2dconfig (class in ttnn)": [[8, "ttnn.Conv2dConfig"]], "act_block_h_override (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.act_block_h_override"]], "act_block_w_div (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.act_block_w_div"]], "activation (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.activation"]], "always_preprocess_weights (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.always_preprocess_weights"]], "core_grid (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.core_grid"]], "deallocate_activation (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.deallocate_activation"]], "dtype (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.dtype"]], "enable_act_double_buffer (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.enable_act_double_buffer"]], "enable_kernel_stride_folding (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.enable_kernel_stride_folding"]], "enable_split_reader (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.enable_split_reader"]], "enable_subblock_padding (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.enable_subblock_padding"]], "enable_weights_double_buffer (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.enable_weights_double_buffer"]], "in_place (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.in_place"]], "output_layout (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.output_layout"]], "override_sharding_config (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.override_sharding_config"]], "preprocess_weights_on_device (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.preprocess_weights_on_device"]], "reallocate_halo_output (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.reallocate_halo_output"]], "reshard_if_not_optimal (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.reshard_if_not_optimal"]], "shard_layout (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.shard_layout"]], "transpose_shards (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.transpose_shards"]], "weights_dtype (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.weights_dtype"]], "conv2dsliceconfig (class in ttnn)": [[9, "ttnn.Conv2dSliceConfig"]], "conv2dsliceconfig.slicetypeenum (class in ttnn)": [[9, "ttnn.Conv2dSliceConfig.SliceTypeEnum"]], "sliceheight (ttnn.conv2dsliceconfig.slicetypeenum attribute)": [[9, "ttnn.Conv2dSliceConfig.SliceTypeEnum.SliceHeight"]], "slicewidth (ttnn.conv2dsliceconfig.slicetypeenum attribute)": [[9, "ttnn.Conv2dSliceConfig.SliceTypeEnum.SliceWidth"]], "name (ttnn.conv2dsliceconfig.slicetypeenum property)": [[9, "ttnn.Conv2dSliceConfig.SliceTypeEnum.name"]], "num_slices (ttnn.conv2dsliceconfig property)": [[9, "ttnn.Conv2dSliceConfig.num_slices"]], "slice_type (ttnn.conv2dsliceconfig property)": [[9, "ttnn.Conv2dSliceConfig.slice_type"]], "value (ttnn.conv2dsliceconfig.slicetypeenum property)": [[9, "ttnn.Conv2dSliceConfig.SliceTypeEnum.value"]], "getdefaultdevice() (in module ttnn)": [[10, "ttnn.GetDefaultDevice"]], "setdefaultdevice() (in module ttnn)": [[11, "ttnn.SetDefaultDevice"]], "abs (in module ttnn)": [[12, "ttnn.abs"]], "abs_bw (in module ttnn)": [[13, "ttnn.abs_bw"]], "acos (in module ttnn)": [[14, "ttnn.acos"]], "acos_bw (in module ttnn)": [[15, "ttnn.acos_bw"]], "acosh (in module ttnn)": [[16, "ttnn.acosh"]], "acosh_bw (in module ttnn)": [[17, "ttnn.acosh_bw"]], "add (in module ttnn)": [[18, "ttnn.add"]], "add_bw (in module ttnn)": [[19, "ttnn.add_bw"]], "addalpha (in module ttnn)": [[20, "ttnn.addalpha"]], "addalpha_bw (in module ttnn)": [[21, "ttnn.addalpha_bw"]], "addcdiv (in module ttnn)": [[22, "ttnn.addcdiv"]], "addcdiv_bw (in module ttnn)": [[23, "ttnn.addcdiv_bw"]], "addcmul (in module ttnn)": [[24, "ttnn.addcmul"]], "addcmul_bw (in module ttnn)": [[25, "ttnn.addcmul_bw"]], "all_gather (in module ttnn)": [[26, "ttnn.all_gather"]], "alt_complex_rotate90 (in module ttnn)": [[27, "ttnn.alt_complex_rotate90"]], "angle (in module ttnn)": [[28, "ttnn.angle"]], "angle_bw (in module ttnn)": [[29, "ttnn.angle_bw"]], "arange (in module ttnn)": [[30, "ttnn.arange"]], "argmax (in module ttnn)": [[31, "ttnn.argmax"]], "as_tensor (in module ttnn)": [[32, "ttnn.as_tensor"]], "asin (in module ttnn)": [[33, "ttnn.asin"]], "asin_bw (in module ttnn)": [[34, "ttnn.asin_bw"]], "asinh (in module ttnn)": [[35, "ttnn.asinh"]], "asinh_bw (in module ttnn)": [[36, "ttnn.asinh_bw"]], "assign_bw (in module ttnn)": [[37, "ttnn.assign_bw"]], "atan (in module ttnn)": [[38, "ttnn.atan"]], "atan2 (in module ttnn)": [[39, "ttnn.atan2"]], "atan2_bw (in module ttnn)": [[40, "ttnn.atan2_bw"]], "atan_bw (in module ttnn)": [[41, "ttnn.atan_bw"]], "atanh (in module ttnn)": [[42, "ttnn.atanh"]], "atanh_bw (in module ttnn)": [[43, "ttnn.atanh_bw"]], "batch_norm (in module ttnn)": [[44, "ttnn.batch_norm"]], "bias_gelu_bw (in module ttnn)": [[45, "ttnn.bias_gelu_bw"]], "bitwise_and (in module ttnn)": [[46, "ttnn.bitwise_and"]], "bitwise_left_shift (in module ttnn)": [[47, "ttnn.bitwise_left_shift"]], "bitwise_not (in module ttnn)": [[48, "ttnn.bitwise_not"]], "bitwise_or (in module ttnn)": [[49, "ttnn.bitwise_or"]], "bitwise_right_shift (in module ttnn)": [[50, "ttnn.bitwise_right_shift"]], "bitwise_xor (in module ttnn)": [[51, "ttnn.bitwise_xor"]], "cbrt (in module ttnn)": [[52, "ttnn.cbrt"]], "ceil (in module ttnn)": [[53, "ttnn.ceil"]], "ceil_bw (in module ttnn)": [[54, "ttnn.ceil_bw"]], "celu (in module ttnn)": [[55, "ttnn.celu"]], "celu_bw (in module ttnn)": [[56, "ttnn.celu_bw"]], "clamp (in module ttnn)": [[57, "ttnn.clamp"]], "clamp_bw (in module ttnn)": [[58, "ttnn.clamp_bw"]], "clip (in module ttnn)": [[59, "ttnn.clip"]], "clip_bw (in module ttnn)": [[60, "ttnn.clip_bw"]], "clone (in module ttnn)": [[61, "ttnn.clone"]], "close_device() (in module ttnn)": [[62, "ttnn.close_device"]], "concat (in module ttnn)": [[63, "ttnn.concat"]], "concat_bw (in module ttnn)": [[64, "ttnn.concat_bw"]], "conj (in module ttnn)": [[65, "ttnn.conj"]], "conj_bw (in module ttnn)": [[66, "ttnn.conj_bw"]], "conv1d (in module ttnn)": [[67, "ttnn.conv1d"]], "conv2d (in module ttnn)": [[68, "ttnn.conv2d"]], "conv_transpose2d (in module ttnn)": [[69, "ttnn.conv_transpose2d"]], "cos (in module ttnn)": [[70, "ttnn.cos"]], "cos_bw (in module ttnn)": [[71, "ttnn.cos_bw"]], "cosh (in module ttnn)": [[72, "ttnn.cosh"]], "cosh_bw (in module ttnn)": [[73, "ttnn.cosh_bw"]], "create_sharded_memory_config() (in module ttnn)": [[74, "ttnn.create_sharded_memory_config"]], "deallocate (in module ttnn)": [[75, "ttnn.deallocate"]], "deg2rad (in module ttnn)": [[76, "ttnn.deg2rad"]], "deg2rad_bw (in module ttnn)": [[77, "ttnn.deg2rad_bw"]], "digamma (in module ttnn)": [[78, "ttnn.digamma"]], "digamma_bw (in module ttnn)": [[79, "ttnn.digamma_bw"]], "div (in module ttnn)": [[80, "ttnn.div"]], "div_bw (in module ttnn)": [[81, "ttnn.div_bw"]], "div_no_nan (in module ttnn)": [[82, "ttnn.div_no_nan"]], "div_no_nan_bw (in module ttnn)": [[83, "ttnn.div_no_nan_bw"]], "dump_tensor (in module ttnn)": [[84, "ttnn.dump_tensor"]], "elu (in module ttnn)": [[85, "ttnn.elu"]], "elu_bw (in module ttnn)": [[86, "ttnn.elu_bw"]], "embedding (in module ttnn)": [[87, "ttnn.embedding"]], "embedding_bw (in module ttnn)": [[88, "ttnn.embedding_bw"]], "empty (in module ttnn)": [[89, "ttnn.empty"]], "empty_like (in module ttnn)": [[90, "ttnn.empty_like"]], "eq (in module ttnn)": [[91, "ttnn.eq"]], "eq_ (in module ttnn)": [[92, "ttnn.eq_"]], "eqz (in module ttnn)": [[93, "ttnn.eqz"]], "erf (in module ttnn)": [[94, "ttnn.erf"]], "erf_bw (in module ttnn)": [[95, "ttnn.erf_bw"]], "erfc (in module ttnn)": [[96, "ttnn.erfc"]], "erfc_bw (in module ttnn)": [[97, "ttnn.erfc_bw"]], "erfinv (in module ttnn)": [[98, "ttnn.erfinv"]], "erfinv_bw (in module ttnn)": [[99, "ttnn.erfinv_bw"]], "exp (in module ttnn)": [[100, "ttnn.exp"]], "exp2 (in module ttnn)": [[101, "ttnn.exp2"]], "exp2_bw (in module ttnn)": [[102, "ttnn.exp2_bw"]], "exp_bw (in module ttnn)": [[103, "ttnn.exp_bw"]], "all_reduce (in module ttnn.experimental)": [[104, "ttnn.experimental.all_reduce"]], "conv3d (in module ttnn.experimental)": [[105, "ttnn.experimental.conv3d"]], "cumprod (in module ttnn.experimental)": [[106, "ttnn.experimental.cumprod"]], "cumsum (in module ttnn.experimental)": [[107, "ttnn.experimental.cumsum"]], "dropout (in module ttnn.experimental)": [[108, "ttnn.experimental.dropout"]], "gelu_bw (in module ttnn.experimental)": [[109, "ttnn.experimental.gelu_bw"]], "rotary_embedding (in module ttnn.experimental)": [[110, "ttnn.experimental.rotary_embedding"]], "sort (in module ttnn.experimental)": [[111, "ttnn.experimental.sort"]], "expm1 (in module ttnn)": [[112, "ttnn.expm1"]], "expm1_bw (in module ttnn)": [[113, "ttnn.expm1_bw"]], "fill (in module ttnn)": [[114, "ttnn.fill"]], "fill_bw (in module ttnn)": [[115, "ttnn.fill_bw"]], "fill_ones_rm (in module ttnn)": [[116, "ttnn.fill_ones_rm"]], "fill_rm (in module ttnn)": [[117, "ttnn.fill_rm"]], "fill_zero_bw (in module ttnn)": [[118, "ttnn.fill_zero_bw"]], "floor (in module ttnn)": [[119, "ttnn.floor"]], "floor_bw (in module ttnn)": [[120, "ttnn.floor_bw"]], "floor_div (in module ttnn)": [[121, "ttnn.floor_div"]], "fmod (in module ttnn)": [[122, "ttnn.fmod"]], "fmod_bw (in module ttnn)": [[123, "ttnn.fmod_bw"]], "format_input_tensor() (in module ttnn)": [[124, "ttnn.format_input_tensor"]], "format_output_tensor() (in module ttnn)": [[125, "ttnn.format_output_tensor"]], "frac (in module ttnn)": [[126, "ttnn.frac"]], "frac_bw (in module ttnn)": [[127, "ttnn.frac_bw"]], "from_device (in module ttnn)": [[128, "ttnn.from_device"]], "from_torch (in module ttnn)": [[129, "ttnn.from_torch"]], "full (in module ttnn)": [[130, "ttnn.full"]], "full_like (in module ttnn)": [[131, "ttnn.full_like"]], "gcd (in module ttnn)": [[132, "ttnn.gcd"]], "ge (in module ttnn)": [[133, "ttnn.ge"]], "ge_ (in module ttnn)": [[134, "ttnn.ge_"]], "geglu (in module ttnn)": [[135, "ttnn.geglu"]], "gelu (in module ttnn)": [[136, "ttnn.gelu"]], "gelu_bw (in module ttnn)": [[137, "ttnn.gelu_bw"]], "gez (in module ttnn)": [[138, "ttnn.gez"]], "global_avg_pool2d (in module ttnn)": [[139, "ttnn.global_avg_pool2d"]], "glu (in module ttnn)": [[140, "ttnn.glu"]], "group_norm (in module ttnn)": [[141, "ttnn.group_norm"]], "gt (in module ttnn)": [[142, "ttnn.gt"]], "gt_ (in module ttnn)": [[143, "ttnn.gt_"]], "gtz (in module ttnn)": [[144, "ttnn.gtz"]], "hardshrink (in module ttnn)": [[145, "ttnn.hardshrink"]], "hardshrink_bw (in module ttnn)": [[146, "ttnn.hardshrink_bw"]], "hardsigmoid (in module ttnn)": [[147, "ttnn.hardsigmoid"]], "hardsigmoid_bw (in module ttnn)": [[148, "ttnn.hardsigmoid_bw"]], "hardswish (in module ttnn)": [[149, "ttnn.hardswish"]], "hardswish_bw (in module ttnn)": [[150, "ttnn.hardswish_bw"]], "hardtanh (in module ttnn)": [[151, "ttnn.hardtanh"]], "hardtanh_bw (in module ttnn)": [[152, "ttnn.hardtanh_bw"]], "heaviside (in module ttnn)": [[153, "ttnn.heaviside"]], "hypot (in module ttnn)": [[154, "ttnn.hypot"]], "hypot_bw (in module ttnn)": [[155, "ttnn.hypot_bw"]], "i0 (in module ttnn)": [[156, "ttnn.i0"]], "i0_bw (in module ttnn)": [[157, "ttnn.i0_bw"]], "identity (in module ttnn)": [[158, "ttnn.identity"]], "imag (in module ttnn)": [[159, "ttnn.imag"]], "imag_bw (in module ttnn)": [[160, "ttnn.imag_bw"]], "indexed_fill (in module ttnn)": [[161, "ttnn.indexed_fill"]], "is_imag (in module ttnn)": [[162, "ttnn.is_imag"]], "is_real (in module ttnn)": [[163, "ttnn.is_real"]], "isclose (in module ttnn)": [[164, "ttnn.isclose"]], "isfinite (in module ttnn)": [[165, "ttnn.isfinite"]], "isinf (in module ttnn)": [[166, "ttnn.isinf"]], "isnan (in module ttnn)": [[167, "ttnn.isnan"]], "isneginf (in module ttnn)": [[168, "ttnn.isneginf"]], "isposinf (in module ttnn)": [[169, "ttnn.isposinf"]], "fill_cache_for_user_ (in module ttnn.kv_cache)": [[170, "ttnn.kv_cache.fill_cache_for_user_"]], "update_cache_for_token_ (in module ttnn.kv_cache)": [[171, "ttnn.kv_cache.update_cache_for_token_"]], "l1_loss (in module ttnn)": [[172, "ttnn.l1_loss"]], "layer_norm (in module ttnn)": [[173, "ttnn.layer_norm"]], "lcm (in module ttnn)": [[174, "ttnn.lcm"]], "ldexp (in module ttnn)": [[175, "ttnn.ldexp"]], "ldexp_bw (in module ttnn)": [[176, "ttnn.ldexp_bw"]], "le (in module ttnn)": [[177, "ttnn.le"]], "le_ (in module ttnn)": [[178, "ttnn.le_"]], "leaky_relu (in module ttnn)": [[179, "ttnn.leaky_relu"]], "leaky_relu_bw (in module ttnn)": [[180, "ttnn.leaky_relu_bw"]], "lerp (in module ttnn)": [[181, "ttnn.lerp"]], "lerp_bw (in module ttnn)": [[182, "ttnn.lerp_bw"]], "lez (in module ttnn)": [[183, "ttnn.lez"]], "lgamma (in module ttnn)": [[184, "ttnn.lgamma"]], "lgamma_bw (in module ttnn)": [[185, "ttnn.lgamma_bw"]], "linear (in module ttnn)": [[186, "ttnn.linear"]], "load_tensor (in module ttnn)": [[187, "ttnn.load_tensor"]], "log (in module ttnn)": [[188, "ttnn.log"]], "log10 (in module ttnn)": [[189, "ttnn.log10"]], "log10_bw (in module ttnn)": [[190, "ttnn.log10_bw"]], "log1p (in module ttnn)": [[191, "ttnn.log1p"]], "log1p_bw (in module ttnn)": [[192, "ttnn.log1p_bw"]], "log2 (in module ttnn)": [[193, "ttnn.log2"]], "log2_bw (in module ttnn)": [[194, "ttnn.log2_bw"]], "log_bw (in module ttnn)": [[195, "ttnn.log_bw"]], "log_sigmoid (in module ttnn)": [[196, "ttnn.log_sigmoid"]], "log_sigmoid_bw (in module ttnn)": [[197, "ttnn.log_sigmoid_bw"]], "logaddexp (in module ttnn)": [[198, "ttnn.logaddexp"]], "logaddexp2 (in module ttnn)": [[199, "ttnn.logaddexp2"]], "logaddexp2_bw (in module ttnn)": [[200, "ttnn.logaddexp2_bw"]], "logaddexp_bw (in module ttnn)": [[201, "ttnn.logaddexp_bw"]], "logical_and (in module ttnn)": [[202, "ttnn.logical_and"]], "logical_and_ (in module ttnn)": [[203, "ttnn.logical_and_"]], "logical_not (in module ttnn)": [[204, "ttnn.logical_not"]], "logical_not_ (in module ttnn)": [[205, "ttnn.logical_not_"]], "logical_or (in module ttnn)": [[206, "ttnn.logical_or"]], "logical_or_ (in module ttnn)": [[207, "ttnn.logical_or_"]], "logical_xor (in module ttnn)": [[208, "ttnn.logical_xor"]], "logical_xor_ (in module ttnn)": [[209, "ttnn.logical_xor_"]], "logit (in module ttnn)": [[210, "ttnn.logit"]], "logit_bw (in module ttnn)": [[211, "ttnn.logit_bw"]], "logiteps_bw (in module ttnn)": [[212, "ttnn.logiteps_bw"]], "lt (in module ttnn)": [[213, "ttnn.lt"]], "lt_ (in module ttnn)": [[214, "ttnn.lt_"]], "ltz (in module ttnn)": [[215, "ttnn.ltz"]], "mac (in module ttnn)": [[216, "ttnn.mac"]], "manage_device() (in module ttnn)": [[217, "ttnn.manage_device"]], "matmul (in module ttnn)": [[218, "ttnn.matmul"]], "max (in module ttnn)": [[219, "ttnn.max"]], "max_bw (in module ttnn)": [[220, "ttnn.max_bw"]], "max_pool2d (in module ttnn)": [[221, "ttnn.max_pool2d"]], "maximum (in module ttnn)": [[222, "ttnn.maximum"]], "mean (in module ttnn)": [[223, "ttnn.mean"]], "min (in module ttnn)": [[224, "ttnn.min"]], "min_bw (in module ttnn)": [[225, "ttnn.min_bw"]], "minimum (in module ttnn)": [[226, "ttnn.minimum"]], "mish (in module ttnn)": [[227, "ttnn.mish"]], "preprocess_model() (in module ttnn.model_preprocessing)": [[228, "ttnn.model_preprocessing.preprocess_model"]], "preprocess_model_parameters() (in module ttnn.model_preprocessing)": [[229, "ttnn.model_preprocessing.preprocess_model_parameters"]], "moreh_sum (in module ttnn)": [[230, "ttnn.moreh_sum"]], "mse_loss (in module ttnn)": [[231, "ttnn.mse_loss"]], "mul_bw (in module ttnn)": [[232, "ttnn.mul_bw"]], "multigammaln (in module ttnn)": [[233, "ttnn.multigammaln"]], "multigammaln_bw (in module ttnn)": [[234, "ttnn.multigammaln_bw"]], "multiply (in module ttnn)": [[235, "ttnn.multiply"]], "ne (in module ttnn)": [[236, "ttnn.ne"]], "ne_ (in module ttnn)": [[237, "ttnn.ne_"]], "neg (in module ttnn)": [[238, "ttnn.neg"]], "neg_bw (in module ttnn)": [[239, "ttnn.neg_bw"]], "nextafter (in module ttnn)": [[240, "ttnn.nextafter"]], "nez (in module ttnn)": [[241, "ttnn.nez"]], "nonzero (in module ttnn)": [[242, "ttnn.nonzero"]], "normalize_global (in module ttnn)": [[243, "ttnn.normalize_global"]], "normalize_hw (in module ttnn)": [[244, "ttnn.normalize_hw"]], "ones (in module ttnn)": [[245, "ttnn.ones"]], "ones_like (in module ttnn)": [[246, "ttnn.ones_like"]], "open_device() (in module ttnn)": [[247, "ttnn.open_device"]], "outer (in module ttnn)": [[248, "ttnn.outer"]], "pad (in module ttnn)": [[249, "ttnn.pad"]], "pad_to_tile_shape() (in module ttnn)": [[250, "ttnn.pad_to_tile_shape"]], "permute (in module ttnn)": [[251, "ttnn.permute"]], "polar (in module ttnn)": [[252, "ttnn.polar"]], "polar_bw (in module ttnn)": [[253, "ttnn.polar_bw"]], "polygamma (in module ttnn)": [[254, "ttnn.polygamma"]], "polygamma_bw (in module ttnn)": [[255, "ttnn.polygamma_bw"]], "polyval (in module ttnn)": [[256, "ttnn.polyval"]], "pow (in module ttnn)": [[257, "ttnn.pow"]], "pow_bw (in module ttnn)": [[258, "ttnn.pow_bw"]], "prelu (in module ttnn)": [[259, "ttnn.prelu"]], "prepare_conv_bias() (in module ttnn)": [[260, "ttnn.prepare_conv_bias"]], "prepare_conv_transpose2d_bias() (in module ttnn)": [[261, "ttnn.prepare_conv_transpose2d_bias"]], "prepare_conv_transpose2d_weights() (in module ttnn)": [[262, "ttnn.prepare_conv_transpose2d_weights"]], "prepare_conv_weights() (in module ttnn)": [[263, "ttnn.prepare_conv_weights"]], "prod (in module ttnn)": [[264, "ttnn.prod"]], "prod_bw (in module ttnn)": [[265, "ttnn.prod_bw"]], "rad2deg (in module ttnn)": [[266, "ttnn.rad2deg"]], "rad2deg_bw (in module ttnn)": [[267, "ttnn.rad2deg_bw"]], "rdiv (in module ttnn)": [[268, "ttnn.rdiv"]], "rdiv_bw (in module ttnn)": [[269, "ttnn.rdiv_bw"]], "real (in module ttnn)": [[270, "ttnn.real"]], "real_bw (in module ttnn)": [[271, "ttnn.real_bw"]], "reallocate (in module ttnn)": [[272, "ttnn.reallocate"]], "reciprocal (in module ttnn)": [[273, "ttnn.reciprocal"]], "reciprocal_bw (in module ttnn)": [[274, "ttnn.reciprocal_bw"]], "reduce_scatter (in module ttnn)": [[275, "ttnn.reduce_scatter"]], "register_post_operation_hook() (in module ttnn)": [[276, "ttnn.register_post_operation_hook"]], "register_pre_operation_hook() (in module ttnn)": [[277, "ttnn.register_pre_operation_hook"]], "reglu (in module ttnn)": [[278, "ttnn.reglu"]], "relu (in module ttnn)": [[279, "ttnn.relu"]], "relu6 (in module ttnn)": [[280, "ttnn.relu6"]], "relu6_bw (in module ttnn)": [[281, "ttnn.relu6_bw"]], "relu_bw (in module ttnn)": [[282, "ttnn.relu_bw"]], "relu_max (in module ttnn)": [[283, "ttnn.relu_max"]], "relu_min (in module ttnn)": [[284, "ttnn.relu_min"]], "remainder (in module ttnn)": [[285, "ttnn.remainder"]], "remainder_bw (in module ttnn)": [[286, "ttnn.remainder_bw"]], "repeat (in module ttnn)": [[287, "ttnn.repeat"]], "repeat_bw (in module ttnn)": [[288, "ttnn.repeat_bw"]], "repeat_interleave (in module ttnn)": [[289, "ttnn.repeat_interleave"]], "reshape (in module ttnn)": [[290, "ttnn.reshape"]], "rms_norm (in module ttnn)": [[291, "ttnn.rms_norm"]], "round (in module ttnn)": [[292, "ttnn.round"]], "round_bw (in module ttnn)": [[293, "ttnn.round_bw"]], "rpow (in module ttnn)": [[294, "ttnn.rpow"]], "rpow_bw (in module ttnn)": [[295, "ttnn.rpow_bw"]], "rsqrt (in module ttnn)": [[296, "ttnn.rsqrt"]], "rsqrt_bw (in module ttnn)": [[297, "ttnn.rsqrt_bw"]], "rsub (in module ttnn)": [[298, "ttnn.rsub"]], "rsub_bw (in module ttnn)": [[299, "ttnn.rsub_bw"]], "scatter (in module ttnn)": [[300, "ttnn.scatter"]], "selu (in module ttnn)": [[301, "ttnn.selu"]], "selu_bw (in module ttnn)": [[302, "ttnn.selu_bw"]], "set_printoptions() (in module ttnn)": [[303, "ttnn.set_printoptions"]], "sigmoid (in module ttnn)": [[304, "ttnn.sigmoid"]], "sigmoid_accurate (in module ttnn)": [[305, "ttnn.sigmoid_accurate"]], "sigmoid_bw (in module ttnn)": [[306, "ttnn.sigmoid_bw"]], "sign (in module ttnn)": [[307, "ttnn.sign"]], "sign_bw (in module ttnn)": [[308, "ttnn.sign_bw"]], "signbit (in module ttnn)": [[309, "ttnn.signbit"]], "silu (in module ttnn)": [[310, "ttnn.silu"]], "silu_bw (in module ttnn)": [[311, "ttnn.silu_bw"]], "sin (in module ttnn)": [[312, "ttnn.sin"]], "sin_bw (in module ttnn)": [[313, "ttnn.sin_bw"]], "sinh (in module ttnn)": [[314, "ttnn.sinh"]], "sinh_bw (in module ttnn)": [[315, "ttnn.sinh_bw"]], "slice (in module ttnn)": [[316, "ttnn.slice"]], "softmax (in module ttnn)": [[317, "ttnn.softmax"]], "softplus (in module ttnn)": [[318, "ttnn.softplus"]], "softplus_bw (in module ttnn)": [[319, "ttnn.softplus_bw"]], "softshrink (in module ttnn)": [[320, "ttnn.softshrink"]], "softshrink_bw (in module ttnn)": [[321, "ttnn.softshrink_bw"]], "softsign (in module ttnn)": [[322, "ttnn.softsign"]], "softsign_bw (in module ttnn)": [[323, "ttnn.softsign_bw"]], "sqrt (in module ttnn)": [[324, "ttnn.sqrt"]], "sqrt_bw (in module ttnn)": [[325, "ttnn.sqrt_bw"]], "square (in module ttnn)": [[326, "ttnn.square"]], "square_bw (in module ttnn)": [[327, "ttnn.square_bw"]], "squared_difference (in module ttnn)": [[328, "ttnn.squared_difference"]], "squared_difference_bw (in module ttnn)": [[329, "ttnn.squared_difference_bw"]], "std (in module ttnn)": [[330, "ttnn.std"]], "sub_bw (in module ttnn)": [[331, "ttnn.sub_bw"]], "subalpha (in module ttnn)": [[332, "ttnn.subalpha"]], "subalpha_bw (in module ttnn)": [[333, "ttnn.subalpha_bw"]], "subtract (in module ttnn)": [[334, "ttnn.subtract"]], "sum (in module ttnn)": [[335, "ttnn.sum"]], "swiglu (in module ttnn)": [[336, "ttnn.swiglu"]], "swish (in module ttnn)": [[337, "ttnn.swish"]], "synchronize_device() (in module ttnn)": [[338, "ttnn.synchronize_device"]], "tan (in module ttnn)": [[339, "ttnn.tan"]], "tan_bw (in module ttnn)": [[340, "ttnn.tan_bw"]], "tanh (in module ttnn)": [[341, "ttnn.tanh"]], "tanh_bw (in module ttnn)": [[342, "ttnn.tanh_bw"]], "tanhshrink (in module ttnn)": [[343, "ttnn.tanhshrink"]], "tanhshrink_bw (in module ttnn)": [[344, "ttnn.tanhshrink_bw"]], "threshold (in module ttnn)": [[345, "ttnn.threshold"]], "threshold_bw (in module ttnn)": [[346, "ttnn.threshold_bw"]], "tilize (in module ttnn)": [[347, "ttnn.tilize"]], "tilize_with_val_padding (in module ttnn)": [[348, "ttnn.tilize_with_val_padding"]], "to_device (in module ttnn)": [[349, "ttnn.to_device"]], "to_layout (in module ttnn)": [[350, "ttnn.to_layout"]], "to_memory_config (in module ttnn)": [[351, "ttnn.to_memory_config"]], "to_torch (in module ttnn)": [[352, "ttnn.to_torch"]], "topk (in module ttnn)": [[353, "ttnn.topk"]], "attention_softmax (in module ttnn.transformer)": [[354, "ttnn.transformer.attention_softmax"]], "attention_softmax_ (in module ttnn.transformer)": [[355, "ttnn.transformer.attention_softmax_"]], "concatenate_heads (in module ttnn.transformer)": [[356, "ttnn.transformer.concatenate_heads"]], "scaled_dot_product_attention (in module ttnn.transformer)": [[357, "ttnn.transformer.scaled_dot_product_attention"]], "scaled_dot_product_attention_decode (in module ttnn.transformer)": [[358, "ttnn.transformer.scaled_dot_product_attention_decode"]], "split_query_key_value_and_split_heads (in module ttnn.transformer)": [[359, "ttnn.transformer.split_query_key_value_and_split_heads"]], "tril (in module ttnn)": [[360, "ttnn.tril"]], "triu (in module ttnn)": [[361, "ttnn.triu"]], "trunc (in module ttnn)": [[362, "ttnn.trunc"]], "trunc_bw (in module ttnn)": [[363, "ttnn.trunc_bw"]], "unary_chain (in module ttnn)": [[364, "ttnn.unary_chain"]], "untilize (in module ttnn)": [[365, "ttnn.untilize"]], "untilize_with_unpadding (in module ttnn)": [[366, "ttnn.untilize_with_unpadding"]], "upsample (in module ttnn)": [[367, "ttnn.upsample"]], "var (in module ttnn)": [[368, "ttnn.var"]], "where (in module ttnn)": [[369, "ttnn.where"]], "where_bw (in module ttnn)": [[370, "ttnn.where_bw"]], "xlogy (in module ttnn)": [[371, "ttnn.xlogy"]], "xlogy_bw (in module ttnn)": [[372, "ttnn.xlogy_bw"]], "zeros (in module ttnn)": [[373, "ttnn.zeros"]], "zeros_like (in module ttnn)": [[374, "ttnn.zeros_like"]], "shape (class in ttnn)": [[381, "ttnn.Shape"]], "rank (ttnn.shape property)": [[381, "ttnn.Shape.rank"]], "to_rank() (ttnn.shape method)": [[381, "ttnn.Shape.to_rank"]]}})