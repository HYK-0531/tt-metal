Search.setIndex({"docnames": ["index", "resources/contributing", "resources/support", "tt_metal_models/get_performance", "tt_metal_models/get_started", "ttnn/about", "ttnn/adding_new_ttnn_operation", "ttnn/api", "ttnn/api/ttnn.Conv2dConfig", "ttnn/api/ttnn.Conv2dSliceConfig", "ttnn/api/ttnn.GetDefaultDevice", "ttnn/api/ttnn.SetDefaultDevice", "ttnn/api/ttnn.abs", "ttnn/api/ttnn.abs_bw", "ttnn/api/ttnn.acos", "ttnn/api/ttnn.acos_bw", "ttnn/api/ttnn.acosh", "ttnn/api/ttnn.acosh_bw", "ttnn/api/ttnn.add", "ttnn/api/ttnn.add_bw", "ttnn/api/ttnn.addalpha", "ttnn/api/ttnn.addalpha_bw", "ttnn/api/ttnn.addcdiv", "ttnn/api/ttnn.addcdiv_bw", "ttnn/api/ttnn.addcmul", "ttnn/api/ttnn.addcmul_bw", "ttnn/api/ttnn.all_gather", "ttnn/api/ttnn.angle", "ttnn/api/ttnn.angle_bw", "ttnn/api/ttnn.arange", "ttnn/api/ttnn.argmax", "ttnn/api/ttnn.as_tensor", "ttnn/api/ttnn.asin", "ttnn/api/ttnn.asin_bw", "ttnn/api/ttnn.asinh", "ttnn/api/ttnn.asinh_bw", "ttnn/api/ttnn.assign_bw", "ttnn/api/ttnn.atan", "ttnn/api/ttnn.atan2", "ttnn/api/ttnn.atan2_bw", "ttnn/api/ttnn.atan_bw", "ttnn/api/ttnn.atanh", "ttnn/api/ttnn.atanh_bw", "ttnn/api/ttnn.batch_norm", "ttnn/api/ttnn.bias_gelu_bw", "ttnn/api/ttnn.bitwise_and", "ttnn/api/ttnn.bitwise_left_shift", "ttnn/api/ttnn.bitwise_not", "ttnn/api/ttnn.bitwise_or", "ttnn/api/ttnn.bitwise_right_shift", "ttnn/api/ttnn.bitwise_xor", "ttnn/api/ttnn.cbrt", "ttnn/api/ttnn.ceil", "ttnn/api/ttnn.ceil_bw", "ttnn/api/ttnn.celu", "ttnn/api/ttnn.celu_bw", "ttnn/api/ttnn.clamp", "ttnn/api/ttnn.clamp_bw", "ttnn/api/ttnn.clip", "ttnn/api/ttnn.clip_bw", "ttnn/api/ttnn.clone", "ttnn/api/ttnn.close_device", "ttnn/api/ttnn.concat", "ttnn/api/ttnn.concat_bw", "ttnn/api/ttnn.conj", "ttnn/api/ttnn.conj_bw", "ttnn/api/ttnn.conv1d", "ttnn/api/ttnn.conv2d", "ttnn/api/ttnn.conv_transpose2d", "ttnn/api/ttnn.cos", "ttnn/api/ttnn.cos_bw", "ttnn/api/ttnn.cosh", "ttnn/api/ttnn.cosh_bw", "ttnn/api/ttnn.create_sharded_memory_config", "ttnn/api/ttnn.deallocate", "ttnn/api/ttnn.deg2rad", "ttnn/api/ttnn.deg2rad_bw", "ttnn/api/ttnn.digamma", "ttnn/api/ttnn.digamma_bw", "ttnn/api/ttnn.div", "ttnn/api/ttnn.div_bw", "ttnn/api/ttnn.div_no_nan", "ttnn/api/ttnn.div_no_nan_bw", "ttnn/api/ttnn.downsample", "ttnn/api/ttnn.dump_tensor", "ttnn/api/ttnn.elu", "ttnn/api/ttnn.elu_bw", "ttnn/api/ttnn.embedding", "ttnn/api/ttnn.embedding_bw", "ttnn/api/ttnn.empty", "ttnn/api/ttnn.empty_like", "ttnn/api/ttnn.eq", "ttnn/api/ttnn.eq_", "ttnn/api/ttnn.eqz", "ttnn/api/ttnn.erf", "ttnn/api/ttnn.erf_bw", "ttnn/api/ttnn.erfc", "ttnn/api/ttnn.erfc_bw", "ttnn/api/ttnn.erfinv", "ttnn/api/ttnn.erfinv_bw", "ttnn/api/ttnn.exp", "ttnn/api/ttnn.exp2", "ttnn/api/ttnn.exp2_bw", "ttnn/api/ttnn.exp_bw", "ttnn/api/ttnn.experimental.all_reduce", "ttnn/api/ttnn.experimental.conv3d", "ttnn/api/ttnn.experimental.cumprod", "ttnn/api/ttnn.experimental.cumsum", "ttnn/api/ttnn.experimental.dropout", "ttnn/api/ttnn.experimental.gelu_bw", "ttnn/api/ttnn.experimental.rotary_embedding", "ttnn/api/ttnn.experimental.sort", "ttnn/api/ttnn.expm1", "ttnn/api/ttnn.expm1_bw", "ttnn/api/ttnn.fill", "ttnn/api/ttnn.fill_bw", "ttnn/api/ttnn.fill_ones_rm", "ttnn/api/ttnn.fill_rm", "ttnn/api/ttnn.fill_zero_bw", "ttnn/api/ttnn.floor", "ttnn/api/ttnn.floor_bw", "ttnn/api/ttnn.floor_div", "ttnn/api/ttnn.fmod", "ttnn/api/ttnn.fmod_bw", "ttnn/api/ttnn.format_input_tensor", "ttnn/api/ttnn.format_output_tensor", "ttnn/api/ttnn.frac", "ttnn/api/ttnn.frac_bw", "ttnn/api/ttnn.from_device", "ttnn/api/ttnn.from_torch", "ttnn/api/ttnn.full", "ttnn/api/ttnn.full_like", "ttnn/api/ttnn.gcd", "ttnn/api/ttnn.ge", "ttnn/api/ttnn.ge_", "ttnn/api/ttnn.geglu", "ttnn/api/ttnn.gelu", "ttnn/api/ttnn.gelu_bw", "ttnn/api/ttnn.gez", "ttnn/api/ttnn.global_avg_pool2d", "ttnn/api/ttnn.glu", "ttnn/api/ttnn.group_norm", "ttnn/api/ttnn.gt", "ttnn/api/ttnn.gt_", "ttnn/api/ttnn.gtz", "ttnn/api/ttnn.hardshrink", "ttnn/api/ttnn.hardshrink_bw", "ttnn/api/ttnn.hardsigmoid", "ttnn/api/ttnn.hardsigmoid_bw", "ttnn/api/ttnn.hardswish", "ttnn/api/ttnn.hardswish_bw", "ttnn/api/ttnn.hardtanh", "ttnn/api/ttnn.hardtanh_bw", "ttnn/api/ttnn.heaviside", "ttnn/api/ttnn.hypot", "ttnn/api/ttnn.hypot_bw", "ttnn/api/ttnn.i0", "ttnn/api/ttnn.i0_bw", "ttnn/api/ttnn.identity", "ttnn/api/ttnn.imag", "ttnn/api/ttnn.imag_bw", "ttnn/api/ttnn.indexed_fill", "ttnn/api/ttnn.is_imag", "ttnn/api/ttnn.is_real", "ttnn/api/ttnn.isclose", "ttnn/api/ttnn.isfinite", "ttnn/api/ttnn.isinf", "ttnn/api/ttnn.isnan", "ttnn/api/ttnn.isneginf", "ttnn/api/ttnn.isposinf", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_", "ttnn/api/ttnn.kv_cache.update_cache_for_token_", "ttnn/api/ttnn.l1_loss", "ttnn/api/ttnn.layer_norm", "ttnn/api/ttnn.lcm", "ttnn/api/ttnn.ldexp", "ttnn/api/ttnn.ldexp_bw", "ttnn/api/ttnn.le", "ttnn/api/ttnn.le_", "ttnn/api/ttnn.leaky_relu", "ttnn/api/ttnn.leaky_relu_bw", "ttnn/api/ttnn.lerp", "ttnn/api/ttnn.lerp_bw", "ttnn/api/ttnn.lez", "ttnn/api/ttnn.lgamma", "ttnn/api/ttnn.lgamma_bw", "ttnn/api/ttnn.linear", "ttnn/api/ttnn.load_tensor", "ttnn/api/ttnn.log", "ttnn/api/ttnn.log10", "ttnn/api/ttnn.log10_bw", "ttnn/api/ttnn.log1p", "ttnn/api/ttnn.log1p_bw", "ttnn/api/ttnn.log2", "ttnn/api/ttnn.log2_bw", "ttnn/api/ttnn.log_bw", "ttnn/api/ttnn.log_sigmoid", "ttnn/api/ttnn.log_sigmoid_bw", "ttnn/api/ttnn.logaddexp", "ttnn/api/ttnn.logaddexp2", "ttnn/api/ttnn.logaddexp2_bw", "ttnn/api/ttnn.logaddexp_bw", "ttnn/api/ttnn.logical_and", "ttnn/api/ttnn.logical_and_", "ttnn/api/ttnn.logical_not", "ttnn/api/ttnn.logical_not_", "ttnn/api/ttnn.logical_or", "ttnn/api/ttnn.logical_or_", "ttnn/api/ttnn.logical_xor", "ttnn/api/ttnn.logical_xor_", "ttnn/api/ttnn.logit", "ttnn/api/ttnn.logit_bw", "ttnn/api/ttnn.logiteps_bw", "ttnn/api/ttnn.lt", "ttnn/api/ttnn.lt_", "ttnn/api/ttnn.ltz", "ttnn/api/ttnn.mac", "ttnn/api/ttnn.manage_device", "ttnn/api/ttnn.matmul", "ttnn/api/ttnn.max", "ttnn/api/ttnn.max_bw", "ttnn/api/ttnn.max_pool2d", "ttnn/api/ttnn.maximum", "ttnn/api/ttnn.mean", "ttnn/api/ttnn.min", "ttnn/api/ttnn.min_bw", "ttnn/api/ttnn.minimum", "ttnn/api/ttnn.mish", "ttnn/api/ttnn.model_preprocessing.preprocess_model", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters", "ttnn/api/ttnn.moreh_sum", "ttnn/api/ttnn.mse_loss", "ttnn/api/ttnn.mul_bw", "ttnn/api/ttnn.multigammaln", "ttnn/api/ttnn.multigammaln_bw", "ttnn/api/ttnn.multiply", "ttnn/api/ttnn.ne", "ttnn/api/ttnn.ne_", "ttnn/api/ttnn.neg", "ttnn/api/ttnn.neg_bw", "ttnn/api/ttnn.nextafter", "ttnn/api/ttnn.nez", "ttnn/api/ttnn.nonzero", "ttnn/api/ttnn.normalize_global", "ttnn/api/ttnn.normalize_hw", "ttnn/api/ttnn.ones", "ttnn/api/ttnn.ones_like", "ttnn/api/ttnn.open_device", "ttnn/api/ttnn.outer", "ttnn/api/ttnn.pad", "ttnn/api/ttnn.pad_to_tile_shape", "ttnn/api/ttnn.permute", "ttnn/api/ttnn.polar", "ttnn/api/ttnn.polar_bw", "ttnn/api/ttnn.polygamma", "ttnn/api/ttnn.polygamma_bw", "ttnn/api/ttnn.polyval", "ttnn/api/ttnn.pow", "ttnn/api/ttnn.pow_bw", "ttnn/api/ttnn.prelu", "ttnn/api/ttnn.prepare_conv_bias", "ttnn/api/ttnn.prepare_conv_weights", "ttnn/api/ttnn.prod", "ttnn/api/ttnn.prod_bw", "ttnn/api/ttnn.rad2deg", "ttnn/api/ttnn.rad2deg_bw", "ttnn/api/ttnn.rdiv", "ttnn/api/ttnn.rdiv_bw", "ttnn/api/ttnn.real", "ttnn/api/ttnn.real_bw", "ttnn/api/ttnn.reallocate", "ttnn/api/ttnn.reciprocal", "ttnn/api/ttnn.reciprocal_bw", "ttnn/api/ttnn.reduce_scatter", "ttnn/api/ttnn.register_post_operation_hook", "ttnn/api/ttnn.register_pre_operation_hook", "ttnn/api/ttnn.reglu", "ttnn/api/ttnn.relu", "ttnn/api/ttnn.relu6", "ttnn/api/ttnn.relu6_bw", "ttnn/api/ttnn.relu_bw", "ttnn/api/ttnn.relu_max", "ttnn/api/ttnn.relu_min", "ttnn/api/ttnn.remainder", "ttnn/api/ttnn.remainder_bw", "ttnn/api/ttnn.repeat", "ttnn/api/ttnn.repeat_bw", "ttnn/api/ttnn.repeat_interleave", "ttnn/api/ttnn.reshape", "ttnn/api/ttnn.rms_norm", "ttnn/api/ttnn.round", "ttnn/api/ttnn.round_bw", "ttnn/api/ttnn.rpow", "ttnn/api/ttnn.rpow_bw", "ttnn/api/ttnn.rsqrt", "ttnn/api/ttnn.rsqrt_bw", "ttnn/api/ttnn.rsub", "ttnn/api/ttnn.rsub_bw", "ttnn/api/ttnn.scatter", "ttnn/api/ttnn.selu", "ttnn/api/ttnn.selu_bw", "ttnn/api/ttnn.set_printoptions", "ttnn/api/ttnn.sigmoid", "ttnn/api/ttnn.sigmoid_accurate", "ttnn/api/ttnn.sigmoid_bw", "ttnn/api/ttnn.sign", "ttnn/api/ttnn.sign_bw", "ttnn/api/ttnn.signbit", "ttnn/api/ttnn.silu", "ttnn/api/ttnn.silu_bw", "ttnn/api/ttnn.sin", "ttnn/api/ttnn.sin_bw", "ttnn/api/ttnn.sinh", "ttnn/api/ttnn.sinh_bw", "ttnn/api/ttnn.slice", "ttnn/api/ttnn.softmax", "ttnn/api/ttnn.softplus", "ttnn/api/ttnn.softplus_bw", "ttnn/api/ttnn.softshrink", "ttnn/api/ttnn.softshrink_bw", "ttnn/api/ttnn.softsign", "ttnn/api/ttnn.softsign_bw", "ttnn/api/ttnn.sqrt", "ttnn/api/ttnn.sqrt_bw", "ttnn/api/ttnn.square", "ttnn/api/ttnn.square_bw", "ttnn/api/ttnn.squared_difference", "ttnn/api/ttnn.squared_difference_bw", "ttnn/api/ttnn.std", "ttnn/api/ttnn.sub_bw", "ttnn/api/ttnn.subalpha", "ttnn/api/ttnn.subalpha_bw", "ttnn/api/ttnn.subtract", "ttnn/api/ttnn.sum", "ttnn/api/ttnn.swiglu", "ttnn/api/ttnn.swish", "ttnn/api/ttnn.synchronize_device", "ttnn/api/ttnn.tan", "ttnn/api/ttnn.tan_bw", "ttnn/api/ttnn.tanh", "ttnn/api/ttnn.tanh_bw", "ttnn/api/ttnn.tanhshrink", "ttnn/api/ttnn.tanhshrink_bw", "ttnn/api/ttnn.threshold", "ttnn/api/ttnn.threshold_bw", "ttnn/api/ttnn.tilize", "ttnn/api/ttnn.tilize_with_val_padding", "ttnn/api/ttnn.to_device", "ttnn/api/ttnn.to_layout", "ttnn/api/ttnn.to_memory_config", "ttnn/api/ttnn.to_torch", "ttnn/api/ttnn.topk", "ttnn/api/ttnn.transformer.attention_softmax", "ttnn/api/ttnn.transformer.attention_softmax_", "ttnn/api/ttnn.transformer.concatenate_heads", "ttnn/api/ttnn.transformer.scaled_dot_product_attention", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads", "ttnn/api/ttnn.tril", "ttnn/api/ttnn.triu", "ttnn/api/ttnn.trunc", "ttnn/api/ttnn.trunc_bw", "ttnn/api/ttnn.unary_chain", "ttnn/api/ttnn.untilize", "ttnn/api/ttnn.untilize_with_unpadding", "ttnn/api/ttnn.upsample", "ttnn/api/ttnn.var", "ttnn/api/ttnn.where", "ttnn/api/ttnn.where_bw", "ttnn/api/ttnn.xlogy", "ttnn/api/ttnn.xlogy_bw", "ttnn/api/ttnn.zeros", "ttnn/api/ttnn.zeros_like", "ttnn/converting_torch_model_to_ttnn", "ttnn/demos", "ttnn/dependencies/examples", "ttnn/dependencies/index", "ttnn/dependencies/tensor", "ttnn/dependencies/tt_lib", "ttnn/get_started", "ttnn/installing", "ttnn/onboarding", "ttnn/profiling_ttnn_operations", "ttnn/tensor", "ttnn/tutorials", "ttnn/tutorials/graphing_torch_dit", "ttnn/tutorials/matmul", "ttnn/tutorials/multihead-attention", "ttnn/tutorials/profiling", "ttnn/tutorials/resnet-basic-block", "ttnn/tutorials/tensor_and_add_operation", "ttnn/tutorials/ttnn-tracer", "ttnn/tutorials/ttnn_tutorials/001", "ttnn/tutorials/ttnn_tutorials/002", "ttnn/tutorials/ttnn_tutorials/003", "ttnn/tutorials/ttnn_tutorials/004", "ttnn/tutorials/ttnn_tutorials/005", "ttnn/tutorials/ttnn_tutorials/006", "ttnn/tutorials/ttnn_tutorials/007", "ttnn/usage"], "filenames": ["index.rst", "resources/contributing.rst", "resources/support.rst", "tt_metal_models/get_performance.rst", "tt_metal_models/get_started.rst", "ttnn/about.rst", "ttnn/adding_new_ttnn_operation.rst", "ttnn/api.rst", "ttnn/api/ttnn.Conv2dConfig.rst", "ttnn/api/ttnn.Conv2dSliceConfig.rst", "ttnn/api/ttnn.GetDefaultDevice.rst", "ttnn/api/ttnn.SetDefaultDevice.rst", "ttnn/api/ttnn.abs.rst", "ttnn/api/ttnn.abs_bw.rst", "ttnn/api/ttnn.acos.rst", "ttnn/api/ttnn.acos_bw.rst", "ttnn/api/ttnn.acosh.rst", "ttnn/api/ttnn.acosh_bw.rst", "ttnn/api/ttnn.add.rst", "ttnn/api/ttnn.add_bw.rst", "ttnn/api/ttnn.addalpha.rst", "ttnn/api/ttnn.addalpha_bw.rst", "ttnn/api/ttnn.addcdiv.rst", "ttnn/api/ttnn.addcdiv_bw.rst", "ttnn/api/ttnn.addcmul.rst", "ttnn/api/ttnn.addcmul_bw.rst", "ttnn/api/ttnn.all_gather.rst", "ttnn/api/ttnn.angle.rst", "ttnn/api/ttnn.angle_bw.rst", "ttnn/api/ttnn.arange.rst", "ttnn/api/ttnn.argmax.rst", "ttnn/api/ttnn.as_tensor.rst", "ttnn/api/ttnn.asin.rst", "ttnn/api/ttnn.asin_bw.rst", "ttnn/api/ttnn.asinh.rst", "ttnn/api/ttnn.asinh_bw.rst", "ttnn/api/ttnn.assign_bw.rst", "ttnn/api/ttnn.atan.rst", "ttnn/api/ttnn.atan2.rst", "ttnn/api/ttnn.atan2_bw.rst", "ttnn/api/ttnn.atan_bw.rst", "ttnn/api/ttnn.atanh.rst", "ttnn/api/ttnn.atanh_bw.rst", "ttnn/api/ttnn.batch_norm.rst", "ttnn/api/ttnn.bias_gelu_bw.rst", "ttnn/api/ttnn.bitwise_and.rst", "ttnn/api/ttnn.bitwise_left_shift.rst", "ttnn/api/ttnn.bitwise_not.rst", "ttnn/api/ttnn.bitwise_or.rst", "ttnn/api/ttnn.bitwise_right_shift.rst", "ttnn/api/ttnn.bitwise_xor.rst", "ttnn/api/ttnn.cbrt.rst", "ttnn/api/ttnn.ceil.rst", "ttnn/api/ttnn.ceil_bw.rst", "ttnn/api/ttnn.celu.rst", "ttnn/api/ttnn.celu_bw.rst", "ttnn/api/ttnn.clamp.rst", "ttnn/api/ttnn.clamp_bw.rst", "ttnn/api/ttnn.clip.rst", "ttnn/api/ttnn.clip_bw.rst", "ttnn/api/ttnn.clone.rst", "ttnn/api/ttnn.close_device.rst", "ttnn/api/ttnn.concat.rst", "ttnn/api/ttnn.concat_bw.rst", "ttnn/api/ttnn.conj.rst", "ttnn/api/ttnn.conj_bw.rst", "ttnn/api/ttnn.conv1d.rst", "ttnn/api/ttnn.conv2d.rst", "ttnn/api/ttnn.conv_transpose2d.rst", "ttnn/api/ttnn.cos.rst", "ttnn/api/ttnn.cos_bw.rst", "ttnn/api/ttnn.cosh.rst", "ttnn/api/ttnn.cosh_bw.rst", "ttnn/api/ttnn.create_sharded_memory_config.rst", "ttnn/api/ttnn.deallocate.rst", "ttnn/api/ttnn.deg2rad.rst", "ttnn/api/ttnn.deg2rad_bw.rst", "ttnn/api/ttnn.digamma.rst", "ttnn/api/ttnn.digamma_bw.rst", "ttnn/api/ttnn.div.rst", "ttnn/api/ttnn.div_bw.rst", "ttnn/api/ttnn.div_no_nan.rst", "ttnn/api/ttnn.div_no_nan_bw.rst", "ttnn/api/ttnn.downsample.rst", "ttnn/api/ttnn.dump_tensor.rst", "ttnn/api/ttnn.elu.rst", "ttnn/api/ttnn.elu_bw.rst", "ttnn/api/ttnn.embedding.rst", "ttnn/api/ttnn.embedding_bw.rst", "ttnn/api/ttnn.empty.rst", "ttnn/api/ttnn.empty_like.rst", "ttnn/api/ttnn.eq.rst", "ttnn/api/ttnn.eq_.rst", "ttnn/api/ttnn.eqz.rst", "ttnn/api/ttnn.erf.rst", "ttnn/api/ttnn.erf_bw.rst", "ttnn/api/ttnn.erfc.rst", "ttnn/api/ttnn.erfc_bw.rst", "ttnn/api/ttnn.erfinv.rst", "ttnn/api/ttnn.erfinv_bw.rst", "ttnn/api/ttnn.exp.rst", "ttnn/api/ttnn.exp2.rst", "ttnn/api/ttnn.exp2_bw.rst", "ttnn/api/ttnn.exp_bw.rst", "ttnn/api/ttnn.experimental.all_reduce.rst", "ttnn/api/ttnn.experimental.conv3d.rst", "ttnn/api/ttnn.experimental.cumprod.rst", "ttnn/api/ttnn.experimental.cumsum.rst", "ttnn/api/ttnn.experimental.dropout.rst", "ttnn/api/ttnn.experimental.gelu_bw.rst", "ttnn/api/ttnn.experimental.rotary_embedding.rst", "ttnn/api/ttnn.experimental.sort.rst", "ttnn/api/ttnn.expm1.rst", "ttnn/api/ttnn.expm1_bw.rst", "ttnn/api/ttnn.fill.rst", "ttnn/api/ttnn.fill_bw.rst", "ttnn/api/ttnn.fill_ones_rm.rst", "ttnn/api/ttnn.fill_rm.rst", "ttnn/api/ttnn.fill_zero_bw.rst", "ttnn/api/ttnn.floor.rst", "ttnn/api/ttnn.floor_bw.rst", "ttnn/api/ttnn.floor_div.rst", "ttnn/api/ttnn.fmod.rst", "ttnn/api/ttnn.fmod_bw.rst", "ttnn/api/ttnn.format_input_tensor.rst", "ttnn/api/ttnn.format_output_tensor.rst", "ttnn/api/ttnn.frac.rst", "ttnn/api/ttnn.frac_bw.rst", "ttnn/api/ttnn.from_device.rst", "ttnn/api/ttnn.from_torch.rst", "ttnn/api/ttnn.full.rst", "ttnn/api/ttnn.full_like.rst", "ttnn/api/ttnn.gcd.rst", "ttnn/api/ttnn.ge.rst", "ttnn/api/ttnn.ge_.rst", "ttnn/api/ttnn.geglu.rst", "ttnn/api/ttnn.gelu.rst", "ttnn/api/ttnn.gelu_bw.rst", "ttnn/api/ttnn.gez.rst", "ttnn/api/ttnn.global_avg_pool2d.rst", "ttnn/api/ttnn.glu.rst", "ttnn/api/ttnn.group_norm.rst", "ttnn/api/ttnn.gt.rst", "ttnn/api/ttnn.gt_.rst", "ttnn/api/ttnn.gtz.rst", "ttnn/api/ttnn.hardshrink.rst", "ttnn/api/ttnn.hardshrink_bw.rst", "ttnn/api/ttnn.hardsigmoid.rst", "ttnn/api/ttnn.hardsigmoid_bw.rst", "ttnn/api/ttnn.hardswish.rst", "ttnn/api/ttnn.hardswish_bw.rst", "ttnn/api/ttnn.hardtanh.rst", "ttnn/api/ttnn.hardtanh_bw.rst", "ttnn/api/ttnn.heaviside.rst", "ttnn/api/ttnn.hypot.rst", "ttnn/api/ttnn.hypot_bw.rst", "ttnn/api/ttnn.i0.rst", "ttnn/api/ttnn.i0_bw.rst", "ttnn/api/ttnn.identity.rst", "ttnn/api/ttnn.imag.rst", "ttnn/api/ttnn.imag_bw.rst", "ttnn/api/ttnn.indexed_fill.rst", "ttnn/api/ttnn.is_imag.rst", "ttnn/api/ttnn.is_real.rst", "ttnn/api/ttnn.isclose.rst", "ttnn/api/ttnn.isfinite.rst", "ttnn/api/ttnn.isinf.rst", "ttnn/api/ttnn.isnan.rst", "ttnn/api/ttnn.isneginf.rst", "ttnn/api/ttnn.isposinf.rst", "ttnn/api/ttnn.kv_cache.fill_cache_for_user_.rst", "ttnn/api/ttnn.kv_cache.update_cache_for_token_.rst", "ttnn/api/ttnn.l1_loss.rst", "ttnn/api/ttnn.layer_norm.rst", "ttnn/api/ttnn.lcm.rst", "ttnn/api/ttnn.ldexp.rst", "ttnn/api/ttnn.ldexp_bw.rst", "ttnn/api/ttnn.le.rst", "ttnn/api/ttnn.le_.rst", "ttnn/api/ttnn.leaky_relu.rst", "ttnn/api/ttnn.leaky_relu_bw.rst", "ttnn/api/ttnn.lerp.rst", "ttnn/api/ttnn.lerp_bw.rst", "ttnn/api/ttnn.lez.rst", "ttnn/api/ttnn.lgamma.rst", "ttnn/api/ttnn.lgamma_bw.rst", "ttnn/api/ttnn.linear.rst", "ttnn/api/ttnn.load_tensor.rst", "ttnn/api/ttnn.log.rst", "ttnn/api/ttnn.log10.rst", "ttnn/api/ttnn.log10_bw.rst", "ttnn/api/ttnn.log1p.rst", "ttnn/api/ttnn.log1p_bw.rst", "ttnn/api/ttnn.log2.rst", "ttnn/api/ttnn.log2_bw.rst", "ttnn/api/ttnn.log_bw.rst", "ttnn/api/ttnn.log_sigmoid.rst", "ttnn/api/ttnn.log_sigmoid_bw.rst", "ttnn/api/ttnn.logaddexp.rst", "ttnn/api/ttnn.logaddexp2.rst", "ttnn/api/ttnn.logaddexp2_bw.rst", "ttnn/api/ttnn.logaddexp_bw.rst", "ttnn/api/ttnn.logical_and.rst", "ttnn/api/ttnn.logical_and_.rst", "ttnn/api/ttnn.logical_not.rst", "ttnn/api/ttnn.logical_not_.rst", "ttnn/api/ttnn.logical_or.rst", "ttnn/api/ttnn.logical_or_.rst", "ttnn/api/ttnn.logical_xor.rst", "ttnn/api/ttnn.logical_xor_.rst", "ttnn/api/ttnn.logit.rst", "ttnn/api/ttnn.logit_bw.rst", "ttnn/api/ttnn.logiteps_bw.rst", "ttnn/api/ttnn.lt.rst", "ttnn/api/ttnn.lt_.rst", "ttnn/api/ttnn.ltz.rst", "ttnn/api/ttnn.mac.rst", "ttnn/api/ttnn.manage_device.rst", "ttnn/api/ttnn.matmul.rst", "ttnn/api/ttnn.max.rst", "ttnn/api/ttnn.max_bw.rst", "ttnn/api/ttnn.max_pool2d.rst", "ttnn/api/ttnn.maximum.rst", "ttnn/api/ttnn.mean.rst", "ttnn/api/ttnn.min.rst", "ttnn/api/ttnn.min_bw.rst", "ttnn/api/ttnn.minimum.rst", "ttnn/api/ttnn.mish.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model.rst", "ttnn/api/ttnn.model_preprocessing.preprocess_model_parameters.rst", "ttnn/api/ttnn.moreh_sum.rst", "ttnn/api/ttnn.mse_loss.rst", "ttnn/api/ttnn.mul_bw.rst", "ttnn/api/ttnn.multigammaln.rst", "ttnn/api/ttnn.multigammaln_bw.rst", "ttnn/api/ttnn.multiply.rst", "ttnn/api/ttnn.ne.rst", "ttnn/api/ttnn.ne_.rst", "ttnn/api/ttnn.neg.rst", "ttnn/api/ttnn.neg_bw.rst", "ttnn/api/ttnn.nextafter.rst", "ttnn/api/ttnn.nez.rst", "ttnn/api/ttnn.nonzero.rst", "ttnn/api/ttnn.normalize_global.rst", "ttnn/api/ttnn.normalize_hw.rst", "ttnn/api/ttnn.ones.rst", "ttnn/api/ttnn.ones_like.rst", "ttnn/api/ttnn.open_device.rst", "ttnn/api/ttnn.outer.rst", "ttnn/api/ttnn.pad.rst", "ttnn/api/ttnn.pad_to_tile_shape.rst", "ttnn/api/ttnn.permute.rst", "ttnn/api/ttnn.polar.rst", "ttnn/api/ttnn.polar_bw.rst", "ttnn/api/ttnn.polygamma.rst", "ttnn/api/ttnn.polygamma_bw.rst", "ttnn/api/ttnn.polyval.rst", "ttnn/api/ttnn.pow.rst", "ttnn/api/ttnn.pow_bw.rst", "ttnn/api/ttnn.prelu.rst", "ttnn/api/ttnn.prepare_conv_bias.rst", "ttnn/api/ttnn.prepare_conv_weights.rst", "ttnn/api/ttnn.prod.rst", "ttnn/api/ttnn.prod_bw.rst", "ttnn/api/ttnn.rad2deg.rst", "ttnn/api/ttnn.rad2deg_bw.rst", "ttnn/api/ttnn.rdiv.rst", "ttnn/api/ttnn.rdiv_bw.rst", "ttnn/api/ttnn.real.rst", "ttnn/api/ttnn.real_bw.rst", "ttnn/api/ttnn.reallocate.rst", "ttnn/api/ttnn.reciprocal.rst", "ttnn/api/ttnn.reciprocal_bw.rst", "ttnn/api/ttnn.reduce_scatter.rst", "ttnn/api/ttnn.register_post_operation_hook.rst", "ttnn/api/ttnn.register_pre_operation_hook.rst", "ttnn/api/ttnn.reglu.rst", "ttnn/api/ttnn.relu.rst", "ttnn/api/ttnn.relu6.rst", "ttnn/api/ttnn.relu6_bw.rst", "ttnn/api/ttnn.relu_bw.rst", "ttnn/api/ttnn.relu_max.rst", "ttnn/api/ttnn.relu_min.rst", "ttnn/api/ttnn.remainder.rst", "ttnn/api/ttnn.remainder_bw.rst", "ttnn/api/ttnn.repeat.rst", "ttnn/api/ttnn.repeat_bw.rst", "ttnn/api/ttnn.repeat_interleave.rst", "ttnn/api/ttnn.reshape.rst", "ttnn/api/ttnn.rms_norm.rst", "ttnn/api/ttnn.round.rst", "ttnn/api/ttnn.round_bw.rst", "ttnn/api/ttnn.rpow.rst", "ttnn/api/ttnn.rpow_bw.rst", "ttnn/api/ttnn.rsqrt.rst", "ttnn/api/ttnn.rsqrt_bw.rst", "ttnn/api/ttnn.rsub.rst", "ttnn/api/ttnn.rsub_bw.rst", "ttnn/api/ttnn.scatter.rst", "ttnn/api/ttnn.selu.rst", "ttnn/api/ttnn.selu_bw.rst", "ttnn/api/ttnn.set_printoptions.rst", "ttnn/api/ttnn.sigmoid.rst", "ttnn/api/ttnn.sigmoid_accurate.rst", "ttnn/api/ttnn.sigmoid_bw.rst", "ttnn/api/ttnn.sign.rst", "ttnn/api/ttnn.sign_bw.rst", "ttnn/api/ttnn.signbit.rst", "ttnn/api/ttnn.silu.rst", "ttnn/api/ttnn.silu_bw.rst", "ttnn/api/ttnn.sin.rst", "ttnn/api/ttnn.sin_bw.rst", "ttnn/api/ttnn.sinh.rst", "ttnn/api/ttnn.sinh_bw.rst", "ttnn/api/ttnn.slice.rst", "ttnn/api/ttnn.softmax.rst", "ttnn/api/ttnn.softplus.rst", "ttnn/api/ttnn.softplus_bw.rst", "ttnn/api/ttnn.softshrink.rst", "ttnn/api/ttnn.softshrink_bw.rst", "ttnn/api/ttnn.softsign.rst", "ttnn/api/ttnn.softsign_bw.rst", "ttnn/api/ttnn.sqrt.rst", "ttnn/api/ttnn.sqrt_bw.rst", "ttnn/api/ttnn.square.rst", "ttnn/api/ttnn.square_bw.rst", "ttnn/api/ttnn.squared_difference.rst", "ttnn/api/ttnn.squared_difference_bw.rst", "ttnn/api/ttnn.std.rst", "ttnn/api/ttnn.sub_bw.rst", "ttnn/api/ttnn.subalpha.rst", "ttnn/api/ttnn.subalpha_bw.rst", "ttnn/api/ttnn.subtract.rst", "ttnn/api/ttnn.sum.rst", "ttnn/api/ttnn.swiglu.rst", "ttnn/api/ttnn.swish.rst", "ttnn/api/ttnn.synchronize_device.rst", "ttnn/api/ttnn.tan.rst", "ttnn/api/ttnn.tan_bw.rst", "ttnn/api/ttnn.tanh.rst", "ttnn/api/ttnn.tanh_bw.rst", "ttnn/api/ttnn.tanhshrink.rst", "ttnn/api/ttnn.tanhshrink_bw.rst", "ttnn/api/ttnn.threshold.rst", "ttnn/api/ttnn.threshold_bw.rst", "ttnn/api/ttnn.tilize.rst", "ttnn/api/ttnn.tilize_with_val_padding.rst", "ttnn/api/ttnn.to_device.rst", "ttnn/api/ttnn.to_layout.rst", "ttnn/api/ttnn.to_memory_config.rst", "ttnn/api/ttnn.to_torch.rst", "ttnn/api/ttnn.topk.rst", "ttnn/api/ttnn.transformer.attention_softmax.rst", "ttnn/api/ttnn.transformer.attention_softmax_.rst", "ttnn/api/ttnn.transformer.concatenate_heads.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention.rst", "ttnn/api/ttnn.transformer.scaled_dot_product_attention_decode.rst", "ttnn/api/ttnn.transformer.split_query_key_value_and_split_heads.rst", "ttnn/api/ttnn.tril.rst", "ttnn/api/ttnn.triu.rst", "ttnn/api/ttnn.trunc.rst", "ttnn/api/ttnn.trunc_bw.rst", "ttnn/api/ttnn.unary_chain.rst", "ttnn/api/ttnn.untilize.rst", "ttnn/api/ttnn.untilize_with_unpadding.rst", "ttnn/api/ttnn.upsample.rst", "ttnn/api/ttnn.var.rst", "ttnn/api/ttnn.where.rst", "ttnn/api/ttnn.where_bw.rst", "ttnn/api/ttnn.xlogy.rst", "ttnn/api/ttnn.xlogy_bw.rst", "ttnn/api/ttnn.zeros.rst", "ttnn/api/ttnn.zeros_like.rst", "ttnn/converting_torch_model_to_ttnn.rst", "ttnn/demos.rst", "ttnn/dependencies/examples.rst", "ttnn/dependencies/index.rst", "ttnn/dependencies/tensor.rst", "ttnn/dependencies/tt_lib.rst", "ttnn/get_started.rst", "ttnn/installing.md", "ttnn/onboarding.rst", "ttnn/profiling_ttnn_operations.rst", "ttnn/tensor.rst", "ttnn/tutorials.rst", "ttnn/tutorials/graphing_torch_dit.rst", "ttnn/tutorials/matmul.rst", "ttnn/tutorials/multihead-attention.rst", "ttnn/tutorials/profiling.rst", "ttnn/tutorials/resnet-basic-block.rst", "ttnn/tutorials/tensor_and_add_operation.rst", "ttnn/tutorials/ttnn-tracer.rst", "ttnn/tutorials/ttnn_tutorials/001.ipynb", "ttnn/tutorials/ttnn_tutorials/002.ipynb", "ttnn/tutorials/ttnn_tutorials/003.ipynb", "ttnn/tutorials/ttnn_tutorials/004.ipynb", "ttnn/tutorials/ttnn_tutorials/005.ipynb", "ttnn/tutorials/ttnn_tutorials/006.ipynb", "ttnn/tutorials/ttnn_tutorials/007.ipynb", "ttnn/usage.rst"], "titles": ["Welcome to TT-NN documentation!", "Contributing as a developer", "Support", "Performance", "Getting Started", "What is TT-NN?", "Adding New TT-NN Operation", "APIs", "ttnn.Conv2dConfig", "ttnn.Conv2dSliceConfig", "ttnn.GetDefaultDevice", "ttnn.SetDefaultDevice", "ttnn.abs", "ttnn.abs_bw", "ttnn.acos", "ttnn.acos_bw", "ttnn.acosh", "ttnn.acosh_bw", "ttnn.add", "ttnn.add_bw", "ttnn.addalpha", "ttnn.addalpha_bw", "ttnn.addcdiv", "ttnn.addcdiv_bw", "ttnn.addcmul", "ttnn.addcmul_bw", "ttnn.all_gather", "ttnn.angle", "ttnn.angle_bw", "ttnn.arange", "ttnn.argmax", "ttnn.as_tensor", "ttnn.asin", "ttnn.asin_bw", "ttnn.asinh", "ttnn.asinh_bw", "ttnn.assign_bw", "ttnn.atan", "ttnn.atan2", "ttnn.atan2_bw", "ttnn.atan_bw", "ttnn.atanh", "ttnn.atanh_bw", "ttnn.batch_norm", "ttnn.bias_gelu_bw", "ttnn.bitwise_and", "ttnn.bitwise_left_shift", "ttnn.bitwise_not", "ttnn.bitwise_or", "ttnn.bitwise_right_shift", "ttnn.bitwise_xor", "ttnn.cbrt", "ttnn.ceil", "ttnn.ceil_bw", "ttnn.celu", "ttnn.celu_bw", "ttnn.clamp", "ttnn.clamp_bw", "ttnn.clip", "ttnn.clip_bw", "ttnn.clone", "ttnn.close_device", "ttnn.concat", "ttnn.concat_bw", "ttnn.conj", "ttnn.conj_bw", "ttnn.conv1d", "ttnn.conv2d", "ttnn.conv_transpose2d", "ttnn.cos", "ttnn.cos_bw", "ttnn.cosh", "ttnn.cosh_bw", "ttnn.create_sharded_memory_config", "ttnn.deallocate", "ttnn.deg2rad", "ttnn.deg2rad_bw", "ttnn.digamma", "ttnn.digamma_bw", "ttnn.div", "ttnn.div_bw", "ttnn.div_no_nan", "ttnn.div_no_nan_bw", "ttnn.downsample", "ttnn.dump_tensor", "ttnn.elu", "ttnn.elu_bw", "ttnn.embedding", "ttnn.embedding_bw", "ttnn.empty", "ttnn.empty_like", "ttnn.eq", "ttnn.eq_", "ttnn.eqz", "ttnn.erf", "ttnn.erf_bw", "ttnn.erfc", "ttnn.erfc_bw", "ttnn.erfinv", "ttnn.erfinv_bw", "ttnn.exp", "ttnn.exp2", "ttnn.exp2_bw", "ttnn.exp_bw", "ttnn.experimental.all_reduce", "ttnn.experimental.conv3d", "ttnn.experimental.cumprod", "ttnn.experimental.cumsum", "ttnn.experimental.dropout", "ttnn.experimental.gelu_bw", "ttnn.experimental.rotary_embedding", "ttnn.experimental.sort", "ttnn.expm1", "ttnn.expm1_bw", "ttnn.fill", "ttnn.fill_bw", "ttnn.fill_ones_rm", "ttnn.fill_rm", "ttnn.fill_zero_bw", "ttnn.floor", "ttnn.floor_bw", "ttnn.floor_div", "ttnn.fmod", "ttnn.fmod_bw", "ttnn.format_input_tensor", "ttnn.format_output_tensor", "ttnn.frac", "ttnn.frac_bw", "ttnn.from_device", "ttnn.from_torch", "ttnn.full", "ttnn.full_like", "ttnn.gcd", "ttnn.ge", "ttnn.ge_", "ttnn.geglu", "ttnn.gelu", "ttnn.gelu_bw", "ttnn.gez", "ttnn.global_avg_pool2d", "ttnn.glu", "ttnn.group_norm", "ttnn.gt", "ttnn.gt_", "ttnn.gtz", "ttnn.hardshrink", "ttnn.hardshrink_bw", "ttnn.hardsigmoid", "ttnn.hardsigmoid_bw", "ttnn.hardswish", "ttnn.hardswish_bw", "ttnn.hardtanh", "ttnn.hardtanh_bw", "ttnn.heaviside", "ttnn.hypot", "ttnn.hypot_bw", "ttnn.i0", "ttnn.i0_bw", "ttnn.identity", "ttnn.imag", "ttnn.imag_bw", "ttnn.indexed_fill", "ttnn.is_imag", "ttnn.is_real", "ttnn.isclose", "ttnn.isfinite", "ttnn.isinf", "ttnn.isnan", "ttnn.isneginf", "ttnn.isposinf", "ttnn.kv_cache.fill_cache_for_user_", "ttnn.kv_cache.update_cache_for_token_", "ttnn.l1_loss", "ttnn.layer_norm", "ttnn.lcm", "ttnn.ldexp", "ttnn.ldexp_bw", "ttnn.le", "ttnn.le_", "ttnn.leaky_relu", "ttnn.leaky_relu_bw", "ttnn.lerp", "ttnn.lerp_bw", "ttnn.lez", "ttnn.lgamma", "ttnn.lgamma_bw", "ttnn.linear", "ttnn.load_tensor", "ttnn.log", "ttnn.log10", "ttnn.log10_bw", "ttnn.log1p", "ttnn.log1p_bw", "ttnn.log2", "ttnn.log2_bw", "ttnn.log_bw", "ttnn.log_sigmoid", "ttnn.log_sigmoid_bw", "ttnn.logaddexp", "ttnn.logaddexp2", "ttnn.logaddexp2_bw", "ttnn.logaddexp_bw", "ttnn.logical_and", "ttnn.logical_and_", "ttnn.logical_not", "ttnn.logical_not_", "ttnn.logical_or", "ttnn.logical_or_", "ttnn.logical_xor", "ttnn.logical_xor_", "ttnn.logit", "ttnn.logit_bw", "ttnn.logiteps_bw", "ttnn.lt", "ttnn.lt_", "ttnn.ltz", "ttnn.mac", "ttnn.manage_device", "ttnn.matmul", "ttnn.max", "ttnn.max_bw", "ttnn.max_pool2d", "ttnn.maximum", "ttnn.mean", "ttnn.min", "ttnn.min_bw", "ttnn.minimum", "ttnn.mish", "ttnn.model_preprocessing.preprocess_model", "ttnn.model_preprocessing.preprocess_model_parameters", "ttnn.moreh_sum", "ttnn.mse_loss", "ttnn.mul_bw", "ttnn.multigammaln", "ttnn.multigammaln_bw", "ttnn.multiply", "ttnn.ne", "ttnn.ne_", "ttnn.neg", "ttnn.neg_bw", "ttnn.nextafter", "ttnn.nez", "ttnn.nonzero", "ttnn.normalize_global", "ttnn.normalize_hw", "ttnn.ones", "ttnn.ones_like", "ttnn.open_device", "ttnn.outer", "ttnn.pad", "ttnn.pad_to_tile_shape", "ttnn.permute", "ttnn.polar", "ttnn.polar_bw", "ttnn.polygamma", "ttnn.polygamma_bw", "ttnn.polyval", "ttnn.pow", "ttnn.pow_bw", "ttnn.prelu", "ttnn.prepare_conv_bias", "ttnn.prepare_conv_weights", "ttnn.prod", "ttnn.prod_bw", "ttnn.rad2deg", "ttnn.rad2deg_bw", "ttnn.rdiv", "ttnn.rdiv_bw", "ttnn.real", "ttnn.real_bw", "ttnn.reallocate", "ttnn.reciprocal", "ttnn.reciprocal_bw", "ttnn.reduce_scatter", "ttnn.register_post_operation_hook", "ttnn.register_pre_operation_hook", "ttnn.reglu", "ttnn.relu", "ttnn.relu6", "ttnn.relu6_bw", "ttnn.relu_bw", "ttnn.relu_max", "ttnn.relu_min", "ttnn.remainder", "ttnn.remainder_bw", "ttnn.repeat", "ttnn.repeat_bw", "ttnn.repeat_interleave", "ttnn.reshape", "ttnn.rms_norm", "ttnn.round", "ttnn.round_bw", "ttnn.rpow", "ttnn.rpow_bw", "ttnn.rsqrt", "ttnn.rsqrt_bw", "ttnn.rsub", "ttnn.rsub_bw", "ttnn.scatter", "ttnn.selu", "ttnn.selu_bw", "ttnn.set_printoptions", "ttnn.sigmoid", "ttnn.sigmoid_accurate", "ttnn.sigmoid_bw", "ttnn.sign", "ttnn.sign_bw", "ttnn.signbit", "ttnn.silu", "ttnn.silu_bw", "ttnn.sin", "ttnn.sin_bw", "ttnn.sinh", "ttnn.sinh_bw", "ttnn.slice", "ttnn.softmax", "ttnn.softplus", "ttnn.softplus_bw", "ttnn.softshrink", "ttnn.softshrink_bw", "ttnn.softsign", "ttnn.softsign_bw", "ttnn.sqrt", "ttnn.sqrt_bw", "ttnn.square", "ttnn.square_bw", "ttnn.squared_difference", "ttnn.squared_difference_bw", "ttnn.std", "ttnn.sub_bw", "ttnn.subalpha", "ttnn.subalpha_bw", "ttnn.subtract", "ttnn.sum", "ttnn.swiglu", "ttnn.swish", "ttnn.synchronize_device", "ttnn.tan", "ttnn.tan_bw", "ttnn.tanh", "ttnn.tanh_bw", "ttnn.tanhshrink", "ttnn.tanhshrink_bw", "ttnn.threshold", "ttnn.threshold_bw", "ttnn.tilize", "ttnn.tilize_with_val_padding", "ttnn.to_device", "ttnn.to_layout", "ttnn.to_memory_config", "ttnn.to_torch", "ttnn.topk", "ttnn.transformer.attention_softmax", "ttnn.transformer.attention_softmax_", "ttnn.transformer.concatenate_heads", "ttnn.transformer.scaled_dot_product_attention", "ttnn.transformer.scaled_dot_product_attention_decode", "ttnn.transformer.split_query_key_value_and_split_heads", "ttnn.tril", "ttnn.triu", "ttnn.trunc", "ttnn.trunc_bw", "ttnn.unary_chain", "ttnn.untilize", "ttnn.untilize_with_unpadding", "ttnn.upsample", "ttnn.var", "ttnn.where", "ttnn.where_bw", "ttnn.xlogy", "ttnn.xlogy_bw", "ttnn.zeros", "ttnn.zeros_like", "Converting PyTorch Model to TT-NN", "Building and Uplifting Demos", "Examples of Tensor and TT-LIB Use", "Dependencies", "Tensor", "TT-LIB", "Getting Started", "Install", "Onboarding New Functionality", "Profiling TT-NN Operations", "Tensor", "Tutorials", "Graphing Torch DiT_XL_2 With TTNN", "Matmul Operation", "Multi-Head Attention", "ttnn Profiling", "Resnet Basic Block", "Tensor and Add Operation", "ttnn Tracer", "Tensor and Add Operation", "Matrix Multiplication", "Multi-Head Attention", "Tracing ttnn operations and torch modules/functions", "Profiling ttnn operations", "Resnet Block", "Build a graph of a pytorch based model", "Using TT-NN"], "terms": {"what": [0, 374, 382, 398], "i": [0, 3, 4, 8, 9, 10, 11, 16, 19, 21, 30, 34, 39, 41, 43, 44, 47, 61, 62, 63, 73, 79, 80, 83, 87, 88, 91, 104, 106, 110, 111, 114, 116, 117, 124, 125, 127, 129, 133, 135, 139, 140, 142, 155, 157, 162, 163, 176, 177, 182, 186, 189, 193, 200, 201, 213, 217, 218, 220, 221, 225, 228, 229, 232, 234, 236, 247, 249, 250, 252, 254, 256, 257, 259, 266, 271, 273, 274, 275, 276, 281, 282, 287, 288, 292, 297, 314, 315, 327, 329, 331, 334, 336, 337, 338, 348, 350, 351, 352, 353, 355, 356, 357, 365, 370, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399], "get": [0, 8, 10, 302, 354, 373, 375, 377, 380, 384, 389, 392, 393, 394, 395, 396], "start": [0, 29, 181, 314, 373, 377, 378, 380, 382, 394, 396], "1": [0, 3, 8, 9, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 70, 72, 76, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 127, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 265, 266, 267, 268, 269, 271, 272, 273, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 306, 309, 311, 313, 314, 315, 316, 317, 318, 319, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 342, 343, 344, 348, 355, 356, 357, 360, 361, 366, 367, 368, 369, 370, 371, 372, 375, 377, 378, 381, 383, 392, 393, 394, 395, 396, 397, 398], "instal": [0, 3, 374, 382, 384, 396, 398], "build": [0, 375, 384, 385, 388, 396], "2": [0, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 164, 165, 166, 167, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 262, 264, 265, 266, 267, 269, 271, 272, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 350, 355, 357, 358, 359, 360, 361, 362, 366, 367, 368, 369, 370, 371, 372, 376, 377, 383, 384, 385, 392, 393, 394, 395, 396, 397], "explor": 0, "our": [0, 3, 4, 374, 381, 383, 392], "demo": [0, 4, 380, 382, 395], "3": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 249, 251, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 350, 357, 358, 359, 360, 361, 362, 367, 368, 369, 370, 371, 372, 377, 378, 383, 392, 393, 394, 395, 396, 397, 398], "tutori": [0, 385, 388, 389, 394, 398], "multi": [0, 26, 31, 83, 84, 104, 273, 365, 383, 384, 392], "head": [0, 352, 353, 354, 355, 357, 380, 384], "attent": [0, 352, 353, 355, 356, 357, 384], "simpl": [0, 380, 396, 398], "4": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 358, 359, 360, 361, 362, 367, 368, 369, 370, 371, 372, 377, 378, 383, 392, 393, 394, 395, 396, 397, 398], "optim": [0, 8, 383, 384, 387, 392], "where": [0, 2, 3, 4, 29, 73, 89, 90, 124, 125, 186, 218, 242, 259, 348, 368, 374, 378, 382, 383, 398], "To": [0, 3, 375, 378, 381, 392, 393, 399], "go": [0, 392], "from": [0, 2, 3, 4, 6, 8, 29, 31, 61, 62, 66, 67, 68, 88, 129, 170, 171, 187, 260, 261, 296, 297, 332, 364, 373, 374, 376, 377, 382, 383, 384, 385, 389, 392, 394, 395, 396], "here": [0, 2, 6, 380, 393, 398], "prerequisit": 0, "set": [0, 3, 4, 8, 11, 62, 68, 116, 218, 234, 251, 301, 336, 354, 357, 373, 375, 377, 378, 382, 384, 392, 395, 396, 397, 398, 399], "up": [0, 5, 117, 378, 382, 384, 393, 398], "hardwar": [0, 2, 6, 247, 373, 374, 379, 383, 392, 399], "driver": [0, 392, 393, 394, 395, 396, 397], "firmwar": 0, "system": [0, 16, 34, 41, 114, 135, 140, 266, 276, 281, 282, 292, 334, 382], "level": [0, 382], "depend": [0, 4, 260, 261, 348, 374, 382, 383, 384, 396], "kmd": 0, "updat": [0, 43, 171, 374, 381, 399], "devic": [0, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 382, 383, 384, 386, 387, 390, 395, 396, 397, 398], "flash": [0, 356], "manag": [0, 217, 274, 275, 374], "interfac": [0, 378], "smi": 0, "option": [0, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 377, 382, 398, 399], "card": 0, "configur": [0, 3, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 377, 384, 386, 387, 395], "topologi": [0, 26, 104, 273], "metalium": [0, 3, 4, 6], "There": [0, 6, 218, 373, 377, 378, 383], "ar": [0, 3, 4, 8, 9, 11, 19, 26, 38, 46, 49, 60, 62, 80, 104, 117, 186, 218, 221, 242, 251, 257, 273, 274, 275, 292, 314, 336, 351, 357, 365, 373, 374, 375, 377, 378, 379, 382, 383, 384, 385, 388, 389, 392, 393, 394, 399], "three": 0, "sourc": [0, 3, 4, 5, 170, 384, 388], "step": [0, 29, 314, 374, 375, 381, 392, 398], "clone": [0, 158, 357, 384, 385, 392, 393, 394, 395], "repositori": [0, 1, 379], "invok": [0, 6], "script": [0, 3, 4, 374, 382], "docker": 0, "releas": [0, 74], "imag": [0, 68, 162, 252, 374, 378, 382, 383, 398], "wheel": [0, 396], "download": [0, 384, 385, 395, 396], "latest": [0, 382], "For": [0, 6, 8, 13, 23, 31, 44, 67, 80, 111, 123, 129, 137, 155, 182, 190, 192, 194, 195, 197, 200, 201, 211, 212, 218, 258, 263, 267, 272, 284, 317, 323, 357, 370, 373, 374, 377, 381, 382, 383], "user": [0, 4, 6, 158, 186, 218, 228, 229, 247, 346, 374, 379, 381, 392, 393, 394, 395, 396, 397, 398], "onli": [0, 6, 8, 9, 19, 21, 22, 24, 26, 30, 39, 44, 47, 52, 56, 57, 58, 59, 62, 63, 73, 79, 80, 84, 88, 106, 117, 119, 122, 129, 135, 140, 155, 176, 181, 182, 189, 193, 200, 201, 216, 218, 220, 225, 227, 232, 249, 254, 260, 261, 266, 271, 273, 276, 283, 284, 297, 327, 329, 331, 334, 336, 356, 357, 367, 370, 373, 374, 377, 378, 382, 383, 384, 385, 388, 389, 397, 399], "environ": [0, 3, 4, 378, 379, 394, 395, 396, 398, 399], "you": [0, 1, 2, 3, 4, 6, 316, 374, 375, 377, 378, 379, 382, 384, 395, 398, 399], "all": [0, 6, 8, 26, 30, 104, 139, 218, 228, 229, 249, 256, 262, 263, 273, 336, 373, 374, 377, 378, 381, 382, 383, 392, 394, 396], "verifi": [0, 381], "your": [0, 374, 375, 378, 382, 384], "try": [0, 8, 374, 392, 396], "execut": [0, 3, 8, 274, 275, 374, 375, 378, 382, 393, 394, 396, 399], "program": [0, 3, 5, 6, 26, 186, 218, 273, 352, 353, 376, 382, 384, 386, 387, 392, 395, 396, 397], "exampl": [0, 111, 128, 251, 262, 287, 336, 347, 374, 376, 378, 379, 381, 382, 383, 392, 398], "interest": 0, "contribut": [0, 2, 379], "us": [0, 3, 4, 5, 6, 8, 9, 10, 11, 26, 31, 44, 62, 66, 67, 68, 73, 80, 87, 88, 90, 94, 96, 100, 104, 108, 109, 110, 111, 117, 129, 131, 136, 137, 155, 158, 186, 218, 221, 228, 229, 246, 247, 249, 260, 266, 267, 273, 274, 275, 286, 294, 301, 302, 315, 316, 345, 346, 348, 349, 350, 351, 356, 357, 363, 364, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 390, 391, 396, 398], "basic": [0, 379, 380, 384], "convert": [0, 5, 6, 8, 31, 60, 129, 228, 229, 260, 261, 349, 350, 375, 376, 384, 387, 390, 393], "torch": [0, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 357, 358, 359, 360, 361, 362, 366, 367, 368, 369, 370, 372, 373, 375, 377, 383, 384, 386, 387, 389, 390, 391, 396, 398], "tensor": [0, 4, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 382, 384, 386, 394, 395, 397, 398], "run": [0, 5, 6, 26, 43, 104, 129, 228, 273, 274, 275, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 392, 393, 396], "an": [0, 2, 3, 5, 6, 26, 62, 66, 67, 68, 87, 104, 105, 117, 118, 122, 139, 217, 218, 252, 259, 273, 283, 347, 350, 374, 377, 378, 379, 380, 381, 382, 383, 392, 394, 398], "oper": [0, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 379, 381, 383, 384, 388, 391, 393, 394], "__getitem__": 0, "slice": [0, 9, 378], "enabl": [0, 3, 5, 8, 378, 381, 382, 384, 386, 387, 392, 395, 396, 397, 398], "cach": [0, 3, 5, 31, 61, 110, 170, 171, 228, 229, 376, 382, 383, 384, 386, 387, 392, 395, 396, 397, 398], "5": [0, 29, 43, 54, 57, 59, 73, 77, 87, 89, 111, 131, 145, 146, 147, 149, 164, 210, 233, 259, 267, 318, 319, 377, 380, 392, 393, 394, 395, 396, 397, 398], "debug": [0, 5, 6, 378, 381, 392, 393, 394, 395, 397], "intermedi": 0, "6": [0, 29, 111, 233, 290, 377, 383, 392, 393, 394, 395, 396, 397, 398], "trace": [0, 5, 247, 384, 389, 391, 398], "graph": [0, 5, 228, 376, 384, 389, 395], "7": [0, 87, 130, 290, 377, 392, 393, 394, 395, 396, 397, 398], "tt_lib": [0, 116, 117, 347, 375, 376], "8": [0, 8, 26, 29, 73, 87, 104, 151, 249, 273, 377, 382, 383, 392, 393, 394, 395, 396, 397, 398], "log": [0, 8, 197, 369, 376, 382, 393, 395, 396], "9": [0, 56, 58, 71, 87, 89, 312, 377, 380, 392, 393, 394, 395, 396, 397, 398], "support": [0, 1, 5, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 126, 127, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 356, 358, 359, 360, 361, 362, 367, 368, 369, 370, 371, 372, 375, 377, 378, 383, 392, 397], "python": [0, 4, 5, 378, 380, 381, 382, 396, 398], "10": [0, 29, 74, 87, 128, 139, 157, 186, 218, 254, 270, 343, 347, 348, 349, 375, 377, 380, 392, 393, 394, 395, 396, 398], "chang": [0, 288, 345, 346, 363, 364, 378, 380, 392, 396], "string": [0, 8, 44, 79, 137, 228, 229, 266, 267, 301, 378], "represent": [0, 316, 378, 383], "11": [0, 89, 392, 393, 394, 395, 396, 397], "visual": [0, 5, 395, 397, 398], "web": 0, "browser": [0, 384], "12": [0, 63, 141, 173, 249, 289, 373, 380, 392, 393, 394, 396, 397, 398], "regist": [0, 5, 6, 274, 275], "pre": [0, 6, 221, 275, 380, 384, 385, 387, 396], "post": [0, 274, 382], "hook": [0, 274, 275, 396], "13": [0, 392, 393, 394, 396, 398], "queri": [0, 357, 378, 394], "14": [0, 3, 63, 392, 393, 394, 396], "fall": [0, 176], "back": [0, 6, 354, 375, 382, 392], "15": [0, 380, 394, 396], "captur": [0, 398], "c": [0, 5, 9, 43, 66, 67, 68, 83, 105, 116, 117, 218, 221, 302, 365, 378, 382, 383, 392, 393, 394, 395, 396, 397], "function": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 384, 391, 392], "buffer": [0, 6, 8, 26, 74, 104, 247, 273, 376, 377, 378, 382, 383], "alloc": [0, 6, 29, 89, 90, 130, 131, 245, 246, 371, 372, 383, 392, 393, 394, 395, 396, 397], "etc": [0, 5, 6, 377], "shape": [0, 29, 43, 62, 73, 89, 90, 106, 114, 124, 125, 130, 131, 139, 186, 218, 221, 242, 245, 246, 249, 250, 251, 285, 286, 287, 288, 314, 346, 354, 357, 364, 371, 372, 373, 375, 377, 378, 382, 392, 393, 394, 397, 398], "layout": [0, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 350, 351, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 375, 377, 378, 382, 384, 386, 390, 394, 397, 399], "data": [0, 5, 8, 18, 29, 30, 31, 60, 83, 87, 88, 89, 90, 91, 116, 117, 129, 130, 131, 133, 139, 142, 175, 177, 186, 198, 199, 202, 206, 208, 213, 218, 222, 226, 235, 236, 245, 246, 266, 296, 326, 332, 345, 346, 348, 349, 350, 351, 363, 364, 365, 371, 372, 373, 375, 377, 378, 382, 384, 390, 396, 399], "type": [0, 5, 6, 8, 9, 18, 29, 30, 31, 44, 60, 66, 67, 68, 80, 87, 88, 89, 90, 91, 105, 106, 116, 117, 122, 124, 129, 130, 131, 133, 137, 139, 142, 175, 177, 186, 198, 199, 202, 206, 208, 213, 218, 222, 226, 235, 236, 245, 246, 247, 251, 260, 261, 266, 270, 283, 288, 296, 315, 326, 332, 336, 345, 346, 348, 349, 350, 351, 363, 364, 371, 372, 373, 375, 376, 377, 382, 384, 390, 396, 398], "limit": [0, 13, 23, 44, 80, 123, 137, 155, 186, 190, 192, 194, 195, 197, 200, 201, 211, 212, 258, 263, 267, 272, 284, 317, 323, 370, 374, 378], "bfloat8_b": [0, 8, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 32, 35, 36, 37, 38, 39, 40, 44, 52, 54, 63, 69, 70, 71, 75, 76, 77, 78, 80, 82, 85, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 112, 113, 114, 119, 123, 126, 127, 129, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 220, 225, 227, 232, 235, 236, 237, 238, 239, 240, 241, 256, 257, 258, 259, 263, 264, 265, 267, 271, 272, 276, 277, 278, 280, 281, 284, 290, 293, 294, 295, 296, 297, 299, 300, 303, 304, 305, 308, 309, 310, 311, 312, 317, 318, 319, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 334, 335, 337, 338, 339, 341, 342, 350, 358, 359, 360, 362, 367, 368, 370, 373, 377, 382, 394], "storag": [0, 8, 376, 378, 384, 390], "shard": [0, 8, 19, 62, 73, 186, 218, 221, 260, 261, 347, 349, 357], "memori": [0, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 382, 392, 394], "config": [0, 8, 26, 64, 87, 88, 104, 105, 124, 125, 218, 252, 273, 288, 314, 352, 353, 354, 373, 380, 384, 386, 392, 394, 395, 396, 397, 399], "api": [0, 4, 6, 355, 373, 376, 379, 380, 381, 394, 399], "rank": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 126, 127, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 222, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 248, 249, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 350, 358, 359, 360, 361, 362, 367, 368, 369, 370, 371, 372, 377, 383], "to_rank": [0, 383], "open_devic": [0, 11, 61, 74, 87, 88, 128, 187, 270, 336, 347, 348, 349, 377, 392, 393, 394, 395, 399], "close_devic": [0, 392, 393, 394, 395, 397, 399], "manage_devic": [0, 399], "synchronize_devic": 0, "setdefaultdevic": [0, 375, 378], "getdefaultdevic": 0, "format_input_tensor": 0, "format_output_tensor": 0, "pad_to_tile_shap": 0, "create_sharded_memory_config": [0, 383], "core": [0, 6, 8, 73, 186, 218, 247, 348, 349, 363, 373, 378, 382, 383, 393, 394, 396], "as_tensor": [0, 392, 393, 394, 395, 397], "from_torch": [0, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 358, 359, 360, 361, 362, 366, 367, 368, 369, 370, 372, 373, 392, 393, 394, 395, 397, 399], "to_torch": [0, 6, 249, 373, 377, 392, 393, 394, 395, 397, 399], "to_devic": [0, 26, 27, 28, 64, 65, 74, 82, 87, 128, 159, 160, 161, 162, 163, 172, 186, 218, 219, 221, 223, 224, 231, 242, 251, 252, 253, 255, 268, 269, 270, 293, 315, 328, 333, 348, 349, 366, 392, 393, 394, 395, 397], "from_devic": [0, 392, 393, 394, 395, 396, 397], "to_layout": [0, 74, 129, 350, 383, 392, 393, 394], "dump_tensor": [0, 392, 393, 394, 395, 397], "load_tensor": [0, 392, 393, 394, 395, 396, 397], "dealloc": [0, 8, 270, 383, 392, 393, 394, 395, 397, 399], "realloc": [0, 392, 393, 394, 395, 397], "to_memory_config": [0, 383, 397], "creation": [0, 29, 89, 90, 129, 130, 131, 245, 246, 371, 372, 377], "arang": [0, 377, 392, 393, 394, 395], "empti": [0, 6, 8, 378, 398, 399], "empty_lik": 0, "zero": [0, 62, 66, 67, 68, 79, 108, 118, 131, 217, 242, 251, 260, 261, 271, 314, 315, 377, 378, 383, 395, 399], "zeros_lik": [0, 106], "ones": [0, 84, 124, 378], "ones_lik": 0, "full": [0, 374, 376, 378, 382, 399], "full_lik": 0, "matrix": [0, 5, 8, 87, 186, 218, 380, 383, 384, 386, 392, 399], "multipl": [0, 5, 6, 8, 60, 74, 117, 130, 135, 140, 174, 218, 228, 245, 260, 261, 276, 334, 348, 371, 377, 378, 382, 384, 386], "matmul": [0, 186, 384, 392, 393, 394, 395, 396], "linear": [0, 26, 104, 273, 316, 373, 376, 378, 392, 393, 394, 395], "pointwis": 0, "unari": [0, 6, 12, 14, 16, 32, 34, 37, 41, 47, 51, 52, 54, 56, 58, 69, 71, 75, 77, 85, 93, 94, 96, 98, 100, 101, 112, 114, 119, 126, 135, 136, 138, 140, 144, 145, 147, 149, 151, 153, 156, 158, 165, 166, 167, 168, 169, 179, 183, 184, 188, 189, 191, 193, 196, 204, 205, 210, 215, 227, 233, 238, 241, 243, 244, 254, 264, 266, 267, 271, 276, 277, 278, 281, 282, 290, 292, 294, 299, 302, 303, 305, 307, 308, 310, 312, 316, 318, 320, 322, 324, 334, 335, 337, 339, 341, 343, 358, 359, 360, 362], "ab": [0, 13], "aco": [0, 15], "acosh": [0, 17], "asin": [0, 33], "asinh": [0, 35], "atan": [0, 40], "atanh": [0, 42], "bitwise_not": [0, 376, 378], "bitwise_left_shift": 0, "bitwise_right_shift": 0, "cbrt": 0, "ceil": [0, 53, 221, 376, 378], "celu": [0, 55, 392, 393, 394, 395], "clamp": [0, 57], "clip": [0, 59, 392, 393, 394, 395], "co": 0, "cosh": [0, 72], "deg2rad": [0, 76], "digamma": [0, 78], "experiment": [0, 4, 374, 376, 396], "dropout": 0, "gelu_bw": 0, "elu": [0, 86], "eqz": 0, "erf": [0, 95], "erfc": [0, 97], "erfinv": [0, 99], "exp": [0, 362, 375, 378, 395, 399], "exp2": [0, 102], "expm1": [0, 113], "fill": [0, 115, 117, 118, 130, 131, 245, 246, 285, 314, 371, 372, 378, 382], "floor": [0, 79, 80, 120, 121, 266, 267, 283, 376, 378], "frac": [0, 38, 79, 127, 378], "geglu": [0, 392, 393, 394, 395], "gelu": [0, 8, 109, 135, 137, 373, 378], "glu": [0, 392, 393, 394, 395], "gez": 0, "gtz": 0, "hardshrink": [0, 146, 180, 392, 393, 394, 395], "hardsigmoid": [0, 148], "hardswish": [0, 150], "hardtanh": [0, 152], "heavisid": 0, "i0": [0, 157], "ident": [0, 397], "isfinit": 0, "isinf": 0, "isnan": 0, "isneginf": 0, "isposinf": 0, "leaky_relu": [0, 180], "lez": 0, "lgamma": [0, 185], "log10": [0, 190], "log1p": [0, 192], "log2": [0, 194], "log_sigmoid": 0, "logical_not": [0, 205], "logical_not_": 0, "logit": [0, 211, 392, 393, 394, 395], "ltz": 0, "mish": [0, 8], "multigammaln": 0, "neg": [0, 239, 258, 378], "nez": 0, "normalize_glob": 0, "normalize_hw": 0, "polygamma": [0, 255, 392, 393, 394, 395], "prelu": 0, "rad2deg": [0, 265], "rdiv": [0, 267], "reciproc": [0, 272, 295, 383], "reglu": [0, 392, 393, 394, 395], "relu": [0, 8, 18, 179, 235, 276, 280, 281, 282, 316, 332, 362, 375, 397], "relu_max": 0, "relu_min": 0, "relu6": [0, 279], "remaind": [0, 284], "round": [0, 36, 79, 80, 266, 267, 291, 383], "rsqrt": 0, "selu": [0, 300], "sigmoid": [0, 8, 197, 304, 378], "sigmoid_accur": 0, "sign": [0, 306, 378], "signbit": 0, "silu": [0, 8, 309, 334, 375, 376, 378, 399], "sin": [0, 311], "sinh": [0, 313], "softmax": [0, 352, 353, 376, 378, 394], "softplu": [0, 8, 317], "softshrink": [0, 319, 392, 393, 394, 395], "softsign": [0, 321], "sqrt": [0, 8, 154, 378], "squar": [0, 8, 231, 295, 323, 325, 326, 352, 353, 383], "swiglu": [0, 392, 393, 394, 395], "swish": [0, 378], "tan": [0, 338], "tanh": [0, 8, 44, 109, 137, 340], "tanhshrink": [0, 342], "threshold": [0, 316, 317, 344, 392, 393, 394, 395], "tril": 0, "triu": 0, "trunc": [0, 79, 80, 122, 266, 267, 376, 378], "unary_chain": 0, "clamp_bw": 0, "clip_bw": 0, "hardtanh_bw": 0, "threshold_bw": 0, "softplus_bw": 0, "rdiv_bw": 0, "pow_bw": 0, "exp_bw": 0, "tanh_bw": 0, "sqrt_bw": 0, "multigammaln_bw": 0, "lgamma_bw": 0, "fill_bw": 0, "hardsigmoid_bw": 0, "cos_bw": 0, "acosh_bw": 0, "acos_bw": 0, "atan_bw": 0, "rad2deg_bw": 0, "frac_bw": 0, "trunc_bw": 0, "log_sigmoid_bw": 0, "fill_zero_bw": 0, "i0_bw": 0, "tan_bw": 0, "sigmoid_bw": 0, "rsqrt_bw": 0, "neg_bw": 0, "relu_bw": 0, "logit_bw": 0, "hardshrink_bw": 0, "softshrink_bw": 0, "leaky_relu_bw": 0, "elu_bw": 0, "celu_bw": 0, "rpow_bw": 0, "floor_bw": 0, "round_bw": 0, "log_bw": 0, "relu6_bw": 0, "abs_bw": 0, "silu_bw": 0, "selu_bw": 0, "square_bw": 0, "prod_bw": 0, "hardswish_bw": 0, "tanhshrink_bw": 0, "atanh_bw": 0, "asin_bw": 0, "asinh_bw": 0, "sin_bw": 0, "sinh_bw": 0, "log10_bw": 0, "log1p_bw": 0, "erfc_bw": 0, "ceil_bw": 0, "softsign_bw": 0, "cosh_bw": 0, "logiteps_bw": 0, "log2_bw": 0, "sign_bw": 0, "div_no_nan_bw": 0, "exp2_bw": 0, "expm1_bw": 0, "reciprocal_bw": 0, "digamma_bw": 0, "erfinv_bw": 0, "erf_bw": 0, "deg2rad_bw": 0, "polygamma_bw": 0, "repeat_bw": 0, "real": [0, 163, 252, 269, 374, 377], "angl": [0, 28], "is_imag": 0, "is_real": 0, "polar_bw": 0, "imag_bw": 0, "real_bw": 0, "angle_bw": 0, "conj_bw": 0, "conj": [0, 65], "polar": [0, 253], "binari": [0, 18, 20, 38, 45, 46, 48, 49, 50, 79, 81, 91, 92, 121, 122, 132, 133, 134, 142, 143, 154, 164, 174, 175, 177, 178, 198, 199, 202, 203, 206, 207, 208, 209, 213, 214, 222, 226, 235, 236, 237, 240, 248, 256, 257, 259, 283, 296, 298, 326, 330, 332, 369, 378], "add": [0, 19, 249, 352, 353, 374, 378, 380, 381, 384, 394, 396, 397, 399], "addalpha": [0, 21], "subalpha": [0, 331], "multipli": [0, 8, 20, 22, 24, 186, 218, 232, 330, 365, 378, 384, 386, 399], "subtract": [0, 3, 296, 297, 329, 357, 399], "div": [0, 122, 283], "div_no_nan": [0, 82], "floor_div": 0, "fmod": [0, 123], "gcd": 0, "lcm": 0, "logical_and_": 0, "logical_or_": 0, "logical_xor_": 0, "rpow": [0, 293], "rsub": 0, "ldexp": [0, 176], "logical_and": 0, "logical_or": 0, "logical_xor": [0, 392, 393, 394, 395], "bitwise_and": [0, 46, 49], "bitwise_or": 0, "bitwise_xor": 0, "logaddexp": [0, 201], "logaddexp2": [0, 200], "hypot": [0, 155, 392, 393, 394, 395], "xlogi": [0, 370, 392, 393, 394, 395], "squared_differ": [0, 327], "gt": [0, 392, 393, 394, 395, 396, 397, 398], "gt_": 0, "lt_": 0, "ge_": 0, "le_": 0, "eq_": 0, "ne_": 0, "ge": 0, "lt": [0, 392, 393, 394, 395, 396, 397, 398], "le": 0, "eq": 0, "ne": 0, "isclos": [0, 392, 393, 394, 395], "nextaft": [0, 392, 393, 394, 395], "maximum": [0, 8, 30, 56, 57, 58, 59, 152, 220, 221, 378, 392, 393, 394, 395], "minimum": [0, 6, 56, 57, 58, 59, 152, 225, 378, 383, 392, 393, 394, 395], "outer": 0, "pow": [0, 375], "polyv": [0, 392, 393, 394, 395], "scatter": [0, 273], "atan2": [0, 39, 392, 393, 394, 395], "add_bw": 0, "assign_bw": 0, "atan2_bw": 0, "bias_gelu_bw": 0, "div_bw": 0, "embedding_bw": 0, "fmod_bw": 0, "remainder_bw": 0, "addalpha_bw": 0, "subalpha_bw": 0, "xlogy_bw": 0, "hypot_bw": 0, "ldexp_bw": 0, "logaddexp_bw": 0, "logaddexp2_bw": 0, "mul_bw": 0, "sub_bw": 0, "squared_difference_bw": 0, "concat_bw": 0, "rsub_bw": 0, "min_bw": 0, "max_bw": 0, "ternari": [0, 22, 24, 181, 216, 367], "addcdiv": [0, 23, 392, 393, 394, 395], "addcmul": [0, 25, 392, 393, 394, 395], "mac": [0, 392, 393, 394, 395], "lerp": [0, 182, 392, 393, 394, 395], "addcmul_bw": 0, "addcdiv_bw": 0, "where_bw": 0, "lerp_bw": 0, "loss": [0, 172, 231], "l1_loss": [0, 392, 393, 394, 395], "mse_loss": [0, 392, 393, 394, 395], "reduct": [0, 5, 8, 30, 172, 219, 223, 224, 231, 262, 328, 333, 351, 366], "cumprod": 0, "max": [0, 56, 57, 58, 59, 151, 152, 221, 281, 378, 396, 398], "mean": [0, 8, 43, 172, 231, 375, 376, 378, 383], "min": [0, 56, 57, 58, 59, 151, 152, 281, 282, 398], "std": [0, 6, 251, 301, 351, 377, 378, 397], "sum": [0, 230, 378], "var": [0, 378], "argmax": [0, 378], "prod": [0, 73, 263], "topk": 0, "sort": [0, 351], "cumsum": 0, "movement": 0, "concat": [0, 63, 376, 378, 381], "nonzero": 0, "pad": [0, 60, 66, 67, 68, 87, 117, 124, 125, 129, 221, 250, 251, 260, 261, 288, 314, 346, 348, 375, 376, 377, 378, 383, 392, 397], "permut": [0, 221, 357, 394, 397], "reshap": [0, 221, 357, 375, 376, 377, 378, 392, 393, 394, 395, 396, 397], "repeat": [0, 5, 286, 287, 376, 378], "repeat_interleav": [0, 376, 378], "tiliz": [0, 31, 43, 378, 393, 394], "tilize_with_val_pad": 0, "fill_rm": [0, 116], "fill_ones_rm": 0, "until": [0, 106, 350, 364], "untilize_with_unpad": 0, "indexed_fil": 0, "normal": [0, 43, 141, 158, 173, 289, 315, 378, 396, 398], "group_norm": [0, 376, 378], "layer_norm": [0, 376, 378], "rms_norm": 0, "batch_norm": 0, "moreh": [0, 230, 378], "moreh_sum": 0, "transform": [0, 5, 186, 252, 373, 394, 395, 396], "split_query_key_value_and_split_head": [0, 394], "concatenate_head": [0, 394], "attention_softmax": 0, "attention_softmax_": [0, 394], "rotary_embed": 0, "scaled_dot_product_attent": 0, "scaled_dot_product_attention_decod": 0, "ccl": [0, 5, 26, 273], "all_gath": [0, 392, 393, 394, 395], "reduce_scatt": 0, "all_reduc": 0, "embed": [0, 88, 110, 392], "convolut": [0, 5, 62, 66, 67, 68, 105, 221, 260, 261, 378, 397], "conv1d": [0, 8, 397], "conv2d": [0, 8, 9, 260, 261, 376, 378, 392, 393, 394, 395, 397], "conv3d": 0, "conv_transpose2d": [0, 8], "prepare_conv_weight": 0, "prepare_conv_bia": 0, "conv2dconfig": [0, 66, 67, 68, 260, 261, 397], "act_block_h_overrid": [0, 8, 397], "act_block_w_div": [0, 8], "activ": [0, 4, 8, 18, 91, 133, 142, 152, 175, 177, 186, 198, 199, 202, 206, 208, 213, 218, 222, 226, 235, 236, 296, 326, 332, 373, 380, 384, 387, 397], "always_preprocess_weight": [0, 8], "core_grid": [0, 8, 73, 141, 186, 218, 373, 393, 394], "deallocate_activ": [0, 8, 397], "dtype": [0, 6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 358, 359, 360, 361, 362, 366, 367, 368, 369, 370, 371, 372, 373, 377, 378, 383, 392, 393, 394, 395, 397, 399], "enable_act_double_buff": [0, 8], "enable_split_read": [0, 8], "enable_subblock_pad": [0, 8], "enable_weights_double_buff": [0, 8], "in_plac": [0, 8, 221], "input_channels_align": [0, 8, 397], "output_layout": [0, 8, 141, 378], "override_sharding_config": [0, 8], "preprocess_weights_on_devic": [0, 8], "reallocate_halo_output": [0, 8], "reshard_if_not_optim": [0, 8], "shard_layout": [0, 8, 397], "transpose_shard": [0, 8], "weights_dtyp": [0, 8, 397], "conv2dsliceconfig": 0, "slicetypeenum": [0, 9], "sliceheight": [0, 9], "slicewidth": [0, 9], "name": [0, 3, 6, 9, 31, 84, 187, 228, 229, 355, 373, 377, 378, 381, 382, 396, 397, 398, 399], "valu": [0, 8, 9, 20, 21, 22, 23, 24, 25, 29, 30, 43, 54, 55, 56, 57, 58, 59, 62, 64, 77, 82, 86, 89, 90, 111, 114, 116, 117, 124, 129, 130, 131, 139, 145, 146, 147, 149, 151, 152, 153, 161, 162, 163, 164, 170, 171, 180, 184, 212, 219, 221, 223, 224, 234, 245, 246, 247, 249, 251, 254, 257, 258, 266, 281, 282, 288, 292, 293, 299, 314, 316, 317, 318, 319, 328, 330, 331, 333, 343, 344, 346, 351, 357, 358, 359, 366, 371, 372, 374, 375, 377, 378, 383, 384, 386, 390, 394, 399], "num_slic": [0, 9], "slice_typ": [0, 9], "pool": [0, 83, 139, 221, 365, 378], "global_avg_pool2d": 0, "max_pool2d": 0, "vision": 0, "upsampl": [0, 378], "downsampl": [0, 397], "kv": 0, "kv_cach": 0, "fill_cache_for_user_": 0, "update_cache_for_token_": 0, "convers": [0, 76, 265, 348, 375, 377, 392], "model_preprocess": [0, 373, 394, 395, 396, 397], "preprocess_model": [0, 395, 396, 397], "preprocess_model_paramet": [0, 373, 395, 397], "report": [0, 67, 218, 374, 392, 393, 394, 395, 396, 397, 399], "set_printopt": [0, 399], "register_pre_operation_hook": [0, 399], "register_post_operation_hook": [0, 399], "creat": [0, 4, 6, 8, 29, 60, 73, 89, 90, 111, 114, 130, 131, 245, 246, 371, 372, 375, 377, 378, 381, 383, 384, 389, 390, 394, 398], "host": [0, 8, 31, 66, 67, 128, 249, 314, 336, 348, 375, 377, 378, 380, 382, 383, 384, 390, 393, 394, 395, 396, 397], "borrow": [0, 377, 383, 384, 390], "v": [0, 8, 31, 117, 356, 380, 384, 390], "own": [0, 8, 377, 383, 384, 390], "open": [0, 5, 217, 247, 384, 390, 393, 394, 395, 396, 397, 398, 399], "initi": [0, 90, 228, 229, 373, 375, 378, 384, 386, 387, 390, 395, 396, 397], "b": [0, 6, 110, 122, 218, 283, 287, 355, 356, 384, 386, 390], "random": [0, 251, 375, 384, 386, 390], "inspect": [0, 384, 386, 390], "output": [0, 3, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 382, 383, 384, 386, 387, 390, 395, 399], "attribut": [0, 6, 373, 378, 382, 383, 384, 390, 396], "close": [0, 61, 217, 375, 380, 384, 386, 387, 390, 395, 396, 397], "result": [0, 3, 29, 31, 43, 117, 129, 131, 158, 186, 218, 221, 246, 260, 261, 266, 271, 372, 375, 378, 382, 383, 384, 386], "more": [0, 1, 5, 6, 13, 23, 44, 67, 80, 123, 137, 155, 190, 192, 194, 195, 197, 200, 201, 211, 212, 218, 258, 263, 267, 271, 272, 284, 317, 323, 370, 378, 379, 380, 382, 383, 384, 386, 394, 396, 398], "perform": [0, 8, 13, 15, 16, 17, 19, 21, 23, 25, 26, 27, 28, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 63, 65, 70, 71, 72, 75, 76, 77, 78, 80, 82, 86, 92, 95, 97, 99, 102, 103, 104, 113, 115, 118, 120, 122, 123, 126, 127, 134, 135, 137, 139, 140, 143, 145, 146, 147, 148, 149, 150, 151, 152, 155, 157, 158, 159, 160, 176, 178, 180, 182, 184, 185, 190, 192, 194, 195, 197, 200, 201, 205, 210, 211, 212, 214, 217, 220, 221, 225, 232, 233, 234, 237, 239, 243, 244, 249, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 276, 279, 280, 283, 284, 286, 291, 292, 293, 295, 297, 299, 300, 302, 304, 306, 309, 311, 312, 313, 314, 317, 318, 319, 320, 321, 323, 325, 327, 329, 331, 334, 335, 338, 340, 341, 342, 343, 344, 358, 359, 361, 368, 370, 373, 374, 377, 378, 379, 380, 381, 382, 384, 386, 394], "write": [0, 1, 3, 4, 6, 73, 186, 218, 373, 383, 384, 387, 396], "weight": [0, 8, 43, 66, 67, 68, 87, 88, 105, 141, 173, 181, 186, 259, 260, 261, 289, 373, 378, 384, 387, 395, 396, 397], "first": [0, 3, 129, 135, 140, 186, 218, 242, 249, 276, 334, 373, 375, 377, 378, 380, 382, 384, 387, 393, 399], "iter": [0, 384, 387], "subsequ": [0, 384, 387, 393, 399], "version": [0, 9, 228, 229, 356, 380, 382, 384, 387, 389, 392, 393, 395, 396], "process": [0, 62, 382, 384, 387, 396], "paramet": [0, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 378, 384, 387, 389, 395], "check": [0, 2, 6, 218, 374, 377, 379, 380, 384, 387, 396], "match": [0, 60, 218, 228, 229, 288, 377, 378, 383, 384, 387, 392, 393, 395, 396, 397], "origin": [0, 111, 228, 229, 250, 262, 374, 381, 384, 387, 392], "implement": [0, 3, 8, 66, 106, 218, 249, 355, 356, 357, 373, 378, 381, 382, 384, 387, 389], "tracer": [0, 384, 395, 397, 398, 399], "modul": [0, 6, 228, 229, 373, 378, 379, 384, 389, 391, 392, 393, 394, 398], "written": [0, 6, 170, 171, 186, 218, 384, 391, 394], "profil": [0, 3, 158, 301, 376, 380, 384, 399], "resnet": [0, 379, 382, 384, 396], "block": [0, 8, 66, 67, 68, 73, 217, 218, 221, 260, 261, 271, 378, 383, 384], "torchvis": [0, 384, 389, 396, 398], "preprocess": [0, 6, 8, 31, 66, 67, 68, 228, 229, 260, 261, 383, 384, 389], "displai": [0, 380, 384, 385, 389], "pass": [0, 6, 8, 66, 67, 109, 110, 117, 274, 275, 357, 373, 375, 378, 381, 384, 389, 392, 395, 396], "constructor": [0, 377, 384, 389], "dit_xl_2": [0, 384, 398], "With": [0, 384], "pytorch": [0, 3, 5, 8, 30, 66, 67, 111, 218, 260, 261, 351, 355, 357, 376, 378, 384, 385, 396], "base": [0, 3, 4, 6, 8, 9, 43, 62, 73, 218, 250, 378, 380, 383, 384, 385, 394], "librari": [0, 4, 5, 375, 376, 377, 384, 385], "http": [0, 26, 273, 379, 380, 384, 385, 396], "github": [0, 2, 26, 273, 379, 380, 384, 385], "com": [0, 26, 273, 379, 380, 384, 385], "facebookresearch": [0, 384, 385], "dit": [0, 384, 385], "git": [0, 228, 229, 380, 384, 385, 396], "xl": [0, 384, 385], "sampl": [0, 378, 384, 385], "train": [0, 43, 378, 384, 385], "onboard": 0, "new": [0, 90, 131, 246, 285, 288, 372, 374, 376, 382, 392, 395], "rewrit": 0, "switch": [0, 249, 316], "ad": [0, 66, 67, 68, 186, 260, 261, 377, 378, 381, 392], "faq": 0, "need": [0, 1, 2, 9, 186, 218, 374, 375, 378, 382, 383, 392, 393, 394, 399], "bind": [0, 396], "golden": [0, 373, 399], "perf": [0, 392, 393, 394, 395, 396, 397], "header": [0, 3], "profile_thi": [0, 396], "descript": [0, 116, 117, 377, 378, 381], "lib": [0, 4, 376, 395, 396, 398], "overview": [0, 376], "infrastructur": [0, 376], "member": [0, 2, 9, 376, 377], "input": [0, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 382, 383, 393, 394, 397, 398, 399], "fast": [0, 94, 96, 100, 136, 294, 302, 376], "dispatch": [0, 247, 376, 377, 382], "cpu": [0, 3, 375, 376, 377, 378, 380, 382, 396, 398], "through": [0, 376, 380, 398], "primari": [0, 376], "softmax_backward": [0, 376, 378], "softmin": [0, 376, 378], "softmin_backward": [0, 376, 378], "logsoftmax": [0, 376, 378], "logsoftmax_backward": [0, 376, 378], "mean_backward": [0, 376, 378], "group_norm_backward": [0, 376, 378], "norm": [0, 43, 376, 378], "norm_backward": [0, 376, 378], "enum": [0, 376], "bcastopmath": [0, 376, 378], "bcastopdim": [0, 376, 378], "fallback": [0, 375, 376, 381], "tensor_slic": [0, 376, 378], "chunk": [0, 8, 104, 273, 355, 356, 376, 378, 393, 398], "interpol": [0, 181, 376, 378], "batchnorm2d": [0, 376, 378, 397], "groupnorm": [0, 376, 378], "layernorm": [0, 376, 378], "maxpool2d": [0, 376, 378], "adaptiveavgpool2d": [0, 376, 378], "unary_fmod": [0, 376, 378], "binary_fmod": [0, 376, 378], "unary_bitwise_or": [0, 376, 378], "unary_bitwise_and": [0, 376, 378], "unary_bitwise_xor": [0, 376, 378], "binary_bitwise_or": [0, 376, 378], "binary_bitwise_and": [0, 376, 378], "binary_bitwise_xor": [0, 376, 378], "unary_bitwise_left_shift": [0, 376, 378], "unary_bitwise_right_shift": [0, 376, 378], "binary_bitwise_left_shift": [0, 376, 378], "binary_bitwise_right_shift": [0, 376, 378], "torch_argmax": [0, 376, 378], "torch_argmin": [0, 376, 378], "fuse": [0, 5, 8, 373, 376, 394], "mini": [0, 376], "addandnorm": [0, 376, 378], "complex": [0, 27, 28, 64, 65, 159, 160, 252, 253, 268, 269, 376], "__init__": [0, 373, 376, 377, 397], "get_dtyp": [0, 6, 376, 377], "get_layout": [0, 6, 376, 377], "pad_to_til": [0, 376, 377], "storage_typ": [0, 376, 377], "unpad": [0, 60, 125, 348, 364, 375, 376, 377, 378], "unpad_from_til": [0, 376, 377], "memoryconfig": [0, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 378], "between": [0, 6, 29, 43, 66, 67, 68, 218, 260, 261, 349, 376, 378], "one": [0, 6, 56, 57, 58, 59, 376, 378], "op": [0, 6, 8, 9, 10, 30, 66, 67, 68, 73, 88, 221, 315, 336, 355, 356, 362, 376, 378, 381, 382, 396, 399], "acceler": [0, 345, 346, 363, 364, 376, 377, 378, 393, 396], "odd": [0, 376], "size": [0, 8, 9, 29, 66, 67, 68, 83, 87, 88, 218, 221, 247, 259, 260, 261, 262, 314, 355, 356, 357, 365, 376, 377, 378, 383, 392, 399], "last": [0, 9, 30, 60, 111, 130, 135, 140, 245, 276, 288, 334, 348, 351, 357, 371, 376, 377, 378, 382, 383], "dim": [0, 26, 30, 62, 63, 73, 104, 106, 111, 135, 140, 161, 219, 223, 224, 251, 262, 263, 273, 276, 287, 314, 315, 328, 333, 334, 351, 357, 366, 376, 377, 378, 383, 394, 398], "uplift": 0, "next": [0, 8, 240, 378, 383], "file": [0, 2, 4, 6, 31, 84, 187, 374, 380, 382, 396, 398, 399], "bug": 0, "featur": [0, 5, 378, 381, 388, 399], "propos": [0, 381], "request": [0, 348, 381, 396, 398], "troubleshoot": [0, 374], "tip": 0, "commun": 0, "develop": [0, 4, 5, 379, 380, 381, 382, 396], "index": [0, 170, 171, 351, 356, 377, 382, 396, 398], "search": 0, "page": [0, 380, 384], "If": [1, 2, 6, 8, 9, 30, 60, 66, 67, 68, 73, 111, 186, 218, 228, 229, 247, 249, 251, 314, 315, 336, 350, 351, 356, 357, 377, 378, 379, 380, 381, 382, 395, 399], "would": [1, 8, 381, 382, 383], "like": [1, 118, 316, 373, 375, 383, 392, 399], "thi": [1, 3, 4, 6, 8, 9, 10, 11, 30, 43, 60, 62, 66, 67, 88, 109, 110, 111, 114, 124, 125, 139, 158, 176, 221, 250, 260, 261, 281, 282, 316, 355, 373, 374, 375, 377, 378, 380, 381, 382, 383, 384, 385, 388, 389, 392, 393, 394, 398, 399], "project": [1, 2, 4, 5, 379], "pleas": [1, 2, 218, 374, 378, 379, 381, 384, 399], "review": [1, 379, 381], "standard": [1, 2, 282, 374, 379], "gain": 1, "access": [1, 2, 5, 380, 398], "read": [1, 73, 378, 379, 383], "section": [1, 2, 374, 378, 383], "detail": [1, 6, 13, 23, 44, 80, 123, 137, 155, 190, 192, 194, 195, 197, 200, 201, 211, 212, 258, 263, 267, 272, 284, 317, 323, 370, 379, 398, 399], "contact": 1, "u": [1, 381], "have": [2, 3, 4, 6, 30, 74, 88, 125, 181, 218, 266, 345, 346, 351, 363, 364, 374, 377, 378, 380, 382, 383, 384, 392, 398], "formal": 2, "permiss": 2, "cloud": 2, "issu": [2, 8, 218, 316, 374, 381, 382, 392, 393, 394, 395, 396, 397], "can": [2, 3, 4, 5, 6, 8, 9, 29, 44, 56, 57, 58, 59, 66, 67, 79, 80, 90, 131, 137, 218, 246, 249, 260, 261, 266, 267, 274, 275, 316, 336, 372, 373, 375, 377, 378, 379, 380, 382, 383, 384, 392, 393, 394, 395, 397, 398, 399], "out": [2, 6, 8, 106, 108, 111, 282, 314, 351, 378, 380, 392, 394, 397], "relev": [2, 374], "ever": 2, "help": [2, 381, 384], "we": [2, 3, 4, 125, 129, 218, 350, 374, 375, 378, 380, 381, 383, 385, 388, 389, 392, 393, 398, 399], "offici": 2, "discord": 2, "channel": [2, 8, 26, 43, 66, 67, 68, 83, 104, 116, 117, 139, 221, 260, 261, 273, 365, 378, 382], "repres": [2, 5, 377, 382, 383, 392], "both": [2, 8, 19, 66, 67, 68, 218, 257, 260, 261, 373, 374, 377, 378, 382, 383, 392, 397], "tenstorr": [2, 6, 8, 26, 273, 373, 374, 379, 380, 384, 392, 393, 398, 399], "metal": [2, 5, 26, 273, 377, 379, 380, 384, 392, 393, 394, 395, 396, 397, 398], "join": [2, 396], "discuss": [2, 374], "board": 2, "bounc": 2, "idea": [2, 374], "off": [2, 281, 290, 373, 383], "each": [2, 3, 9, 43, 62, 117, 139, 221, 249, 285, 287, 314, 377, 378, 382, 383], "other": [2, 6, 8, 373, 374, 378, 379, 383, 385, 388, 389, 399], "refer": [2, 3, 4, 5, 13, 23, 44, 67, 74, 80, 90, 114, 123, 137, 155, 190, 192, 194, 195, 197, 200, 201, 211, 212, 218, 234, 258, 263, 267, 272, 284, 317, 323, 370, 377, 381, 383, 399], "code": [2, 6, 30, 111, 274, 275, 351, 357, 375, 378, 379, 380, 381, 382, 392, 396, 399], "conduct": 2, "when": [2, 6, 8, 9, 10, 11, 43, 62, 66, 67, 68, 73, 80, 110, 155, 217, 218, 228, 251, 257, 267, 348, 374, 377, 378, 381, 383, 392, 394, 395, 397, 399], "interact": 2, "ensur": [3, 4, 60, 111, 336, 374, 380, 383], "tt": [3, 4, 11, 26, 273, 345, 346, 363, 364, 365, 376, 384, 385, 388, 389, 392, 393, 394, 395, 396, 397, 398], "requir": [3, 6, 19, 21, 36, 43, 63, 73, 80, 116, 117, 130, 228, 229, 232, 245, 297, 329, 331, 368, 371, 374, 377, 378, 380, 382, 388, 396, 398], "model": [3, 5, 228, 229, 374, 381, 382, 384, 385, 387, 391, 392, 393, 396, 397], "follow": [3, 6, 111, 117, 218, 288, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 398, 399], "instruct": [3, 4, 374, 379, 380, 384, 399], "readi": [3, 4, 357, 374], "come": [3, 379, 382], "typic": [3, 139, 383], "found": [3, 6, 373, 384, 396, 398], "under": [3, 4, 374, 375, 381, 382, 384, 399], "your_model": 3, "perf_model": 3, "py": [3, 6, 373, 374, 382, 395, 396, 399], "pytest": [3, 4, 373, 374, 382, 396, 399], "test": [3, 4, 6, 373, 374, 381, 382, 394, 396, 399], "python_api_test": 3, "perf_your_model": 3, "csv": [3, 382, 396], "perf_your_model_d": 3, "contain": [3, 4, 6, 8, 29, 87, 221, 271, 377, 383, 392], "tabl": [3, 380, 396], "two": [3, 60, 62, 135, 140, 218, 276, 288, 334, 348, 357, 373, 377, 378, 383], "row": [3, 8, 53, 105, 115, 117, 118, 120, 127, 242, 291, 306, 361, 377, 382, 383, 392, 393, 396], "batch": [3, 43, 66, 67, 68, 83, 116, 117, 161, 186, 218, 221, 260, 261, 356, 377, 378, 382], "sec": 3, "second": [3, 129, 135, 140, 186, 218, 249, 259, 276, 288, 334, 377, 378, 382, 394, 396, 399], "compil": [3, 378, 393, 396, 399], "time": [3, 106, 164, 228, 285, 374, 378, 382, 393, 394, 396, 399], "infer": [3, 43, 374, 382, 396], "g": [3, 218, 378, 380, 382, 383], "throughput": 3, "inf": [3, 227, 233], "vit": 3, "patch16": 3, "30": [3, 63, 89, 396], "51": [3, 395], "16": [3, 8, 314, 383, 394, 396, 397, 398], "05": [3, 43, 378, 398], "46": [3, 396], "0": [3, 6, 8, 9, 11, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 36, 37, 43, 45, 46, 47, 48, 49, 50, 52, 56, 57, 58, 59, 61, 62, 63, 64, 69, 74, 77, 79, 80, 85, 87, 88, 89, 90, 91, 93, 94, 96, 98, 100, 101, 103, 106, 108, 109, 112, 114, 115, 116, 117, 119, 124, 128, 129, 130, 131, 133, 136, 137, 138, 142, 144, 145, 146, 147, 149, 153, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 175, 177, 179, 180, 181, 183, 184, 187, 188, 189, 191, 193, 196, 198, 199, 202, 204, 206, 208, 210, 212, 213, 215, 217, 218, 221, 222, 226, 227, 231, 232, 235, 236, 238, 239, 241, 242, 245, 246, 247, 249, 251, 252, 256, 257, 258, 262, 263, 266, 267, 268, 270, 271, 273, 277, 278, 281, 282, 287, 288, 290, 294, 295, 296, 297, 302, 303, 305, 307, 308, 309, 310, 314, 315, 316, 318, 319, 322, 323, 324, 326, 329, 330, 331, 332, 336, 337, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 360, 362, 363, 364, 367, 368, 371, 372, 373, 375, 377, 378, 380, 382, 383, 392, 393, 394, 395, 396, 397, 398, 399], "0623": 3, "29": [3, 396], "4960": 3, "includ": [3, 5, 6, 60, 374, 383], "without": [3, 90, 375, 377, 378, 380], "ani": [3, 8, 116, 117, 249, 374, 375, 378, 396], "abovement": 3, "grayskul": [3, 6, 31, 290, 373, 380, 384, 385, 388, 389, 394, 395, 399], "It": [3, 5, 6, 8, 9, 66, 67, 228, 229, 350, 377, 378, 392], "sinc": [3, 158, 375], "dure": [3, 62, 129, 164, 350, 383], "do": [3, 374, 375, 394], "pai": 3, "suggest": 3, "calcul": [3, 9, 73, 106, 266, 382], "comput": [3, 5, 6, 20, 22, 24, 38, 60, 66, 67, 68, 79, 81, 105, 121, 132, 139, 141, 154, 164, 173, 174, 175, 181, 186, 198, 199, 202, 203, 206, 207, 208, 209, 216, 218, 222, 226, 240, 248, 256, 260, 261, 262, 289, 298, 315, 326, 330, 352, 353, 356, 357, 367, 369, 378, 382, 392, 393], "": [3, 4, 6, 8, 60, 66, 67, 68, 106, 228, 229, 355, 356, 374, 377, 378, 380, 383, 392, 393, 394, 398], "also": [3, 6, 8, 66, 67, 68, 218, 234, 374, 375, 377, 378, 379, 382, 398], "maintain": [3, 381], "run_perform": [3, 374], "sh": [3, 4, 374, 380, 382, 396], "facilit": 3, "easi": [3, 392], "wai": [3, 5, 228, 229, 373, 378, 380, 392], "attempt": [3, 378, 396], "fastest": 3, "command": [3, 12, 14, 18, 19, 21, 30, 32, 36, 37, 43, 45, 46, 47, 48, 49, 50, 52, 62, 63, 69, 79, 80, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 106, 108, 109, 112, 114, 115, 116, 117, 119, 129, 130, 131, 133, 136, 137, 138, 142, 144, 153, 156, 158, 161, 165, 166, 167, 168, 169, 172, 175, 177, 179, 183, 188, 189, 191, 193, 196, 198, 199, 202, 204, 206, 208, 213, 215, 222, 226, 227, 231, 232, 235, 236, 238, 239, 241, 242, 246, 249, 251, 257, 258, 266, 271, 277, 278, 281, 282, 288, 290, 294, 295, 296, 297, 302, 303, 305, 307, 308, 309, 310, 316, 322, 323, 324, 326, 329, 331, 332, 336, 337, 339, 340, 345, 346, 350, 351, 355, 356, 360, 362, 363, 364, 367, 368, 372, 380, 382, 399], "merg": [3, 381], "built": [4, 5, 270, 380, 396, 398], "now": [4, 106, 111, 129, 350, 365, 383, 392, 394], "root": [4, 295, 323, 352, 353], "provid": [4, 26, 30, 43, 106, 114, 122, 186, 218, 228, 229, 266, 273, 283, 315, 336, 339, 346, 351, 374, 377, 378, 381, 382, 383, 392, 394, 399], "virtual": [4, 380], "which": [4, 8, 46, 49, 73, 111, 130, 131, 186, 218, 221, 228, 229, 245, 246, 266, 314, 315, 355, 356, 371, 372, 373, 377, 378, 382, 383], "ll": 4, "work": [4, 218, 314, 373, 374, 384, 385, 388, 389, 399], "python_env": [4, 380, 395, 396, 398], "bin": [4, 84, 187, 380, 396], "python_env_dir": 4, "variabl": [4, 6, 378, 380, 395, 397, 399], "create_venv": [4, 380], "control": [4, 8, 378, 392], "pythonpath": [4, 380, 398], "common": [4, 132, 174, 374, 378], "practic": 4, "export": [4, 378, 380, 399], "pwd": [4, 380], "folder": [4, 374, 379, 382, 396], "split": [4, 62, 135, 140, 276, 334, 357, 378, 383], "them": [4, 357, 378, 380, 382, 392], "sub": [4, 336, 363, 378], "In": [4, 6, 108, 218, 288, 348, 353, 373, 375, 378, 382, 383, 392, 398], "find": [4, 380, 392, 393, 394, 395, 396, 397], "prepar": [4, 8, 374, 396], "readm": [4, 374, 380, 396, 398], "md": [4, 26, 273, 374, 380], "give": [4, 382], "how": [4, 6, 9, 374, 377, 378, 382, 383, 393, 394, 399], "progress": [4, 398], "yet": 4, "mani": [4, 6, 373, 393, 398], "part": [4, 135, 140, 276, 334, 374, 378, 382, 394], "entir": [4, 139, 336], "path_to_test_fil": 4, "test_in_fil": 4, "ttnn": [4, 6, 377, 378, 380, 381, 383, 384, 387, 389, 390, 393, 398, 399], "friendli": [4, 379], "top": [4, 351, 377, 384], "doc": [4, 6, 396], "document": [4, 6, 374, 381, 396], "neural": 5, "network": [5, 378], "design": 5, "feel": 5, "familiar": 5, "experienc": 5, "kei": [5, 357, 373, 383, 392, 394, 396], "than": [5, 8, 9, 62, 77, 116, 117, 133, 134, 142, 143, 177, 178, 184, 213, 214, 218, 234, 378, 380, 382, 394, 399], "200": 5, "A": [5, 6, 8, 29, 130, 131, 218, 245, 246, 316, 356, 371, 372, 374, 375, 377, 378, 380, 381, 383], "differ": [5, 8, 218, 302, 326, 377, 383, 392, 399], "distribut": [5, 73, 84, 186, 218, 383], "The": [5, 6, 8, 9, 10, 11, 26, 29, 31, 60, 61, 66, 67, 68, 74, 83, 84, 85, 87, 88, 89, 90, 104, 109, 111, 114, 117, 129, 130, 131, 139, 153, 179, 186, 217, 218, 221, 234, 245, 246, 247, 250, 260, 261, 273, 274, 275, 281, 282, 285, 336, 347, 350, 351, 355, 356, 365, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 383, 392, 393, 398, 399], "abil": [5, 378], "custom": [5, 6, 274, 275, 394], "nativ": 5, "mesh": [5, 26, 129, 273, 348, 350, 380], "tool": [5, 380, 382, 396], "util": [5, 377, 380, 383, 392, 393, 398], "significantli": [5, 8, 393], "speed": [5, 393], "load": [5, 187, 380, 395, 396, 398], "comparison": [5, 164, 381], "mode": [5, 36, 43, 44, 80, 94, 96, 100, 136, 137, 172, 221, 231, 267, 294, 302, 378, 392, 393, 394, 395, 396, 397], "long": [5, 381], "sequenc": [5, 6, 355, 356], "against": [5, 374, 399], "known": [5, 378], "meant": 6, "contributor": 6, "Not": [6, 210, 237, 290, 373, 399], "mai": [6, 74, 80, 155, 176, 218, 267, 271, 347, 373, 378, 383, 399], "wormhol": [6, 31, 373, 380, 384, 399], "take": [6, 354, 374, 377, 378, 379, 383, 392], "produc": [6, 271, 374, 375, 378, 392, 393], "call": [6, 8, 68, 106, 129, 274, 275, 350, 375, 377, 378, 381, 382, 383, 392, 394, 396, 399], "optiona": 6, "composit": 6, "struct": [6, 378], "specifi": [6, 8, 29, 60, 84, 89, 90, 111, 130, 131, 186, 218, 228, 229, 245, 246, 249, 250, 251, 262, 285, 336, 346, 355, 356, 371, 372, 373, 377, 378, 393, 394], "simpli": [6, 348, 377, 378, 392], "defin": [6, 31, 377, 378, 381, 383], "method": [6, 270, 378, 380, 396], "register_oper": 6, "exist": [6, 247, 377, 396, 398], "bind_registered_oper": 6, "auto": [6, 378], "attach": [6, 228, 229, 396], "attach_golden_funct": 6, "let": [6, 383, 392, 394], "just": [6, 260, 261, 394, 398], "copi": [6, 60, 106, 128, 158, 347, 377, 378, 392], "order": [6, 73, 111, 218, 255, 297, 351, 377, 378, 382, 383, 384, 392, 394, 399], "directori": [6, 384, 398], "structur": [6, 8, 9, 373], "shown": [6, 383], "below": [6, 106, 218, 374, 378, 382, 383, 384], "cpp": 6, "categori": 6, "operation_nam": 6, "_device_oper": 6, "hpp": 6, "program_factory_0": 6, "_program_factori": 6, "factori": 6, "But": [6, 375], "concret": [6, 218], "example_device_oper": 6, "spdx": [6, 399], "filecopyrighttext": [6, 399], "2023": [6, 396, 398], "inc": [6, 399], "licens": [6, 399], "identifi": [6, 396, 399], "apach": [6, 399], "pragma": 6, "onc": [6, 260, 261, 380, 393], "variant": 6, "device_oper": 6, "decor": [6, 381, 392, 393, 394, 395, 396, 397], "namespac": [6, 398], "exampledeviceoper": 6, "store": [6, 43, 377, 382, 383, 392], "aren": [6, 10], "t": [6, 10, 104, 158, 218, 228, 229, 273, 375, 377, 378, 382, 392, 394, 396], "operation_attributes_t": 6, "bool": [6, 19, 21, 30, 31, 36, 43, 63, 66, 67, 68, 73, 74, 79, 80, 94, 96, 100, 136, 141, 164, 172, 186, 218, 221, 228, 229, 231, 232, 249, 261, 262, 263, 294, 297, 302, 329, 331, 345, 346, 351, 352, 353, 355, 356, 357, 363, 364, 368, 378], "int": [6, 12, 14, 18, 19, 21, 26, 29, 30, 32, 36, 37, 43, 45, 46, 47, 48, 49, 50, 52, 62, 63, 66, 67, 68, 69, 73, 79, 80, 85, 87, 88, 89, 91, 93, 94, 96, 98, 100, 101, 103, 104, 106, 108, 109, 110, 112, 114, 115, 116, 117, 119, 125, 129, 130, 131, 133, 135, 136, 138, 140, 141, 142, 144, 153, 156, 158, 161, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 179, 183, 186, 188, 189, 191, 193, 196, 198, 199, 202, 204, 206, 208, 213, 215, 217, 218, 221, 222, 226, 227, 231, 232, 235, 236, 238, 239, 241, 242, 246, 247, 249, 250, 251, 254, 257, 258, 260, 261, 262, 263, 266, 271, 273, 276, 277, 278, 281, 282, 286, 290, 294, 296, 297, 302, 303, 305, 307, 308, 309, 310, 314, 315, 316, 322, 323, 324, 326, 329, 331, 332, 334, 336, 337, 339, 340, 345, 346, 350, 351, 352, 353, 355, 356, 357, 360, 362, 363, 364, 365, 367, 368, 372, 377, 378, 383, 397, 398], "some_other_attribut": 6, "argument": [6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 247, 248, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 377, 378, 392, 395, 397], "don": [6, 218, 378, 392], "thei": [6, 8, 9, 218, 374, 378, 393, 394], "tensor_args_t": 6, "const": [6, 301, 378], "input_tensor": [6, 12, 13, 14, 15, 16, 17, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 82, 83, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 124, 126, 127, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 169, 170, 173, 178, 179, 180, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 204, 205, 210, 211, 212, 214, 215, 221, 227, 233, 234, 237, 238, 239, 241, 242, 243, 244, 246, 249, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 372, 378, 395, 397, 399], "howev": [6, 8, 249, 378, 392], "show": [6, 218, 377, 383, 393, 394], "els": [6, 79, 377, 395, 397, 398], "done": [6, 8, 374, 377, 380, 382, 392, 396], "io_tensor": 6, "optional_output_tensor": [6, 186, 218], "vector": [6, 256, 302, 377, 378], "vector_of_tensor": 6, "tupl": [6, 66, 67, 68, 73, 249, 260, 261, 351, 357, 378], "tuple_of_tensor": 6, "vector_of_optional_tensor": 6, "some_crazy_tuple_of_tensor": 6, "return": [6, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 377, 378, 394, 395, 396, 397, 398], "spec": [6, 73, 377, 378], "singl": [6, 356, 373, 381, 382, 383, 392], "tensorspec": [6, 378], "spec_return_value_t": 6, "tensor_return_value_t": 6, "note": [6, 65, 106, 160, 218, 245, 246, 269, 288, 375, 377, 378, 380, 382, 383, 392, 394, 398, 399], "should": [6, 8, 68, 135, 140, 158, 164, 181, 218, 221, 242, 249, 257, 276, 334, 348, 374, 377, 381, 382, 392, 393, 394, 395, 397], "same": [6, 18, 20, 22, 24, 38, 45, 46, 48, 49, 50, 66, 67, 79, 81, 88, 90, 91, 92, 106, 114, 116, 121, 131, 132, 133, 134, 142, 143, 154, 158, 164, 174, 175, 177, 178, 181, 186, 198, 199, 202, 203, 206, 207, 208, 209, 213, 214, 216, 218, 222, 226, 228, 229, 235, 236, 237, 240, 242, 246, 248, 256, 257, 260, 261, 296, 298, 326, 330, 332, 348, 351, 355, 367, 369, 372, 378, 382, 383, 392, 394], "pattern": [6, 62, 228, 381], "e": [6, 218, 378, 382, 383, 399], "singlecor": 6, "share": [6, 377, 383], "override_runtime_argu": 6, "shared_variables_t": 6, "tt_metal": [6, 365, 378, 380, 382, 396], "kernelhandl": 6, "unary_reader_kernel_id": [6, 378], "unary_writer_kernel_id": [6, 378], "cached_program_t": 6, "cachedprogram": 6, "static": 6, "operation_attribut": 6, "tensor_arg": 6, "tensor_return_valu": 6, "void": [6, 378], "cached_program": 6, "multicor": [6, 249, 345, 346, 363, 364], "size_t": 6, "num_cor": [6, 8], "num_cores_i": 6, "program_factory_t": 6, "mandatori": [6, 378], "select": [6, 8, 43, 377, 381], "arg": [6, 117, 251, 274, 275, 336, 377, 399], "select_program_factori": 6, "valid": [6, 8, 26, 104, 116, 117, 218, 228, 229, 273, 373, 374, 377, 378, 382, 383, 396], "usual": 6, "validate_on_program_cache_miss": 6, "reus": [6, 260, 261], "less": [6, 177, 178, 213, 214, 378, 380, 382, 399], "validate_on_program_cache_hit": 6, "compute_output_spec": [6, 378], "create_output_tensor": [6, 378], "map": [6, 31, 392, 393, 394, 395, 396, 397], "abl": 6, "prim": 6, "after": [6, 8, 105, 249, 274, 375, 381, 382, 392, 399], "keep": [6, 30, 262, 373, 383], "mind": [6, 394], "overload": [6, 336, 377, 392], "queue_id": [6, 12, 14, 18, 19, 21, 30, 32, 36, 37, 43, 45, 46, 47, 48, 49, 50, 52, 62, 63, 69, 79, 80, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 105, 106, 108, 109, 112, 114, 115, 116, 117, 119, 130, 131, 133, 136, 137, 138, 142, 144, 153, 156, 158, 161, 165, 166, 167, 168, 169, 172, 175, 177, 179, 183, 188, 189, 191, 193, 196, 198, 199, 202, 204, 206, 208, 213, 215, 221, 222, 226, 227, 231, 232, 235, 236, 238, 239, 241, 242, 246, 249, 251, 257, 258, 266, 271, 277, 278, 281, 282, 288, 290, 294, 295, 296, 297, 302, 303, 305, 307, 308, 309, 310, 314, 316, 322, 323, 324, 326, 329, 331, 332, 337, 339, 340, 345, 346, 351, 355, 356, 360, 362, 363, 364, 367, 368, 372], "automat": [6, 217, 348, 374, 375, 378, 382, 383, 392, 393], "primit": 6, "so": [6, 8, 117, 373, 375, 377, 378, 392, 398], "case": [6, 79, 129, 164, 218, 240, 259, 348, 373, 374, 378, 383, 392, 399], "hash": [6, 228, 229, 382], "stl": 6, "hash_t": 6, "compute_program_hash": 6, "create_op_performance_model": 6, "opperformancemodel": 6, "make": [6, 228, 229, 316, 351, 357, 373, 383, 396, 399], "avail": [6, 8, 210, 365, 375, 377, 384, 385, 388, 389, 399], "constexpr": 6, "some_condition_based_on_operation_attributes_and_or_tensor_arg": 6, "true": [6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 377, 378, 392, 393, 394, 395, 396, 397, 398, 399], "get_logical_shap": 6, "tensorlayout": 6, "pageconfig": 6, "output_spec": 6, "create_device_tensor": 6, "42": [6, 393, 396, 398], "single_core_program_factori": 6, "work_split": 6, "output_tensor": [6, 12, 14, 18, 30, 32, 37, 45, 46, 47, 48, 49, 50, 52, 62, 69, 79, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 108, 112, 114, 115, 119, 125, 130, 131, 133, 136, 137, 138, 142, 144, 153, 156, 158, 165, 166, 167, 168, 169, 172, 175, 177, 179, 183, 188, 189, 191, 193, 196, 198, 199, 202, 204, 206, 208, 213, 215, 222, 226, 227, 231, 235, 236, 238, 239, 241, 246, 257, 258, 266, 271, 277, 278, 281, 282, 290, 294, 295, 296, 302, 303, 305, 307, 308, 309, 310, 316, 322, 323, 324, 326, 332, 337, 339, 340, 351, 360, 362, 367, 368, 372, 378, 392, 397, 399], "src_buffer": 6, "dst_buffer": 6, "dataformat": 6, "cb_data_format": 6, "datatype_to_dataformat_convert": 6, "uint32_t": [6, 108], "single_tile_s": 6, "tiles": 6, "cb_data_format_output": 6, "single_tile_size_output": 6, "num_til": 6, "volum": 6, "constant": [6, 378, 383], "tile_hw": 6, "idevic": [6, 66, 67, 68, 260, 336, 377], "corecoord": [6, 378], "compute_with_storage_grid_s": 6, "num_cores_x": [6, 373, 394], "x": [6, 38, 186, 218, 252, 355, 356, 377, 378, 380, 382, 383, 393, 394, 397, 398], "y": [6, 38, 252, 377, 378, 382, 383, 393, 394, 398], "all_cor": 6, "core_group_1": 6, "core_group_2": 6, "num_tiles_per_core_group_1": 6, "num_tiles_per_core_group_2": 6, "split_work_to_cor": 6, "src0_cb_index": 6, "cbindex": 6, "c_0": 6, "num_input_til": 6, "circularbufferconfig": 6, "cb_src0_config": 6, "set_page_s": 6, "cb_src0": 6, "createcircularbuff": 6, "output_cb_index": 6, "c_2": 6, "num_output_til": 6, "cb_output_config": 6, "cb_output": 6, "src_is_dram": 6, "buffer_typ": [6, 377, 378], "buffertyp": [6, 377, 378], "dram": [6, 9, 347, 349, 377, 378, 383, 392], "reader_compile_time_arg": 6, "dst_is_dram": 6, "writer_compile_time_arg": 6, "createkernel": 6, "eltwis": [6, 122, 259, 283, 378], "kernel": [6, 8, 60, 66, 67, 68, 105, 109, 186, 218, 221, 260, 261, 315, 378, 380, 382, 393], "dataflow": 6, "reader_unary_interleaved_start_id": 6, "readerdatamovementconfig": 6, "writer_unary_interleaved_start_id": 6, "writerdatamovementconfig": 6, "compute_kernel_args_group_1": 6, "per_core_block_cnt": 6, "per_core_block_s": 6, "math_approx_mod": 6, "fals": [6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 378, 392, 393, 394, 395, 396, 397, 398, 399], "eltwise_unary_kernel_group_1_id": 6, "eltwise_sfpu": 6, "computeconfig": 6, "math_fidel": [6, 397], "mathfidel": [6, 397], "hifi4": [6, 382, 396], "compile_arg": 6, "rang": [6, 29, 46, 47, 49, 71, 116, 117, 132, 157, 174, 176, 191, 227, 233, 254, 290, 292, 312, 337, 338, 339, 377, 378, 383], "compute_kernel_args_group_2": 6, "eltwise_unary_kernel_group_2_id": 6, "num_tiles_written": 6, "num_tiles_per_cor": 6, "tt_assert": 6, "setruntimearg": 6, "address": [6, 378], "move": [6, 8, 124, 125, 374, 375, 377, 378, 392, 394, 395, 396], "shared_vari": 6, "runtime_arg": [6, 378], "getruntimearg": [6, 378], "multi_core_program_factori": 6, "compositeexampleoper": 6, "composite_exampl": 6, "another_copi": 6, "_pybind": 6, "example_pybind": 6, "pybind11": 6, "h": [6, 9, 43, 66, 67, 68, 83, 105, 116, 117, 221, 365, 378, 383], "bind_example_oper": 6, "r": [6, 252, 380, 396], "pybind": 6, "expos": 6, "logic": [6, 202, 203, 206, 207, 209, 218, 228, 229], "self": [6, 373, 377, 378, 383, 397], "correct": 6, "specif": [6, 8, 30, 111, 218, 247, 356, 374, 378, 380, 383, 384, 396], "pybind_overload_t": 6, "decltyp": 6, "examples_pybind": 6, "py_modul": 6, "final": [6, 218, 373, 374, 375, 381, 392], "wherev": 6, "want": [6, 375, 380, 393, 395, 399], "compar": [6, 91, 133, 142, 177, 213, 218, 236, 393], "its": [6, 60, 90, 249, 314, 373, 374, 377, 378, 381, 382, 383, 399], "equival": [6, 30, 111, 351, 357, 383], "import": [6, 111, 221, 373, 374, 375, 380, 382, 392, 393, 394, 395, 396, 397, 398, 399], "signatur": 6, "And": [6, 373, 377, 378, 383, 392, 393], "ignor": [6, 263], "kwarg": [6, 274, 275, 336, 377, 399], "def": [6, 373, 394, 395, 396, 397, 398, 399], "golden_funct": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372], "befor": [6, 8, 31, 249, 260, 261, 275, 316, 374, 378, 383], "some": [6, 336, 378, 399], "postprocess": 6, "manual": [6, 373, 399], "pack": [6, 363, 364], "preprocess_golden_function_input": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372], "ttnn_input_tensor": 6, "postprocess_golden_function_output": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372], "torch_output_tensor": [6, 399], "becaus": [6, 106, 383, 392, 393, 394], "wa": [6, 106, 374, 382, 383, 392, 398], "class": [8, 9, 373, 374, 377, 378, 382, 383, 396, 397, 398], "pybind11_object": [8, 9, 383], "flag": [8, 31, 378, 396], "properti": [8, 9, 383], "height": [8, 9, 60, 62, 66, 67, 68, 73, 116, 117, 130, 139, 218, 221, 245, 260, 261, 348, 371, 378, 382, 383], "gener": [8, 87, 108, 117, 218, 252, 374, 378, 382, 392, 393, 394, 395, 396, 397], "l1": [8, 9, 73, 186, 218, 247, 347, 349, 377, 383, 394], "divid": [8, 9, 80, 352, 353], "among": 8, "further": [8, 393], "subdivid": 8, "within": [8, 29, 46, 49, 221, 374, 377, 378, 383, 384], "possibl": [8, 218, 350, 373, 378, 395], "equal": [8, 91, 92, 111, 133, 134, 164, 177, 178, 236, 237, 378, 399], "output_matrix_height_per_cor": 8, "lead": 8, "larg": [8, 9, 316, 373, 383, 395], "temporari": 8, "circular": [8, 378], "oom": 8, "must": [8, 30, 43, 66, 67, 88, 105, 234, 258, 266, 288, 314, 345, 346, 347, 351, 363, 364, 375, 377, 378, 380, 383], "32": [8, 26, 60, 62, 63, 74, 105, 117, 128, 130, 135, 139, 140, 186, 218, 242, 243, 244, 245, 248, 249, 251, 259, 263, 270, 276, 286, 287, 298, 314, 315, 334, 347, 348, 349, 362, 371, 375, 377, 378, 383, 392, 393, 395, 396, 397, 399], "evenli": [8, 29], "reduc": [8, 9, 30, 273, 351, 378], "width": [8, 9, 60, 66, 67, 68, 73, 116, 117, 130, 139, 218, 221, 245, 260, 261, 348, 354, 371, 378, 382], "prevent": 8, "greater": [8, 62, 77, 116, 117, 133, 134, 142, 143, 184, 234, 378, 399], "n150": 8, "thats": 8, "64": [8, 62, 73, 74, 128, 135, 140, 186, 218, 251, 270, 276, 314, 315, 334, 347, 348, 349, 377, 383, 394, 395, 396, 397, 399], "2048": [8, 399], "divisor": [8, 132, 267], "halv": 8, "appli": [8, 9, 12, 14, 18, 32, 37, 43, 47, 52, 60, 66, 67, 68, 69, 85, 91, 93, 94, 96, 98, 100, 101, 105, 108, 109, 110, 112, 114, 119, 133, 135, 136, 138, 139, 140, 142, 144, 153, 156, 165, 166, 167, 168, 169, 175, 177, 179, 183, 186, 188, 189, 191, 193, 196, 198, 199, 202, 204, 206, 208, 213, 215, 218, 221, 222, 226, 227, 235, 236, 238, 241, 249, 260, 261, 271, 276, 277, 278, 281, 282, 290, 294, 296, 302, 303, 305, 307, 308, 310, 316, 322, 324, 326, 332, 334, 337, 339, 360, 362, 374, 378], "sigmoid_approx": 8, "determin": [8, 9, 68, 218, 228, 229, 378, 383, 392, 393, 394, 395, 396, 397], "examin": 8, "assum": [8, 83, 110, 125, 336, 365, 384], "alreadi": [8, 68, 228, 229, 247, 375, 384, 396, 398], "alwai": [8, 384, 392, 395, 396], "even": [8, 74, 217, 218, 375, 378], "format": [8, 9, 31, 38, 66, 67, 68, 105, 124, 125, 129, 221, 260, 261, 271, 381, 383], "out_channel": [8, 66, 67, 68, 260, 261, 378, 397], "in_channel": [8, 66, 67, 68, 260, 261, 378, 397], "kernel_height": [8, 66, 67, 260, 261], "kernel_width": [8, 66, 67, 260, 261], "grid": [8, 186, 218, 355, 356, 363, 373, 383], "boolean": [8, 162, 163, 339, 351, 378], "indic": [8, 30, 87, 88, 111, 242, 314, 364, 377, 378], "whether": [8, 30, 31, 74, 186, 218, 221, 228, 229, 261, 345, 346, 351, 356, 357, 363, 364, 378], "conv": [8, 66, 83, 397], "halo": [8, 9, 221], "micro": 8, "anoth": [8, 106], "float32": [8, 29, 43, 89, 90, 114, 132, 158, 174, 222, 226, 257, 371, 372, 373, 377, 382, 383, 392, 397, 399], "bfloat16": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 375, 377, 378, 382, 383, 392, 393, 394, 396, 397, 399], "doubl": 8, "allow": [8, 218, 374, 377, 378, 381], "stall": 8, "reader": [8, 228], "improv": [8, 316, 374], "increas": 8, "usag": [8, 374, 380], "writer": 8, "carri": [8, 282], "bottleneck": 8, "re": [8, 373, 378, 379, 393], "overwrit": 8, "dimens": [8, 9, 26, 30, 60, 62, 63, 111, 130, 135, 139, 140, 161, 218, 219, 223, 224, 245, 249, 251, 259, 262, 263, 273, 276, 285, 287, 288, 314, 315, 328, 333, 334, 348, 350, 351, 354, 355, 356, 357, 366, 371, 375, 377, 378, 383], "align": [8, 218, 377, 378, 380, 382], "either": [8, 9, 73, 218, 348, 374, 378, 380, 383, 384], "24": [8, 396, 398], "tile": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 350, 355, 356, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 377, 378, 382, 383, 392, 393, 396], "row_major": [8, 29, 30, 73, 89, 90, 129, 130, 131, 243, 244, 245, 345, 346, 363, 364, 371, 372, 375, 377, 378, 382, 392, 393, 397], "expect": [8, 105, 117, 221, 357, 374, 377, 378, 381, 392], "recommend": [8, 176, 373, 380, 392, 399], "faster": [8, 382, 394], "fragment": 8, "ideal": [8, 383], "face": 8, "reshard": [8, 397], "current": [8, 60, 62, 73, 228, 229, 260, 261, 347, 356, 378, 380, 383, 384, 392, 399], "anywai": 8, "previou": [8, 88, 375], "due": [8, 271, 382, 383, 392], "stride": [8, 66, 67, 68, 83, 221, 260, 261, 378, 392, 397], "dilat": [8, 66, 67, 68, 221, 260, 261, 378, 397], "tensormemorylayout": [8, 221, 377, 378, 397], "heurist": 8, "height_shard": [8, 397], "block_shard": [8, 221, 397], "width_shard": 8, "orient": [8, 73, 383], "major": [8, 53, 105, 115, 117, 118, 120, 127, 242, 291, 306, 361, 377, 383, 392, 393], "column": [8, 382, 383, 396], "bia": [8, 43, 44, 66, 67, 68, 105, 141, 173, 186, 260, 261, 289, 373, 378, 394, 397], "respons": [8, 396], "place": [9, 43, 92, 134, 143, 170, 171, 178, 214, 221, 237, 290, 347, 353, 377, 383], "too": [9, 399], "fit": [9, 287], "conv2d_dram": 9, "happen": 9, "number": [9, 18, 19, 22, 24, 26, 44, 62, 66, 67, 68, 79, 80, 81, 91, 92, 104, 116, 117, 121, 122, 123, 133, 134, 142, 143, 175, 177, 178, 182, 198, 199, 202, 206, 208, 213, 214, 216, 218, 219, 221, 222, 223, 224, 226, 232, 235, 236, 237, 242, 249, 251, 258, 259, 260, 261, 273, 283, 284, 285, 287, 288, 296, 326, 328, 329, 332, 333, 346, 351, 352, 353, 366, 367, 377, 378, 381, 382, 383, 394, 398], "along": [9, 106, 111, 262, 263, 314, 315, 351, 354, 377, 378, 383], "correspond": [9, 26, 87, 88, 273, 356, 377, 378], "divis": [9, 121, 135, 140, 266, 276, 334, 377, 378, 383], "smaller": [9, 383], "rest": [9, 117], "n": [9, 43, 62, 66, 67, 68, 83, 105, 116, 117, 221, 242, 255, 256, 365, 378, 380, 382, 392, 393, 396, 398], "w": [9, 43, 66, 67, 68, 83, 105, 116, 117, 221, 365, 377, 378, 382], "prefer": 9, "much": [9, 378, 382, 393], "larger": 9, "_ttnn": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 377, 378, 383], "multi_devic": [10, 11, 124, 125, 247, 336, 377], "meshdevic": [10, 11, 26, 89, 90, 124, 125, 130, 131, 245, 246, 247, 273, 336, 348, 371, 372, 377], "default": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 377, 378, 382, 393, 399], "plan": [10, 11, 124, 125, 250], "deprec": [10, 11, 124, 125, 250, 395], "futur": [10, 11, 124, 125, 250], "arg0": [11, 377, 383], "none": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 377, 378, 392, 393, 394, 395, 396, 397], "device_id": [11, 61, 74, 87, 88, 128, 217, 247, 270, 336, 347, 348, 349, 377, 392, 393, 394, 395, 397, 399], "python_fully_qualified_nam": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372], "abs_t": 12, "object": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 377, 381, 398], "default_preprocess_golden_function_input": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372], "_golden_funct": [12, 15, 18, 23, 25, 27, 28, 29, 34, 37, 41, 51, 52, 60, 62, 64, 65, 67, 69, 71, 75, 77, 80, 83, 87, 89, 90, 91, 93, 94, 96, 98, 100, 101, 110, 112, 115, 119, 128, 129, 131, 133, 136, 138, 141, 142, 144, 147, 149, 152, 156, 158, 159, 160, 162, 163, 165, 166, 167, 168, 169, 173, 175, 177, 182, 183, 184, 186, 188, 189, 191, 193, 196, 198, 199, 203, 204, 207, 209, 213, 215, 218, 220, 227, 232, 233, 235, 236, 238, 241, 245, 246, 249, 251, 252, 253, 255, 258, 264, 268, 269, 270, 271, 277, 278, 285, 286, 287, 288, 289, 294, 302, 303, 305, 307, 308, 310, 312, 315, 316, 317, 320, 322, 324, 332, 335, 337, 339, 347, 348, 349, 350, 352, 353, 354, 357, 358, 359, 365, 368, 371, 372], "default_postprocess_golden_function_output": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372], "is_cpp_oper": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372], "is_experiment": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372], "element": [12, 14, 30, 32, 37, 47, 52, 62, 66, 67, 68, 69, 85, 93, 94, 96, 98, 100, 101, 108, 111, 112, 114, 119, 135, 136, 138, 139, 140, 144, 153, 156, 165, 166, 167, 168, 169, 179, 183, 188, 189, 191, 193, 196, 204, 215, 227, 238, 241, 242, 249, 256, 257, 260, 261, 266, 271, 276, 277, 278, 281, 282, 287, 290, 294, 302, 303, 305, 307, 308, 310, 316, 322, 324, 334, 337, 339, 351, 360, 362, 364, 378, 383, 392], "wise": [12, 14, 32, 37, 47, 52, 69, 85, 93, 94, 96, 98, 100, 101, 108, 112, 114, 119, 135, 136, 138, 140, 144, 153, 156, 165, 166, 167, 168, 169, 179, 183, 188, 189, 191, 193, 196, 204, 215, 227, 238, 241, 257, 266, 271, 276, 277, 278, 281, 282, 290, 294, 302, 303, 305, 307, 308, 310, 316, 322, 324, 334, 337, 339, 360, 362, 378], "mathrm": [12, 14, 18, 20, 32, 37, 38, 45, 46, 47, 48, 49, 50, 52, 69, 79, 81, 85, 91, 92, 93, 94, 96, 98, 100, 101, 108, 112, 114, 119, 121, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 153, 154, 156, 158, 164, 165, 166, 167, 168, 169, 174, 175, 177, 178, 179, 181, 183, 188, 189, 191, 193, 196, 198, 199, 202, 203, 204, 206, 207, 208, 209, 213, 214, 215, 227, 235, 236, 237, 238, 240, 241, 248, 256, 257, 259, 262, 271, 276, 277, 278, 281, 282, 290, 294, 296, 298, 302, 303, 305, 307, 308, 310, 316, 322, 324, 326, 330, 332, 334, 337, 339, 360, 362, 369, 378], "_tensor": [12, 14, 18, 20, 32, 37, 38, 45, 46, 47, 48, 49, 50, 52, 69, 79, 81, 85, 91, 92, 93, 94, 96, 98, 100, 101, 108, 112, 114, 119, 121, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 153, 154, 156, 158, 164, 165, 166, 167, 168, 169, 174, 175, 177, 178, 179, 181, 183, 188, 189, 191, 193, 196, 198, 199, 202, 203, 204, 206, 207, 208, 209, 213, 214, 215, 227, 235, 236, 237, 238, 240, 241, 248, 256, 257, 259, 262, 271, 276, 277, 278, 281, 282, 290, 294, 296, 298, 302, 303, 305, 307, 308, 310, 316, 322, 324, 326, 330, 332, 334, 337, 339, 360, 362, 369], "_i": [12, 14, 18, 32, 37, 38, 45, 46, 47, 48, 49, 50, 52, 69, 79, 85, 91, 93, 94, 96, 98, 100, 101, 108, 112, 114, 119, 132, 133, 135, 136, 138, 139, 140, 142, 144, 153, 154, 156, 158, 165, 166, 167, 168, 169, 174, 177, 179, 183, 188, 189, 191, 193, 196, 202, 203, 204, 206, 207, 208, 209, 213, 215, 227, 235, 236, 238, 240, 241, 256, 257, 262, 271, 276, 277, 278, 281, 282, 290, 294, 296, 298, 302, 303, 305, 307, 308, 310, 316, 322, 324, 332, 334, 337, 339, 360, 362, 369], "verb": [12, 14, 32, 37, 45, 46, 47, 48, 49, 50, 52, 69, 81, 85, 98, 101, 108, 112, 114, 119, 121, 132, 135, 140, 153, 156, 158, 165, 166, 167, 168, 169, 174, 175, 179, 181, 188, 189, 191, 193, 196, 198, 199, 227, 238, 259, 271, 276, 277, 278, 281, 282, 290, 298, 302, 303, 305, 307, 308, 310, 322, 324, 326, 334, 337, 362], "complextensor": [12, 13, 19, 27, 28, 64, 65, 79, 80, 159, 160, 162, 163, 232, 252, 253, 268, 269, 271, 272, 329], "keyword": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "memory_config": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 377, 378, 393, 394, 397, 399], "prealloc": [12, 14, 18, 19, 21, 30, 32, 36, 37, 43, 45, 46, 47, 48, 49, 50, 52, 62, 63, 69, 79, 80, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 106, 108, 109, 111, 112, 114, 115, 119, 130, 131, 133, 136, 137, 138, 142, 144, 153, 156, 158, 165, 166, 167, 168, 169, 172, 175, 177, 179, 183, 188, 189, 191, 193, 196, 198, 199, 202, 204, 206, 208, 213, 215, 222, 226, 227, 231, 232, 235, 236, 238, 239, 241, 246, 257, 258, 266, 271, 277, 278, 281, 282, 290, 294, 295, 296, 297, 302, 303, 305, 307, 308, 309, 310, 316, 322, 323, 324, 326, 329, 331, 332, 337, 339, 340, 351, 360, 362, 367, 368, 372], "queue": [12, 14, 18, 19, 21, 30, 32, 36, 37, 43, 45, 46, 47, 48, 49, 50, 52, 62, 63, 69, 79, 80, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 105, 106, 108, 109, 112, 114, 115, 116, 117, 119, 129, 130, 131, 133, 136, 137, 138, 142, 144, 153, 156, 158, 161, 165, 166, 167, 168, 169, 172, 175, 177, 179, 183, 188, 189, 191, 193, 196, 198, 199, 202, 204, 206, 208, 213, 215, 221, 222, 226, 227, 231, 232, 235, 236, 238, 239, 241, 242, 246, 249, 251, 257, 258, 266, 271, 277, 278, 281, 282, 288, 290, 294, 295, 296, 297, 302, 303, 305, 307, 308, 309, 310, 316, 322, 323, 324, 326, 329, 331, 332, 336, 337, 339, 340, 345, 346, 350, 351, 355, 356, 360, 362, 363, 364, 367, 368, 372], "id": [12, 14, 18, 19, 21, 30, 32, 36, 37, 43, 45, 46, 47, 48, 49, 50, 52, 62, 63, 69, 79, 80, 85, 87, 88, 91, 93, 94, 96, 98, 100, 101, 103, 105, 106, 108, 109, 112, 114, 115, 116, 117, 119, 129, 130, 131, 133, 136, 137, 138, 142, 144, 153, 156, 158, 161, 165, 166, 167, 168, 169, 172, 175, 177, 179, 183, 188, 189, 191, 193, 196, 198, 199, 202, 204, 206, 208, 213, 215, 217, 221, 222, 226, 227, 231, 232, 235, 236, 238, 239, 241, 242, 246, 247, 249, 251, 257, 258, 266, 271, 277, 278, 281, 282, 288, 290, 294, 295, 296, 297, 302, 303, 305, 307, 308, 309, 310, 316, 322, 323, 324, 326, 329, 331, 332, 336, 337, 339, 340, 345, 346, 350, 351, 355, 356, 360, 362, 363, 364, 367, 368, 372, 377, 382], "tile_layout": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 254, 256, 257, 258, 263, 264, 265, 266, 267, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 348, 351, 358, 359, 360, 361, 362, 367, 368, 369, 370, 371, 372, 373, 377, 383, 392, 393, 394, 397, 399], "unary_backward": [13, 15, 17, 33, 35, 40, 42, 53, 55, 57, 59, 70, 72, 76, 78, 82, 86, 95, 97, 99, 102, 103, 113, 115, 118, 120, 127, 137, 146, 148, 150, 152, 157, 180, 185, 190, 192, 194, 195, 197, 211, 212, 234, 239, 255, 258, 263, 265, 267, 272, 279, 280, 286, 291, 293, 295, 300, 304, 306, 309, 311, 313, 317, 319, 321, 323, 325, 338, 340, 342, 344, 361], "abs_bw_t": 13, "_golden_function_ab": 13, "backward": [13, 15, 17, 19, 21, 23, 25, 28, 33, 35, 36, 39, 40, 42, 44, 53, 55, 57, 59, 63, 65, 70, 72, 76, 78, 80, 82, 86, 88, 95, 97, 99, 102, 103, 109, 113, 115, 118, 120, 123, 127, 137, 146, 148, 150, 152, 155, 157, 160, 176, 180, 182, 185, 190, 192, 194, 195, 197, 200, 201, 211, 212, 220, 225, 232, 234, 239, 253, 255, 258, 263, 265, 267, 269, 272, 279, 280, 284, 286, 291, 293, 295, 297, 300, 304, 306, 309, 311, 313, 317, 319, 321, 323, 325, 327, 329, 331, 338, 340, 342, 344, 361, 368, 370, 378], "given": [13, 15, 17, 19, 21, 23, 25, 28, 30, 33, 35, 36, 39, 40, 42, 44, 53, 55, 57, 59, 63, 65, 70, 72, 76, 78, 80, 82, 83, 86, 90, 95, 97, 99, 102, 103, 106, 113, 115, 118, 120, 123, 127, 137, 146, 148, 150, 152, 155, 157, 160, 176, 180, 182, 185, 190, 192, 194, 195, 197, 200, 201, 211, 212, 220, 225, 228, 229, 232, 234, 239, 247, 250, 253, 255, 258, 263, 265, 267, 269, 272, 279, 280, 284, 286, 287, 291, 293, 295, 297, 300, 304, 306, 309, 311, 313, 317, 319, 321, 323, 325, 327, 329, 331, 338, 340, 342, 344, 351, 356, 361, 365, 368, 370, 373, 377, 378, 382, 392], "grad_tensor": [13, 15, 17, 19, 21, 23, 25, 28, 33, 35, 36, 39, 40, 42, 44, 53, 55, 57, 59, 63, 65, 70, 72, 76, 78, 80, 82, 86, 88, 95, 97, 99, 102, 103, 109, 113, 115, 118, 120, 123, 127, 137, 146, 148, 150, 152, 155, 157, 160, 176, 180, 182, 185, 190, 192, 194, 195, 197, 200, 201, 211, 212, 220, 225, 232, 234, 239, 253, 255, 258, 263, 265, 267, 269, 272, 279, 280, 284, 286, 291, 293, 295, 297, 300, 304, 306, 309, 311, 313, 317, 319, 321, 323, 325, 327, 329, 331, 338, 340, 342, 344, 361, 368, 370], "gradient": [13, 15, 17, 19, 21, 23, 25, 33, 35, 36, 39, 40, 42, 44, 53, 55, 57, 59, 63, 70, 72, 76, 78, 80, 82, 86, 88, 95, 97, 99, 102, 103, 109, 113, 115, 118, 120, 123, 127, 137, 146, 148, 150, 152, 155, 157, 176, 180, 182, 185, 190, 192, 194, 195, 197, 200, 201, 211, 212, 220, 225, 232, 234, 239, 255, 258, 263, 265, 267, 272, 279, 280, 284, 286, 291, 293, 295, 297, 300, 304, 306, 309, 311, 313, 317, 319, 321, 323, 325, 327, 329, 331, 338, 340, 342, 344, 361, 368, 370], "list": [13, 15, 17, 18, 19, 21, 23, 25, 28, 30, 33, 35, 36, 39, 40, 42, 44, 53, 55, 57, 59, 62, 63, 65, 70, 72, 73, 76, 78, 80, 82, 83, 86, 87, 89, 91, 95, 97, 99, 102, 103, 113, 115, 118, 120, 123, 125, 127, 133, 137, 142, 146, 148, 150, 152, 155, 157, 160, 175, 176, 177, 180, 182, 185, 186, 190, 192, 194, 195, 197, 198, 199, 200, 201, 202, 206, 208, 211, 212, 213, 218, 220, 221, 222, 225, 226, 232, 234, 235, 236, 239, 242, 249, 250, 251, 253, 255, 258, 259, 262, 263, 265, 267, 269, 272, 279, 280, 284, 286, 291, 293, 295, 296, 297, 300, 304, 306, 309, 311, 313, 314, 317, 319, 321, 323, 325, 326, 327, 329, 331, 332, 336, 338, 340, 342, 344, 351, 356, 361, 362, 363, 364, 368, 370, 377, 378], "about": [13, 23, 44, 123, 137, 190, 192, 194, 195, 197, 200, 201, 211, 212, 258, 263, 271, 272, 284, 317, 323, 370, 383, 393], "requires_grad": [13, 15, 17, 19, 21, 23, 25, 33, 35, 36, 39, 40, 42, 44, 53, 55, 57, 59, 63, 70, 72, 76, 78, 80, 86, 88, 95, 97, 99, 102, 103, 109, 113, 115, 118, 120, 123, 127, 137, 146, 148, 150, 152, 155, 157, 176, 180, 182, 185, 190, 192, 194, 195, 197, 200, 201, 211, 212, 220, 225, 232, 234, 239, 258, 263, 265, 267, 272, 279, 280, 284, 286, 291, 295, 297, 300, 304, 306, 309, 311, 313, 317, 319, 321, 323, 325, 327, 329, 331, 338, 340, 342, 344, 361, 368, 370], "acos_t": 14, "_golden_function_aco": 14, "rand": [14, 16, 32, 34, 37, 41, 43, 51, 52, 63, 69, 71, 75, 87, 93, 98, 101, 112, 119, 126, 135, 138, 140, 144, 156, 165, 166, 167, 168, 169, 183, 184, 188, 189, 191, 193, 196, 204, 205, 215, 227, 238, 241, 243, 244, 248, 259, 263, 264, 276, 277, 278, 286, 287, 298, 305, 307, 308, 310, 312, 320, 322, 324, 334, 335, 337, 341, 358, 359, 392, 395, 397, 399], "acos_bw_t": 15, "invers": [15, 17, 33, 35, 40, 42], "cosin": [15, 17, 70, 72, 110], "input_tensor_a": [15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 33, 35, 36, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 53, 55, 63, 70, 72, 76, 78, 79, 80, 81, 86, 91, 92, 95, 97, 99, 102, 113, 118, 120, 121, 122, 123, 127, 132, 133, 134, 142, 143, 146, 148, 150, 154, 155, 157, 161, 164, 174, 175, 176, 177, 178, 180, 182, 185, 186, 190, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 211, 212, 213, 214, 216, 218, 220, 221, 222, 225, 226, 232, 234, 235, 236, 237, 240, 248, 256, 258, 259, 265, 267, 272, 279, 280, 283, 284, 291, 296, 297, 298, 300, 304, 306, 311, 313, 319, 321, 325, 326, 327, 329, 330, 331, 332, 338, 342, 361, 367, 368, 369, 370, 392, 399], "acosh_t": 16, "_golden_function_acosh": [16, 17], "acosh_bw_t": 17, "hyperbol": [17, 35, 42, 72, 313, 340], "add_t": 18, "input_tensor_b": [18, 19, 20, 21, 22, 23, 24, 25, 36, 38, 39, 44, 45, 46, 48, 49, 50, 63, 79, 80, 81, 91, 92, 121, 122, 123, 132, 133, 134, 142, 143, 154, 155, 161, 164, 174, 175, 176, 177, 178, 182, 186, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 213, 214, 216, 218, 220, 222, 225, 226, 232, 235, 236, 237, 240, 248, 259, 283, 284, 296, 297, 298, 326, 327, 329, 330, 331, 332, 367, 368, 369, 370, 392, 399], "_a": [18, 20, 38, 45, 46, 48, 49, 50, 79, 81, 91, 92, 121, 132, 133, 134, 142, 143, 154, 164, 174, 175, 177, 178, 198, 199, 202, 203, 206, 207, 208, 209, 213, 214, 235, 236, 237, 240, 248, 259, 296, 298, 326, 330, 332, 369], "_b": [18, 20, 38, 45, 46, 48, 49, 50, 79, 81, 91, 92, 121, 132, 133, 134, 142, 143, 154, 164, 174, 175, 177, 178, 198, 199, 202, 203, 206, 207, 208, 209, 213, 214, 235, 236, 237, 240, 248, 259, 296, 298, 326, 330, 332, 369], "datatyp": [18, 29, 31, 60, 83, 87, 88, 89, 90, 91, 129, 130, 131, 133, 139, 141, 142, 175, 177, 186, 198, 199, 202, 206, 208, 213, 218, 222, 226, 235, 236, 245, 246, 296, 326, 332, 348, 349, 371, 372, 375, 377, 378, 392, 393, 397], "str": [18, 31, 36, 80, 84, 91, 109, 133, 142, 175, 177, 186, 187, 198, 199, 202, 206, 208, 213, 218, 222, 226, 228, 229, 235, 236, 296, 301, 326, 332, 377, 378, 398], "broadcast": [18, 19, 80, 91, 133, 142, 175, 177, 186, 198, 199, 202, 206, 208, 213, 218, 235, 236, 287, 326, 329, 332, 355, 399], "int32": [18, 45, 46, 47, 48, 49, 50, 132, 174, 395], "tensor1": [18, 19, 20, 21, 22, 23, 24, 25, 36, 38, 39, 44, 45, 46, 48, 49, 50, 62, 63, 79, 80, 81, 91, 92, 121, 122, 123, 132, 133, 134, 142, 143, 154, 155, 161, 164, 174, 175, 176, 177, 178, 181, 182, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 213, 214, 216, 218, 220, 222, 225, 226, 232, 235, 236, 237, 240, 248, 259, 283, 284, 296, 297, 298, 326, 327, 329, 330, 331, 332, 367, 368, 369, 370], "tensor2": [18, 19, 20, 21, 22, 23, 24, 25, 36, 38, 39, 44, 45, 46, 48, 49, 50, 62, 63, 79, 80, 81, 91, 92, 121, 122, 123, 132, 133, 134, 142, 143, 154, 155, 161, 164, 174, 175, 176, 177, 178, 181, 182, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 213, 214, 216, 218, 220, 222, 225, 226, 232, 235, 236, 237, 240, 248, 259, 283, 284, 296, 297, 298, 326, 327, 329, 330, 331, 332, 367, 368, 369, 370], "scalar": [18, 19, 22, 24, 45, 46, 48, 49, 50, 79, 80, 81, 82, 91, 92, 121, 122, 123, 130, 131, 133, 134, 142, 143, 175, 177, 178, 181, 182, 198, 199, 202, 206, 208, 213, 214, 216, 222, 226, 232, 235, 236, 237, 255, 259, 266, 267, 283, 284, 296, 326, 329, 332, 375, 378, 399], "binary_backward": [19, 21, 36, 39, 44, 63, 80, 123, 155, 176, 200, 201, 220, 225, 232, 284, 297, 327, 329, 331, 370], "add_bw_t": 19, "_golden_function_bw": [19, 21, 36, 39, 44, 63, 123, 155, 176, 200, 201, 225, 284, 297, 327, 329, 331, 370], "are_required_output": [19, 21, 36, 63, 80, 232, 297, 329, 331, 368], "input_grad": [19, 21, 36, 63, 80, 109, 232, 297, 329, 331], "other_grad": [19, 21, 36, 63, 80, 232, 297, 329, 331], "bfloat4_b": [19, 21, 22, 24, 39, 44, 63, 80, 129, 155, 176, 181, 182, 200, 201, 216, 220, 225, 232, 297, 327, 329, 331, 350, 367, 370, 377], "addalpha_t": 20, "_golden_function_addalpha": 20, "alpha": [20, 21, 23, 25, 54, 55, 80, 85, 86, 299, 330, 331], "float": [20, 21, 22, 23, 24, 25, 43, 54, 55, 56, 57, 58, 59, 82, 85, 86, 108, 114, 117, 124, 129, 130, 131, 141, 145, 146, 147, 149, 151, 152, 153, 164, 173, 179, 180, 181, 210, 212, 249, 251, 255, 256, 257, 259, 266, 267, 281, 282, 289, 292, 293, 299, 316, 317, 318, 319, 330, 331, 343, 344, 355, 356, 358, 359, 375, 377, 378, 383], "addalpha_bw_t": 21, "addcdiv_t": 22, "_golden_function_addcdiv": 22, "input_tensor_c": [22, 23, 24, 25, 182, 216, 367, 368], "tensor3": [22, 23, 24, 25, 181, 182, 216, 367, 368], "ternary_backward": [23, 25, 182, 368], "addcdiv_bw_t": 23, "addcmul_t": 24, "_golden_function_addcmul": 24, "addcmul_bw_t": 25, "all_gather_t": 26, "gather": [26, 104], "across": [26, 104, 139, 273, 377, 382, 383], "cluster_axi": [26, 273], "meshtensor": [26, 273], "axi": [26, 106, 273, 287, 378], "line": [26, 273, 396], "mesh_devic": [26, 104, 273, 377], "applic": [26, 84, 273, 383], "guid": [26, 273, 379, 380], "blob": [26, 273, 398], "main": [26, 273, 380, 381, 384, 396, 398, 399], "tech_report": [26, 273], "20mesh": [26, 273], "20of": [26, 273], "20devic": [26, 273], "20with": [26, 273], "20tt": [26, 273], "nn": [26, 228, 229, 273, 377, 384, 385, 388, 389, 397], "num_link": [26, 104, 273], "link": [26, 104, 273], "num_work": [26, 104, 273], "worker": [26, 104, 247, 273, 348, 377, 394, 395], "num_buffers_per_channel": [26, 104, 273], "per": [26, 104, 273, 378, 396], "ring": [26, 104, 273], "full_tensor": [26, 104, 273], "randn": [26, 31, 74, 88, 90, 104, 128, 129, 139, 186, 218, 221, 246, 270, 273, 347, 348, 349, 350, 362, 372, 375, 377, 393, 394, 398], "256": [26, 104, 221, 273, 397, 398], "physical_device_id": [26, 104, 273, 392, 393, 394, 395, 396, 397], "get_t3k_physical_device_ids_r": [26, 104, 273], "open_mesh_devic": [26, 104, 273], "meshshap": [26, 104, 273], "ttnn_tensor": [26, 350, 392], "input_dtyp": [26, 104, 273], "mem_config": [26, 104, 273, 377], "mesh_mapp": [26, 31, 129], "shardtensor2dmesh": 26, "mesh_shap": 26, "complex_unari": [27, 64, 159, 162, 163, 252, 268], "angle_t": 27, "complex_unary_backward": [28, 65, 160, 253, 269], "angle_bw_t": 28, "arange_t": 29, "inclus": [29, 377, 383], "end": [29, 79, 164, 181, 240, 314, 364, 374, 377, 378, 382, 394, 396], "exclus": [29, 249], "consecut": [29, 383], "dram_memory_config": [29, 60, 89, 90, 186, 218, 347, 383], "space": [29, 66, 67, 68, 260, 261, 378, 383], "print": [29, 31, 62, 89, 90, 128, 129, 130, 131, 186, 217, 218, 245, 246, 247, 251, 285, 287, 301, 314, 315, 347, 348, 350, 371, 372, 375, 377, 378, 382, 383, 392, 393, 394, 396, 398, 399], "00000": [29, 392], "argmax_t": 30, "_create_golden_funct": [30, 219, 223, 224, 328, 333, 366], "local": [30, 34, 37, 41, 51, 52, 69, 71, 75, 77, 93, 94, 96, 98, 100, 101, 112, 119, 136, 138, 144, 147, 149, 156, 158, 165, 166, 167, 168, 169, 183, 184, 188, 189, 191, 193, 196, 204, 215, 219, 223, 224, 227, 233, 238, 241, 264, 277, 278, 294, 302, 303, 305, 307, 308, 310, 312, 316, 320, 322, 324, 328, 333, 335, 337, 339, 351, 358, 359, 366, 373, 374, 383], "keepdim": [30, 262, 378], "currenli": 30, "uint32": [30, 87, 88, 158, 161, 377, 382, 383, 392], "row_major_layout": [31, 60, 84, 87, 124, 125, 129, 130, 245, 348, 371, 383, 392, 393, 394], "cache_file_nam": 31, "pathlib": [31, 84, 187], "path": [31, 84, 187, 382, 396, 398, 399], "callabl": [31, 228, 229], "serial": 31, "tensortomesh": [31, 129], "use_device_til": 31, "toggl": 31, "truncat": [31, 361, 378], "mantissa": 31, "bit": [31, 378], "bfp": [31, 383], "rais": [31, 350, 397], "runtim": 31, "error": [31, 172, 217, 218, 231, 350, 374, 380], "rte": 31, "bfp8": [31, 392], "bfp4": 31, "375": [31, 129, 395], "30469": [31, 129], "714844": [31, 129], "761719": [31, 129], "53125": [31, 129], "652344": [31, 129], "asin_t": 32, "_golden_function_asin": 32, "asin_bw_t": 33, "lambda": [33, 35, 42, 53, 55, 57, 59, 72, 82, 86, 97, 146, 180, 190, 192, 194, 212, 267, 293, 306, 311, 313, 319, 321, 373, 395, 397], "sine": [33, 35, 110, 313], "asinh_t": 34, "register_ttnn_cpp_unary_funct": [34, 37, 41, 51, 52, 69, 71, 75, 77, 93, 94, 96, 98, 100, 101, 112, 119, 136, 138, 144, 147, 149, 156, 158, 165, 166, 167, 168, 169, 183, 184, 188, 189, 191, 193, 196, 204, 215, 227, 233, 238, 241, 264, 277, 278, 294, 302, 303, 305, 307, 308, 310, 312, 316, 320, 322, 324, 335, 337, 339, 358, 359], "asinh_bw_t": 35, "assign_bw_t": 36, "assign": [36, 375], "other_tensor": [36, 80], "round_mod": [36, 79, 80, 266, 267], "atan_t": 37, "atan2_t": 38, "_golden_function_atan2": 38, "arctan": 38, "left": [38, 79, 132, 174, 298, 377, 378, 381], "right": [38, 79, 132, 174, 298, 377, 378], "atan2_bw_t": 39, "atan_bw_t": 40, "_golden_function_atan": 40, "tangenr": 40, "atanh_t": 41, "atanh_bw_t": 42, "tangent": [42, 340], "batch_norm_t": 43, "spatial": [43, 83, 139, 365, 378], "over": [43, 66, 67, 68, 105, 139, 141, 173, 289, 315, 355, 356, 378], "interleav": [43, 62, 105, 347, 349, 357, 377, 378, 383], "ep": [43, 210, 212, 378], "epsilon": [43, 141, 173, 289, 378], "1e": [43, 141, 164, 173, 289, 378], "momentum": [43, 378], "running_mean": [43, 378], "running_var": [43, 378], "varianc": [43, 378, 383], "gamma": [43, 234, 378], "beta": [43, 316, 317, 378], "evalu": [43, 396], "bias_gelu_bw_t": 44, "bias_gelu": 44, "approxim": [44, 94, 96, 100, 109, 136, 137, 294, 302], "bitwise_and_t": 45, "_golden_function_bitwise_and": 45, "integ": [45, 46, 48, 49, 50, 249, 356, 378], "bitwise_left_shift_t": 46, "_golden_function_bitwise_left_shift": 46, "ha": [46, 49, 68, 218, 228, 229, 261, 336, 357, 373, 374, 375, 377, 378, 380, 382, 383, 392, 398, 399], "shift_bit": [46, 49], "31": [46, 49, 375, 377, 380, 396, 398], "bitwise_not_t": 47, "_golden_function_bitwise_not": 47, "2147483647": 47, "wormhole_b0": [47, 52, 114, 119, 210, 227, 266, 380], "bitwise_or_t": 48, "_golden_function_bitwise_or": 48, "bitwise_right_shift_t": 49, "_golden_function_bitwise_right_shift": 49, "bitwise_xor_t": 50, "_golden_function_bitwise_xor": 50, "cbrt_t": 51, "ceil_t": 52, "ceil_bw_t": 53, "celu_t": 54, "_golden_function_celu": 54, "celu_bw_t": 55, "formula": [55, 86, 122, 146, 180, 181, 212, 283, 317, 319], "clamp_t": 56, "_golden_function_clamp": 56, "min_tensor": [56, 58], "max_tensor": [56, 58], "clamp_bw_t": 57, "clip_t": 58, "_golden_function_clip": 58, "clip_bw_t": 59, "data_mov": [60, 62, 116, 117, 161, 242, 249, 251, 285, 287, 288, 314, 345, 346, 363, 364], "clone_t": 60, "doe": [60, 129, 350, 374, 378, 382], "alter": 60, "adjust": [60, 316], "necessari": [60, 374], "param": [60, 83, 128, 249, 263, 315, 347, 378, 398], "target": [60, 124, 125, 374, 377, 378], "l1_memory_config": [60, 347, 373, 383, 393, 394, 399], "compute_kernel_config": [60, 105, 110, 173, 186, 218, 289, 315, 355, 356], "remov": [61, 350, 364, 377, 392, 395, 396, 398], "success": 61, "concat_t": 62, "concaten": [62, 63, 354, 357, 378], "group": [62, 66, 67, 68, 260, 261, 378, 383, 397], "partit": 62, "independ": 62, "altern": [62, 218, 380, 399], "recombin": 62, "residu": 62, "concat_bw_t": 63, "conj_t": 64, "conjug": 64, "conj_bw_t": 65, "conv1d_t": 66, "1d": [66, 218, 242, 259, 396], "signal": [66, 67, 105, 139, 378, 396], "compos": [66, 67, 68, 105, 139, 350, 378], "sever": [66, 67, 68, 105, 139, 378], "plane": [66, 67, 68, 105, 139, 378, 397], "2d": [66, 67, 68, 83, 139, 218, 365, 378, 383], "input_length": 66, "weight_tensor": [66, 67, 68, 105, 261, 397], "bias_tensor": [66, 67, 68, 105, 260, 397], "batch_siz": [66, 67, 68, 88, 139, 221, 260, 261, 354, 357, 373, 394, 395, 396, 397], "length": [66, 259, 355, 356], "kernel_s": [66, 67, 68, 221, 260, 261, 378, 397], "convolv": [66, 67, 68, 221, 260, 261, 378], "cross": [66, 67, 68, 260, 261, 378], "correl": [66, 67, 68, 260, 261, 374, 378], "side": [66, 67, 68, 260, 261, 378, 382, 392, 393, 394, 395, 396, 397], "pad_length": 66, "pad_left": [66, 67, 68, 260, 261], "pad_right": [66, 67, 68, 260, 261], "connect": [66, 67, 68, 260, 261, 378], "conv_config": [66, 67, 68, 260, 261, 397], "compute_config": [66, 67, 68, 260, 261], "devicecomputekernelconfig": [66, 67, 68, 105, 110, 173, 186, 218, 260, 261, 289, 315, 355, 356], "return_output_dim": [66, 67, 68], "return_weights_and_bia": [66, 67, 68], "bias": [66, 373, 378, 394], "inform": [67, 271, 378, 380, 384], "tech": 67, "input_height": [67, 68, 260, 261, 397], "input_width": [67, 68, 260, 261, 397], "pad_height": [67, 68, 260, 261], "pad_width": [67, 68, 260, 261], "pad_top": [67, 68, 260, 261], "pad_bottom": [67, 68, 260, 261], "transpos": [68, 110, 186, 218, 251, 357], "sometim": 68, "deconvolut": 68, "mirror_kernel": 68, "mirror": [68, 398], "intern": [68, 378, 379], "been": [68, 228, 229, 336, 374, 380, 398], "cos_t": 69, "cos_bw_t": 70, "_golden_function_co": 70, "cosh_t": 71, "cosh_bw_t": 72, "coregrid": [73, 141, 186, 218, 393, 394], "corerang": 73, "strategi": [73, 84, 218, 377, 378, 382, 383, 396], "shardstrategi": 73, "shardorient": 73, "use_height_and_width_as_shard_shap": 73, "travers": 73, "seen": [73, 392, 393], "math": [73, 382, 396], "320": [73, 378], "pycapsul": [74, 128, 270, 347], "resourc": [74, 396], "explicitli": [74, 392], "whose": [74, 90, 348], "forc": [74, 395], "deg2rad_t": 75, "deg2rad_bw_t": 76, "_golden_function_deg2rad": 76, "degre": [76, 265], "radian": [76, 265], "digamma_t": 77, "digamma_bw_t": 78, "_golden_function_digamma": 78, "div_t": 79, "_golden_function_div": 79, "begin": [79, 164, 240, 378, 382], "text": [79, 164, 240, 248, 374, 378], "_mode": 79, "accurate_mod": 79, "non": [79, 218, 221, 242, 258, 271, 292], "div_bw_t": 80, "pcc": [80, 155, 176, 267, 374, 381], "degrad": [80, 155, 176, 267], "div_no_nan_t": 81, "_golden_function_div_no_nan": 81, "div_no_nan_bw_t": 82, "denomin": [82, 266, 378], "downsample_t": 83, "form": [83, 365], "downsample_param": 83, "dump": [84, 228, 395, 398, 399], "file_nam": [84, 187, 380, 398, 399], "dict": [84, 228, 229, 377, 398], "save": [84, 396, 398], "elu_t": 85, "_golden_function_elu": 85, "elu_bw_t": 86, "embedding_t": 87, "retriev": 87, "word": 87, "padding_idx": 87, "token": [87, 171, 356, 396], "embeddings_typ": 87, "embeddingstyp": 87, "106445": 87, "988281": 87, "59375": 87, "212891": 87, "964844": 87, "199219": 87, "996094": 87, "78362e": 87, "38": [87, 383, 396], "89785e": 87, "39": [87, 392, 393, 394, 395, 396, 397, 398], "04479e": 87, "25815e": 87, "71833e": 87, "59995e": 87, "60398e": 87, "83671e": 87, "22242e": 87, "88263e": 87, "35917e": 87, "49994e": 87, "embedding_backward": 88, "embedding_bw_t": 88, "respect": [88, 218, 383], "extract": 88, "vocabulari": 88, "output_gradient_tensor": 88, "seq_len": [88, 110], "embedding_dim": 88, "num_embed": 88, "1024": [88, 132, 174, 393], "4096": [88, 377], "3200": 88, "input_shap": [88, 221, 397], "input_index": 88, "randint": [88, 375, 395], "weights_shap": 88, "weights_ttnn": 88, "grad_shap": 88, "grad_data": 88, "empty_t": 89, "uniniti": [89, 90], "bfloat_8": 89, "21": [89, 396, 398], "67": 89, "empty_like_t": 90, "desir": [90, 116, 117, 124, 125, 129, 348, 349, 350], "87": 90, "45": [90, 337, 338, 396], "22": [90, 380, 396], "60": [90, 396], "75": [90, 128], "25": [90, 348, 382, 396, 398], "eq_t": 91, "eq__t": 92, "_golden_function_eq_": 92, "input_a": [92, 134, 143, 161, 178, 214, 219, 223, 224, 237, 328, 333, 366], "input_b": [92, 134, 143, 161, 178, 214, 237], "eqz_t": 93, "_tensor_i": [93, 138, 144, 183, 204, 215, 241], "erf_t": 94, "fast_and_approximate_mod": [94, 96, 100, 136, 294, 302], "erf_bw_t": 95, "_golden_function_erf": 95, "erfc_t": 96, "erfc_bw_t": 97, "erfinv_t": 98, "erfinv_bw_t": 99, "_golden_function_erfinv": 99, "exp_t": 100, "exp2_t": 101, "exp2_bw_t": 102, "_golden_function_exp2": 102, "exp_bw_t": 103, "_golden_function_exp": 103, "exponenti": 103, "ccl_experiment": 104, "all_reduce_t": 104, "num_devic": [104, 273], "tt_input_tensor": [104, 273], "enumer": [104, 273], "append": [104, 273, 382, 398], "get_devic": [104, 273], "input_tensor_mesh": [104, 273], "aggregate_as_tensor": [104, 273], "conv3d_t": 105, "3d": 105, "d": [105, 218, 396], "kd": 105, "kh": [105, 378], "kw": [105, 378], "c_in": 105, "c_out": 105, "conv3dconfig": 105, "cumprod_t": 106, "witth": 106, "cumul": 106, "product": [106, 218, 355, 356], "scaffold": 106, "ref": [106, 380], "fed": 106, "being": [106, 274, 275, 382, 383], "actual": [106, 266, 375, 383, 392], "assert": [106, 249, 394, 399], "dtyoe": 106, "uint8": [106, 137, 158, 295, 314], "tensor_copi": 106, "cumsum_t": 107, "dropout_t": 108, "seed": [108, 398], "rng": 108, "probabl": 108, "averag": [108, 139, 378, 382, 396], "total_elem": 108, "scale": [108, 147, 149, 299, 316, 355, 356, 378], "124": 108, "prob": 108, "gelu_bw_t": [109, 137], "_golden_function_gelu": [109, 137], "algorithm": [109, 365, 378], "rotary_embedding_t": 110, "rotari": 110, "cos_cach": 110, "sin_cach": 110, "token_idx": 110, "head_dim": 110, "cod_cach": 110, "token_index": 110, "sort_t": 111, "ascend": 111, "descend": 111, "stabl": 111, "preserv": 111, "addit": [111, 218, 373, 378], "info": [111, 392, 393, 394, 395, 396, 397, 398], "sorted_tensor": 111, "sorted_tensor_desc": 111, "indices_desc": 111, "input_tensor_2d": 111, "sorted_tensor_dim": 111, "indices_dim": 111, "expm1_t": 112, "expm1_bw_t": 113, "_golden_function_expm1": 113, "fill_t": 114, "_golden_function_fil": 114, "fill_valu": [114, 130, 131, 378], "fill_bw_t": 115, "fill_ones_rm_t": 116, "val_hi": [116, 117], "val_lo": [116, 117], "count": [116, 117, 377, 382, 396], "ye": [116, 117, 377, 378], "hone": [116, 117], "high": [116, 117, 380, 383, 399], "region": [116, 117, 247], "wone": [116, 117], "fill_rm_t": 117, "nchw": 117, "hw": [117, 378], "hfill": 117, "wfill": 117, "hi": 117, "lo": 117, "low": 117, "fill_zero_bw_t": 118, "_golden_function_fill_zero": 118, "floor_t": 119, "floor_bw_t": 120, "_golden_function_floor": 120, "floor_div_t": 121, "_golden_function_floor_div": 121, "fmod_t": 122, "_golden_function_fmod": 122, "rounding_mod": [122, 266, 283], "wh_b0": [122, 283], "fmod_bw_t": 123, "padded_shap": [124, 250], "pad_valu": [124, 129, 251, 288, 314, 346, 377], "target_layout": [124, 125, 377, 378], "target_mem_config": [124, 125], "padded_tensor": 124, "output_mem_config": [124, 125, 396], "unpadded_tensor": 125, "frac_t": 126, "_golden_function_frac": [126, 127], "frac_bw_t": 127, "tensor_on_devic": [128, 347], "tensor_on_host": [128, 347], "365234": 128, "130859": 128, "itself": [129, 377], "twice": [129, 382], "purpos": [129, 374, 381, 383], "mapper": 129, "cq_id": [129, 336, 350, 377, 378], "full_t": 130, "_golden_function_ful": 130, "uint16": [130, 158, 245, 351, 371, 383], "filled_tensor": [130, 131], "full_like_t": 131, "templat": [131, 246, 372, 382], "gcd_t": 132, "_golden_function_gcd": 132, "greatest": 132, "ge_t": 133, "ge__t": 134, "_golden_function_ge_": 134, "geglu_t": 135, "_golden_function_geglu": 135, "gelu_t": 136, "gez_t": 138, "global_avg_pool2d_t": 139, "golden_global_avg_pool2d": 139, "adapt": [139, 378], "glu_t": 140, "_golden_function_glu": 140, "group_norm_t": 141, "_postprocess_golden_function_output": [141, 249], "num_group": [141, 378], "input_mask": 141, "inplac": [141, 203, 205, 207, 209, 397], "gt_t": 142, "gt__t": 143, "_golden_function_gt_": 143, "gtz_t": 144, "hardshrink_t": 145, "_golden_function_hardshrink": 145, "lambd": [145, 146, 318, 319], "hardshrink_bw_t": 146, "hardsigmoid_t": 147, "shift": [147, 149, 378], "16666667": [147, 149], "hardsigmoid_bw_t": 148, "_golden_function_hardsigmoid": 148, "hardswish_t": 149, "hardswish_bw_t": 150, "_golden_function_hardswish": 150, "hardtanh_t": 151, "_golden_function_hardtanh": 151, "min_val": 151, "max_val": 151, "hardtanh_bw_t": 152, "heaviside_t": 153, "_golden_function_heavisid": 153, "hypot_t": 154, "_golden_function_hypot": 154, "hypot_bw_t": 155, "i0_t": 156, "i0_bw_t": 157, "_golden_function_i0": 157, "identity_t": 158, "sfpu": 158, "shouldn": 158, "instead": [158, 282, 378, 392, 394, 398], "lower": [158, 249], "float16": [158, 392], "imag_t": 159, "imag_bw_t": 160, "imaginari": 160, "indexed_fill_t": 161, "replac": [161, 343], "denot": [161, 378], "batch_id": 161, "is_imag_t": 162, "is_real_t": 163, "isclose_t": 164, "_golden_function_isclos": 164, "leq": 164, "atol": 164, "rtol": 164, "otherwis": [164, 336, 351, 377, 394, 399], "rel": 164, "toler": 164, "05f": 164, "absolut": [164, 172, 378], "08f": 164, "equal_nan": 164, "nan": [164, 396], "treat": [164, 218], "isfinite_t": 165, "isinf_t": 166, "isnan_t": 167, "isneginf_t": 168, "isposinf_t": 169, "fill_cache_for_user__t": 170, "popul": [170, 228, 382], "batch_index": 170, "update_cache_for_token__t": 171, "update_index": 171, "batch_offset": 171, "l1_loss_t": 172, "_golden_function_l1_loss": 172, "input_refer": [172, 231], "input_predict": [172, 231], "layer_norm_t": 173, "residual_input_tensor": [173, 289], "program_config": [173, 186, 218, 289, 352, 353, 355, 356], "programconfig": [173, 289], "lcm_t": 174, "_golden_function_lcm": 174, "least": [174, 218, 382], "ldexp_t": 175, "ldexp_bw_t": 176, "80": [176, 380], "outsid": 176, "le_t": 177, "le__t": 178, "_golden_function_le_": 178, "leaky_relu_t": 179, "_golden_function_leaky_relu": 179, "negative_slop": [179, 180], "slope": 179, "leaki": 179, "leaky_relu_bw_t": 180, "01": 180, "lerp_t": 181, "_golden_function_lerp": 181, "point": [181, 316, 375, 378, 382, 383], "lerp_bw_t": 182, "lez_t": 183, "lgamma_t": 184, "lgamma_bw_t": 185, "_golden_function_lgamma": 185, "linear_t": 186, "behaviour": [186, 218], "transpose_a": [186, 218], "transpose_b": [186, 218], "matmulprogramconfig": [186, 218], "output_til": [186, 218], "128": [186, 218, 399], "log_t": 188, "log10_t": 189, "whb0": [189, 193, 284], "log10_bw_t": 190, "log1p_t": 191, "1e7": 191, "log1p_bw_t": 192, "log2_t": 193, "log2_bw_t": 194, "log_bw_t": 195, "_golden_function_log": 195, "logarithm": [195, 234], "log_sigmoid_t": 196, "log_sigmoid_bw_t": 197, "_golden_function_log_sigmoid": 197, "logaddexp_t": 198, "logaddexp2_t": 199, "logaddexp2_bw_t": 200, "logaddexp_bw_t": 201, "logical_and_t": 202, "_golden_function_logical_and": 202, "AND": [202, 203, 378], "logical_and__t": 203, "logical_not_t": 204, "logical_not__t": 205, "_golden_function_logical_not_": 205, "logical_or_t": 206, "_golden_function_logical_or": 206, "OR": [206, 207, 288, 378], "logical_or__t": 207, "logical_xor_t": 208, "_golden_function_logical_xor": 208, "land": [208, 209], "lnot": [208, 209], "lor": [208, 209], "logical_xor__t": 209, "xor": [209, 378], "logit_t": 210, "_golden_function_logit": [210, 211], "logit_bw_t": 211, "logiteps_bw_t": 212, "logitep": 212, "lt_t": 213, "lt__t": 214, "_golden_function_lt_": 214, "ltz_t": 215, "mac_t": 216, "_golden_function_mac": 216, "context": [217, 274, 275], "exit": 217, "occur": 217, "matmul_t": 218, "therefor": [218, 392, 394], "dimension": [218, 234, 378, 383, 392], "front": [218, 382, 398], "These": [218, 374, 375, 378, 380, 384, 399], "although": 218, "combin": 218, "most": [218, 392], "variou": 218, "appropri": [218, 374, 380], "abov": [218, 380], "criteria": 218, "messag": [218, 382], "unexpect": [218, 378], "obviou": [218, 392], "except": [218, 378, 392, 394, 396], "scenario": [218, 383], "relat": [218, 378], "swap": 218, "j": 218, "implicitli": 218, "extend": 218, "patch": 218, "leverag": [218, 378], "accord": [218, 251, 285, 380], "look": [218, 351, 374, 379, 383, 396, 398], "n_size": 218, "m_size": 218, "k_size": 218, "p": [218, 383], "though": [218, 375], "constraint": [218, 383, 392], "chosen": [218, 382, 398], "carefulli": 218, "fix": 218, "problem": 218, "max_t": 219, "max_bw_t": 220, "max_pool2d_t": 221, "golden_maxpool2d": 221, "window": [221, 378], "nhw": 221, "scheme": [221, 260, 261], "input_h": 221, "input_w": 221, "applied_shard_schem": 221, "ceil_mod": [221, 378], "createdevic": [221, 375, 377, 397], "l1_small_siz": [221, 247, 394, 395, 397], "8192": [221, 394, 395], "kernel_h": 221, "kernel_w": 221, "stride_h": 221, "stride_w": 221, "pad_h": 221, "pad_w": 221, "dilation_h": 221, "dilation_w": 221, "nchw_shape": 221, "40": [221, 396], "in_n": 221, "in_c": 221, "in_h": 221, "in_w": 221, "input_perm": 221, "input_reshap": 221, "tt_input": 221, "tt_input_dev": 221, "tt_output": [221, 375, 377], "in_place_halo": 221, "maximum_t": 222, "_golden_function_maximum": 222, "mean_t": 223, "min_t": 224, "min_bw_t": 225, "minimum_t": 226, "_golden_function_minimum": 226, "mish_t": 227, "20": [227, 249, 316, 317, 382, 396, 398], "initialize_model": [228, 229, 373, 395, 397], "model_nam": [228, 229, 373, 395, 396, 397], "convert_to_ttnn": [228, 229, 373], "custom_preprocessor": [228, 229, 373, 395, 397], "parameterdict": [228, 229], "prefix": [228, 229], "run_model": [228, 397], "reader_patterns_cach": 228, "disabl": [228, 229, 378, 392, 393, 394, 395, 396, 397, 399], "doesn": [228, 229, 392], "invalid": [228, 229], "preprocessor": [228, 229], "put": [228, 229, 373, 392, 394, 397], "submodul": [228, 229, 380], "appear": [228, 229, 380], "ttnn_module_arg": [228, 397], "tmp": [228, 392, 393, 394, 395, 397, 398], "model_graph": 228, "svg": [228, 397, 398, 399], "avoid": [228, 316, 382, 383], "recomput": [228, 378], "moreh_sum_t": 230, "mse_loss_t": 231, "_golden_function_mse_loss": 231, "mul_bw_t": 232, "multigammaln_t": 233, "multigammaln_bw_t": 234, "_golden_function_mvlgamma": 234, "multivari": 234, "mvlgamma": 234, "5f": 234, "multiply_t": 235, "ne_t": 236, "ne__t": 237, "_golden_function_ne_": 237, "neg_t": 238, "neg_bw_t": 239, "_golden_function_neg": 239, "nextafter_t": 240, "_golden_function_nextaft": 240, "_float": 240, "neq": 240, "nez_t": 241, "nonzero_t": 242, "well": [242, 377, 381], "normalize_global_t": 243, "_golden_function_normalize_glob": 243, "normalize_hw_t": 244, "_golden_function_normalize_hw": 244, "ones_t": 245, "ones_like_t": 246, "trace_region_s": 247, "dispatch_core_config": [247, 394, 395], "dispatchcoreconfig": [247, 394, 395], "0x7f3df84d2270": 247, "worker_l1_s": 247, "small": [247, 396], "default_l1_small_s": 247, "default_trace_region_s": 247, "allocat": 247, "dispatch_core_typ": [247, 394, 395], "dispatchcoretyp": [247, 394, 395], "0x7fbac5bfc1b0": 247, "outer_t": 248, "_golden_function_out": 248, "otim": 248, "pad_t": 249, "_preprocess_golden_function_input": 249, "locat": [249, 378, 379, 382, 396, 399], "mutual": 249, "output_tensor_shap": [249, 346, 377], "input_tensor_start": [249, 377], "union": 249, "use_multicor": [249, 345, 346, 363, 364], "pad_input": 249, "unpadded_shap": 250, "annot": [250, 374, 377], "fixeds": [250, 377], "permute_t": 251, "nullopt": [251, 351, 377, 397], "tthe": 251, "broken": 251, "garbag": 251, "polar_t": 252, "cartesian": 252, "theta": 252, "polar_bw_t": 253, "polygamma_t": 254, "_golden_function_polygamma": 254, "decim": [254, 290], "k": [254, 351, 355, 356, 378, 393], "polygamma_bw_t": 255, "polyval_t": 256, "_golden_function_polyv": 256, "coeffici": [256, 374], "coeff": 256, "sum_": [256, 378], "polynomi": 256, "pow_t": 257, "_golden_function_pow": 257, "expon": [257, 258, 292, 293, 375, 383], "pow_bw_t": 258, "power": [258, 362, 375], "prelu_t": 259, "_golden_function_prelu": 259, "arrai": 259, "input_memory_config": [260, 261], "input_layout": [260, 261], "suitabl": [260, 261], "invoc": [260, 261], "exact": [260, 261, 378, 383, 394], "weights_format": [260, 261], "oihw": [260, 261], "has_bia": 261, "term": [261, 381], "prod_t": 262, "all_dimens": [262, 263], "prod_bw_t": 263, "particular": [263, 373, 380, 392, 399], "rad2deg_t": 264, "rad2deg_bw_t": 265, "_golden_function_rad2deg": 265, "rdiv_t": 266, "_golden_function_rdiv": 266, "numer": [266, 316, 378, 383], "rdiv_bw_t": 267, "real_t": 268, "real_bw_t": 269, "new_tensor": 270, "my_memory_config": 270, "reciprocal_t": 271, "inaccur": [271, 383], "characterist": 271, "fp": 271, "reciprocal_bw_t": 272, "_golden_function_reciproc": 272, "reduce_scatter_t": 273, "reduce0scatt": 273, "reglu_t": 276, "_golden_function_reglu": 276, "relu_t": 277, "relu6_t": 278, "relu6_bw_t": 279, "_golden_function_relu6": 279, "relu_bw_t": 280, "_golden_function_relu": 280, "relu_max_t": 281, "_golden_function_relu_max": 281, "upper_limit": 281, "cap": 281, "relu_min_t": 282, "_golden_function_relu_min": 282, "lower_limit": 282, "remainder_t": 283, "_golden_function_remaind": 283, "modulu": 283, "remainder_bw_t": 284, "repeat_t": 285, "repetit": [285, 287, 378], "repetition_vector": 285, "smallvector": 285, "repeat_bw_t": 286, "repeat_interleave_t": 287, "he": 287, "expand": [287, 383], "torch_input_tensor": [287, 397, 399], "torch_result": 287, "reshape_t": 288, "cost": [288, 378], "view": [288, 399], "condit": [288, 374], "met": 288, "new_shap": 288, "kwtype": 288, "rms_norm_t": 289, "round_t": 290, "_golden_function_round": [290, 291], "round_bw_t": 291, "rpow_t": 292, "_golden_function_rpow": 292, "upto": 292, "28": [292, 396, 398], "posit": [292, 356, 375, 378], "rpow_bw_t": 293, "rsqrt_t": 294, "rsqrt_bw_t": 295, "_golden_function_rsqrt": 295, "rsub_t": 296, "_golden_function_rsub": 296, "rsub_bw_t": 297, "subract": 297, "revers": 297, "scatter_t": 298, "_golden_function_scatt": 298, "selu_t": 299, "_golden_function_selu": [299, 300], "0507": 299, "67326": 299, "selu_bw_t": 300, "modifi": [301, 316, 375, 392], "short": [301, 396, 399], "sigmoid_t": 302, "vector_mod": 302, "better": [302, 339, 378], "rc": [302, 380], "sigmoid_accurate_t": 303, "sigmoid_bw_t": 304, "_golden_function_sigmoid": 304, "sign_t": 305, "sign_bw_t": 306, "signbit_t": 307, "silu_t": 308, "silu_bw_t": 309, "_golden_function_silu": 309, "sin_t": 310, "sin_bw_t": 311, "sinh_t": 312, "sinh_bw_t": 313, "slice_t": 314, "slice_start": 314, "input_tensor_shap": [314, 377], "slice_end": 314, "slice_step": 314, "unmodifi": 314, "undefin": [314, 378], "softmax_t": 315, "0310059": 315, "softplus_t": 316, "By": [316, 381, 393], "steep": 316, "higher": [316, 380, 382, 383], "steeper": 316, "approach": [316, 373, 381, 399], "hard": [316, 392], "stabil": [316, 378, 381], "veri": [316, 382, 392, 394], "softplus_bw_t": 317, "softshrink_t": 318, "_golden_function_softshrink": 318, "softshrink_bw_t": 319, "softsign_t": 320, "softsign_bw_t": 321, "sqrt_t": 322, "sqrt_bw_t": 323, "_golden_function_sqrt": 323, "square_t": 324, "square_bw_t": 325, "_golden_function_squar": 325, "squared_difference_t": 326, "_golden_function_squared_differ": 326, "squared_difference_bw_t": 327, "std_t": 328, "sub_bw_t": 329, "subalpha_t": 330, "_golden_function_subalpha": 330, "subalpha_bw_t": 331, "subtract_t": 332, "sum_t": 333, "swiglu_t": 334, "_golden_function_swiglu": 334, "swish_t": 335, "queueid": [336, 377, 378], "sub_device_id": 336, "subdeviceid": 336, "synchron": [336, 399], "wait": [336, 378, 382], "complet": [336, 378], "associ": 336, "ran": [336, 382, 394], "chip": 336, "set_sub_device_stall_group": 336, "queu": 336, "tan_t": 337, "tan_bw_t": 338, "_golden_function_tan": 338, "tanh_t": 339, "accuraci": [339, 374], "tanh_bw_t": 340, "_golden_function_tanh": 340, "tanhshrink_t": 341, "_golden_function_tanhshrink": [341, 342], "tanhshrink_bw_t": 342, "threshold_t": 343, "_golden_function_threshold": [343, 344], "threshold_bw_t": 344, "tilize_t": 345, "_nop_golden_funct": 345, "tilize_with_val_padding_t": 346, "800781": 347, "455078": 347, "585938": 347, "to_layout_t": 348, "organ": [348, 374, 383], "becom": 348, "thread": [348, 377, 396, 399], "42188": 348, "398438": 348, "to_memory_config_t": 349, "torch_rank": [350, 399], "Will": 350, "squeez": [350, 392, 393, 394, 395, 397], "reach": 350, "mesh_compos": 350, "meshtotensor": 350, "torch_tensor": [350, 392], "3008": 350, "8438": 350, "3242": 350, "9023": 350, "5820": 350, "5312": 350, "topk_t": 351, "_create_golden_function_topk": 351, "largest": [351, 378, 383], "smallest": [351, 378], "sure": [351, 380, 384, 399], "bfloat8": 351, "attention_softmax_t": 352, "head_siz": [352, 353, 354, 357, 394], "attention_mask": [352, 353, 394], "mask": [352, 353, 356], "softmaxprogramconfig": [352, 353], "softmaxdefaultprogramconfig": [352, 353], "causal_mask": [352, 353], "causal": [352, 353, 355], "attention_softmax__t": 353, "concatenate_heads_t": 354, "num_head": [354, 357, 394], "sequence_s": [354, 357, 373, 394, 395, 396], "scaled_dot_product_attention_t": 355, "dot": [355, 356], "mimick": 355, "flashattent": 355, "accept": [355, 356, 374, 381], "sdpaprogramconfig": [355, 356], "q": [355, 356], "parallel": [355, 356, 378, 382, 396], "nqh": 355, "input_tensor_q": [355, 356], "dh": [355, 356], "input_tensor_k": [355, 356], "nkv": [355, 356], "input_tensor_v": [355, 356], "attn_mask": [355, 356], "impli": 355, "is_caus": [355, 356], "scaled_dot_product_attention_decode_t": 356, "decod": [356, 398], "mqa": 356, "sdpamulticoreprogramconfig": 356, "nh": 356, "cur_po": 356, "cur_pos_tensor": 356, "pnh": 356, "skip": [356, 392, 393, 394, 395, 396, 397, 398], "split_query_key_value_and_split_heads_t": 357, "hidden_s": [357, 373, 394, 395], "Then": [357, 373, 380], "score": [357, 396], "kv_input_tensor": 357, "q1": 357, "k1": 357, "v1": [357, 380], "qn": 357, "kn": 357, "vn": 357, "cat": [357, 394, 398], "num_kv_head": 357, "contigu": [357, 378, 392], "transpose_kei": 357, "num": 357, "tril_t": 358, "diagon": [358, 359], "triu_t": 359, "trunc_t": 360, "_golden_function_trunc": [360, 361], "trunc_bw_t": 361, "unary_chain_t": 362, "ops_chain": 362, "unarywithparam": 362, "chain": 362, "unaryoptyp": [362, 378], "untilize_t": 363, "use_pack_until": [363, 364], "sub_core_grid": 363, "corerangeset": 363, "untilize_with_unpadding_t": 364, "output_tensor_end": [364, 377], "upsample_t": 365, "nearest": [365, 378], "scale_factor": [365, 378], "array2d": 365, "var_t": 366, "where_t": 367, "_golden_function_wher": 367, "where_bw_t": 368, "xlogy_t": 369, "_golden_function_xlogi": 369, "cdot": 369, "xlogy_bw_t": 370, "zeros_t": 371, "zeros_like_t": 372, "basi": 373, "rewritten": 373, "bert": [373, 379, 395, 396], "modeling_bert": [373, 395], "bertintermedi": 373, "super": [373, 397], "dens": 373, "intermediate_s": 373, "forward": [373, 378, 397], "hidden_st": [373, 394, 395], "tdd": 373, "torch_bert": 373, "utility_funct": 373, "torch_random": 373, "utils_for_test": 373, "assert_with_pcc": 373, "mark": [373, 374], "parametr": 373, "phiyodr": [373, 395], "finetun": [373, 395], "squad2": [373, 395], "384": [373, 394, 395], "test_bert_intermedi": 373, "manual_se": [373, 392, 393, 394, 397, 398, 399], "bertconfig": [373, 395], "from_pretrain": [373, 395, 398], "eval": [373, 395, 396, 397, 398], "torch_hidden_st": [373, 394], "torch_output": [373, 394], "_": [373, 382, 394, 398], "bert_intermedi": 373, "9999": [373, 392, 393, 394, 395, 397, 399], "dictionari": 373, "turn": 373, "ttnn_bert": [373, 395], "999": 373, "someth": 373, "ttnn_optimized_bert": [373, 395], "isinst": 373, "preprocess_linear_weight": [373, 394], "preprocess_linear_bia": [373, 394], "ff1_weight": 373, "ff1_bia": 373, "best": [373, 392], "integr": [373, 374, 375, 378], "incredibli": 374, "excit": 374, "exploratori": 374, "freedom": 374, "showcas": 374, "few": [374, 383, 392], "question": 374, "answer": 374, "see": [374, 378, 381, 392, 396, 398], "highlight": [374, 383], "successfulli": [374, 384, 396, 398], "migrat": [374, 392, 393, 394, 395, 397, 399], "good": 374, "documen": 374, "describ": [374, 378], "credit": 374, "author": 374, "might": [374, 378, 393], "encount": 374, "demonstr": [374, 382], "adequ": 374, "achiev": [374, 381], "pearson": 374, "ci": 374, "pipelin": [374, 382], "unit": [374, 378], "metric": 374, "meet": 374, "continu": [374, 380, 381], "upon": 374, "everi": [374, 377, 382, 394, 399], "commit": [374, 396], "ongo": 374, "complianc": 374, "catch": 374, "regress": 374, "earli": 374, "collect": [374, 382, 384, 396], "varieti": [374, 378], "measur": 374, "special": [374, 378, 383], "run_device_perf_model": 374, "models_device_performance_bare_met": 374, "schedul": 374, "clear": [374, 381, 392, 393, 394, 395, 396, 397], "incorpor": 374, "autom": 374, "extern": [374, 381, 383], "servic": 374, "impact": 374, "run_perf_models_oth": 374, "run_perf_models_llm_javelin": 374, "run_perf_models_cnn_javelin": 374, "models_performance_bare_met": 374, "run_demos_single_card_n150_test": 374, "run_demos_single_card_n300_test": 374, "run_t3000_demo_test": 374, "test_ttnn_functional_resnet50": 374, "resnet50testinfra": 374, "setup": [374, 379, 380, 396, 398], "handl": [375, 392], "machin": [375, 377, 378, 382, 384, 398], "send": [375, 377, 378], "__name__": 375, "__main__": [375, 396], "pci": [375, 392, 393, 394, 395, 396, 397], "slot": 375, "tt_devic": [375, 377, 378], "py_tensor": [375, 377], "tt_tensor": [375, 377, 378], "tolist": [375, 377], "tt_relu_out": 375, "closedevic": 375, "power_fp": 375, "suppli": [375, 377, 378], "lastli": 375, "fallback_op": [375, 378], "py_tensor_exp": 375, "py_relu_out": 375, "py_pow_out": 375, "tt_pow_out": 375, "behav": [375, 378], "regular": 375, "hood": 375, "tt_silu_out": 375, "tt_exp_out": 375, "leav": 375, "anyth": 375, "manipul": 377, "sent": 377, "receiv": [377, 382], "platform": [377, 379, 396], "ttdnn": 377, "z": [377, 378, 382, 398], "construct": [377, 399], "nor": 377, "subsect": 377, "insid": [377, 399], "63": [377, 396], "65": [377, 396, 398], "66": 377, "127": [377, 396], "3968": 377, "3969": 377, "3970": 377, "4031": 377, "4032": 377, "4033": 377, "4034": 377, "4095": 377, "4097": 377, "4098": 377, "4159": 377, "4160": 377, "4161": 377, "6462": 377, "4223": 377, "8064": 377, "8065": 377, "8066": 377, "8127": 377, "8128": 377, "8129": 377, "8130": 377, "8191": 377, "95": 377, "1984": 377, "1985": 377, "2015": [377, 396], "33": [377, 393, 396], "96": [377, 396, 399], "97": [377, 396], "2016": 377, "2017": [377, 396, 398], "2047": 377, "2080": 377, "2081": 377, "2111": 377, "2144": 377, "2145": 377, "2175": 377, "4064": 377, "4065": 377, "fourth": [377, 378], "6111": 377, "6176": 377, "ownedstorag": [377, 378], "borrowedstorag": 377, "devicestorag": [377, 378], "pointer": 377, "That": [377, 383, 393], "underli": 377, "numpi": [377, 383, 396, 398], "reason": 377, "data_typ": [377, 394], "No": [377, 378], "bank": 377, "arg1": 377, "arg2": 377, "arg3": 377, "divisbl": [377, 378], "arg4": 377, "arg5": 377, "single_bank": 377, "memory_layout": [377, 378], "shard_spec": 377, "ptr": 377, "np": 377, "owned_buffer_for_uint8_t": 377, "owned_buffer_for_uint16_t": 377, "owned_buffer_for_int32_t": 377, "owned_buffer_for_uint32_t": 377, "owned_buffer_for_float32_t": 377, "owned_buffer_for_bfloat16_t": 377, "borrowed_buffer_for_uint8_t": 377, "borrowed_buffer_for_uint16_t": 377, "borrowed_buffer_for_int32_t": 377, "borrowed_buffer_for_uint32_t": 377, "borrowed_buffer_for_float32_t": 377, "borrowed_buffer_for_bfloat16_t": 377, "everywher": 377, "inp": 377, "tt_tensor_pad": 377, "npad": 377, "bottom": [377, 384], "storagetyp": 377, "cq": 377, "uint8_t": 377, "ti": 377, "output_tensor_start": 377, "tt_tensor_unpad": 377, "nunpad": 377, "apart": 377, "restrict": 377, "eight": 377, "shardspec": 377, "dram_channel": 377, "rememb": 377, "py_output": 377, "unifi": 378, "tt_eager": [378, 396], "caller": 378, "launch": [378, 384], "plug": 378, "declar": 378, "newoper": 378, "programwithcallback": 378, "create_program": 378, "some_memb": 378, "optional_input_tensor": 378, "validate_with_output_tensor": 378, "programwithoptionaloutputtensor": 378, "box": [378, 380], "preferred_nam": 378, "parallelization_strategi": 378, "get_parallelization_strategi": 378, "parallelizationstrategyenum": 378, "enqueu": 378, "finish": [378, 382, 396], "asynchron": 378, "reload": 378, "program_cach": 378, "disable_and_clear": 378, "entri": 378, "num_entri": 378, "cachabl": 378, "override_runtime_args_callback": 378, "input_buff": 378, "output_buff": 378, "src_dram_buff": 378, "dst_dram_buff": 378, "tt_metal_logger_typ": [378, 399], "tt_metal_logger_level": [378, 399], "1280": 378, "layoutconversiononhost": 378, "miss": [378, 399], "eltwiseunari": 378, "op_typ": 378, "_tt": 378, "mul": [378, 394], "ellipsi": 378, "output_on_devic": 378, "third": 378, "fewer": 378, "four": 378, "paper": 378, "separ": 378, "normalized_shap": 378, "layer": [378, 382, 397], "m": [378, 380, 393], "reflect": [378, 381], "replic": 378, "align_corn": 378, "recompute_scale_factor": 378, "antialia": 378, "down": 378, "bilinear": 378, "bicub": 378, "trilinear": 378, "area": 378, "center": 378, "corner": 378, "pixel": 378, "anti": 378, "alias": 378, "output_s": 378, "total": [378, 382], "sigma": 378, "logist": 378, "x_": 378, "x_i": 378, "sum_j": 378, "x_j": 378, "lie": 378, "padding_mod": 378, "simplest": 378, "c_": 378, "h_": 378, "w_": 378, "precis": [378, 383], "n_i": 378, "_j": 378, "star": 378, "learnabl": 378, "num_batches_track": 378, "num_featur": 378, "affin": 378, "track_running_stat": 378, "4d": 378, "deep": 378, "covari": 378, "track": 378, "num_channel": 378, "lernabl": 378, "elementwise_affin": 378, "return_indic": 378, "channels_last": [378, 382], "reshape_2d": 378, "c_j": 378, "max_": 378, "ldot": 378, "implicit": 378, "infin": [378, 383], "mod": 378, "dividend": 378, "bitwis": 378, "NOT": [378, 392, 393, 394, 395, 397], "immedi": 378, "arithmet": 378, "operand": 378, "promot": 378, "behavior": [378, 383], "retain": 378, "argmin": 378, "fusion": 378, "togeth": 378, "fused_op": 378, "in_featur": 378, "out_featur": 378, "num_dim": 378, "moment": 378, "add_and_norm": 378, "flexibl": 378, "earlier": 378, "while": [378, 381], "ml": 379, "workload": 379, "falcon": 379, "7b": 379, "navig": [379, 380], "mistral": 379, "llama2": 379, "70b": 379, "soon": 379, "t3000": [379, 380], "learn": [379, 383, 393, 396], "dive": 379, "deeper": 379, "jupyt": [379, 384, 396], "notebook": [379, 384, 396, 398], "softwar": [380, 384, 392, 393, 394, 395, 397], "packag": [380, 395, 396, 398], "asset": 380, "tag": 380, "compat": [380, 385, 388, 389], "o": [380, 382, 392, 393, 394, 395, 396, 398], "galaxi": 380, "4u": 380, "ubuntu": [380, 392, 393, 394, 395, 396, 397, 398], "04": [380, 398], "fw_pack": 380, "v3": 380, "6u": 380, "17": [380, 394, 395, 396, 397, 398], "v80": 380, "blackhol": 380, "wget": 380, "raw": [380, 398], "githubusercont": 380, "install_depend": 380, "chmod": 380, "sudo": [380, 382], "dkm": 380, "debian": 380, "apt": 380, "fedora": 380, "dnf": 380, "enterpris": 380, "linux": [380, 396], "epel": 380, "cd": [380, 382, 396], "modprob": 380, "visit": 380, "caution": 380, "Be": [380, 384], "fw": [380, 382, 392, 393, 394, 395, 397], "pip": [380, 396, 398], "reboot": [380, 382], "curl": 380, "fwbundl": 380, "l": 380, "tar": 380, "correctli": 380, "telemetri": 380, "loudbox": 380, "quietbox": 380, "closer": 380, "quickest": 380, "ai": [380, 392, 393, 394, 395, 396, 397], "quick": 380, "who": [380, 383], "recurs": 380, "build_met": [380, 382, 396], "pandoc": [380, 396], "libtbb": 380, "dev": [380, 396], "libcapston": 380, "pkg": 380, "doxygen": 380, "registri": 380, "pull": [380, 381], "ghcr": 380, "io": [380, 382], "amd64": 380, "rm": 380, "hugepag": [380, 392, 393, 394, 395, 396, 397], "1g": 380, "bash": [380, 396], "architectur": [380, 385, 388, 389, 399], "choic": [380, 392], "wheel_fil": 380, "whl": [380, 396, 398], "governor": 380, "txt": [380, 396], "cpufrequtil": 380, "cpupow": 380, "frequenc": 380, "arch_nam": [380, 394, 395], "tt_metal_hom": [380, 382, 396], "python3": [380, 395, 396, 398], "run_op_on_devic": 380, "intend": 381, "reliabl": 381, "simultan": 381, "fine": 381, "tune": 381, "themselv": [381, 383], "goal": 381, "ask": 381, "driven": 381, "popular": 381, "kent": 381, "beck": 381, "benefit": 381, "submit": 381, "label": [381, 383], "fulli": [381, 382], "branch": 381, "brief": 381, "4730": 381, "rst": 381, "referenc": [381, 396], "sweep": 381, "codeown": 381, "pr": 381, "comment": 381, "test_perf_resnet": 382, "test_perf_bare_met": 382, "0185": 382, "consol": 382, "similar": [382, 392, 394], "shorter": 382, "cli": 382, "explain": 382, "reset": 382, "tt_smi": 382, "tensix_reset": 382, "tensix": 382, "skew": 382, "timer": 382, "wh": 382, "analyz": 382, "1000": [382, 397, 398], "fixtur": 382, "ttl": 382, "dumpdeviceprofil": 382, "drop": 382, "around": 382, "120": [382, 396], "eighth": 382, "warn": [382, 392, 393, 394, 395, 396, 397], "mention": 382, "risc": 382, "those": 382, "analysi": 382, "affect": 382, "flow": 382, "python_fallback": [382, 396], "tt_dnn_cpu": 382, "tt_dnn_devic": [382, 396], "global": [382, 396], "fidel": [382, 396], "field": 382, "lofi": [382, 397], "hifi2": 382, "hifi3": 382, "clock": 382, "stamp": 382, "durat": [382, 394, 396, 399], "nanosecond": 382, "end_t": 382, "start_t": 382, "cycl": 382, "earliest": 382, "core_frequ": 382, "marker": 382, "brisc": 382, "ncrisc": 382, "trisc0": 382, "trisc1": 382, "trisc2": 382, "cb": 382, "spent": 382, "cb_wait_front": 382, "reserv": 382, "cb_reserve_back": 382, "datamov": 382, "input_0_memori": 382, "dev_0_dram": 382, "dec_0_l1": 382, "tgz": 382, "filenam": [382, 398], "item": [382, 396], "aggreg": 382, "timestamp": 382, "4x4": 383, "32x32": 383, "still": 383, "transit": 383, "2x2": 383, "illustr": 383, "byte": 383, "sizeof": 383, "introduc": 383, "observ": 383, "magnitud": [383, 394], "flush": 383, "instabl": 383, "extrem": 383, "domin": 383, "caus": 383, "lose": 383, "7014118346046923e": 383, "dataset": [383, 396], "frequent": 383, "occurr": 383, "uniform": 383, "deal": 383, "critic": 383, "homogen": 383, "unsuit": 383, "inher": 383, "owned_host_storag": 383, "borrowed_host_storag": 383, "device_storag": 383, "abstract": 383, "awai": 383, "compress": 383, "upper": 383, "remain": 383, "128x128": 383, "subset": 383, "know": 383, "understand": 383, "unshard": 383, "coordin": 383, "physic": 383, "certain": 384, "ramp": 384, "skillset": 384, "tree": 384, "lab": 384, "port": 384, "8888": 384, "hint": 384, "cell": 384, "central": 392, "sens": 392, "sram": 392, "concept": 392, "2024": [392, 393, 394, 395, 396, 397, 398, 399], "07": [392, 393, 394, 395, 397], "18": [392, 393, 394, 395, 396, 398], "48": [392, 395, 396], "818": 392, "136": [392, 393, 394, 395], "cache_path": [392, 393, 394, 395, 397], "posixpath": [392, 393, 394, 395], "home": [392, 393, 394, 395, 396, 397, 398], "comparison_mode_pcc": [392, 393, 394, 395, 397, 399], "enable_comparison_mod": [392, 393, 394, 395, 397, 399], "enable_detailed_buffer_report": [392, 393, 394, 395, 397, 399], "enable_detailed_tensor_report": [392, 393, 394, 395, 397, 399], "enable_fast_runtime_mod": [392, 393, 394, 395, 397, 399], "enable_graph_report": [392, 393, 394, 395, 397, 399], "enable_log": [392, 393, 394, 395, 397, 399], "enable_model_cach": [392, 393, 394, 395, 397], "model_cache_path": [392, 393, 394, 395, 397], "report_nam": [392, 393, 394, 395, 397, 399], "root_report_path": [392, 393, 394, 395, 397], "throw_exception_on_fallback": [392, 393, 394, 395, 397], "tmp_dir": [392, 393, 394, 395, 397, 398], "905": 392, "operation_decor": [392, 393, 394, 395, 397], "758": [392, 393, 394, 395], "906": 392, "907": [392, 394], "908": [392, 394], "909": [392, 394], "910": [392, 394], "911": [392, 394], "914": [392, 394], "915": [392, 394], "pearson_correlation_coeffici": [392, 393, 394, 395, 397], "919": [392, 394], "920": 392, "921": [392, 394], "unsqueeze_to_4d": [392, 393, 394, 395, 397], "922": [392, 394], "923": [392, 394], "924": [392, 394], "925": [392, 394], "926": [392, 394], "allocate_tensor_on_devic": [392, 393, 394, 395, 397], "copy_host_to_device_tensor": [392, 393, 394, 395, 397], "927": [392, 394], "928": [392, 394], "929": [392, 394], "930": [392, 394], "931": [392, 394], "934": [392, 394], "935": 392, "936": [392, 394, 395], "937": 392, "938": [392, 394], "941": [392, 394], "942": [392, 394], "943": [392, 394], "948": [392, 394], "949": [392, 394, 395], "950": [392, 394], "951": [392, 394, 395], "952": [392, 394], "953": [392, 394], "954": [392, 394], "955": [392, 394], "958": [392, 394], "959": 392, "960": [392, 394, 395], "f": [392, 393, 394, 396, 398, 399], "As": [392, 393], "1234": 392, "again": 392, "action": 392, "98300": 392, "11301": 392, "37592": 392, "64318": 392, "53437": 392, "59434": 392, "69190": 392, "04268": 392, "33346": 392, "20231": 392, "15127": 392, "58303": 392, "pick": 392, "80078": 392, "69531": 392, "71484": 392, "33398": 392, "60156": 392, "36523": 392, "73047": 392, "90625": 392, "59766": 392, "83203": 392, "61719": 392, "53516": 392, "effici": [392, 393], "transfer": 392, "intuit": 392, "nshape": 392, "nlayout": 392, "21680": 392, "24316": 392, "19336": 392, "40625": 392, "81641": 392, "50781": 392, "09961": 392, "54688": 392, "70703": 392, "93359": 392, "06787": 392, "75781": 392, "insert": 392, "cale": 392, "49": [392, 396, 398], "027": [392, 393], "silicondriv": [392, 393, 394, 395, 396, 397], "detect": [392, 393, 394, 395, 396, 397], "040": 392, "init_detect_tt_device_numanod": [392, 393, 394, 395, 396, 397], "could": [392, 393, 394, 395, 396, 397], "numanodeset": [392, 393, 394, 395, 396, 397], "pci_bus_id": [392, 393, 394, 395, 396, 397], "0000": [392, 393, 394, 395, 396, 397], "00": [392, 393, 394, 395, 396, 397, 398], "041": 392, "bind_area_memory_nodeset": [392, 393, 394, 395, 396, 397], "unabl": [392, 393, 394, 395, 396, 397], "numanod": [392, 393, 394, 395, 396, 397], "membind": [392, 393, 394, 395, 396, 397], "ttsilicondevic": [392, 393, 394, 395, 396, 397], "init_hugepag": [392, 393, 394, 395, 396, 397], "bind_area_to_memory_nodeset": [392, 393, 394, 395, 396, 397], "fail": [392, 393, 394, 395, 396, 397], "ch": [392, 393, 394, 395, 396, 397], "effect": [392, 393, 394, 395, 396, 397], "decreas": [392, 393, 394, 395, 396, 397], "893": [392, 393, 394, 395, 396, 397], "082": 392, "ethernet": [392, 393, 394, 395, 397], "clk": [392, 393, 394, 395, 396, 397], "800": [392, 393, 394, 395], "mhz": [392, 393, 394, 395, 396, 397], "torch_input_tensor_a": [392, 399], "torch_input_tensor_b": [392, 399], "stai": 392, "unless": [392, 399], "explicit": 392, "figur": 392, "hang": 392, "properli": 392, "41": [393, 396], "903": 393, "989": [393, 394], "990": [393, 394], "991": 393, "992": 393, "993": 393, "994": 393, "995": 393, "996": 393, "001": 393, "002": 393, "003": 393, "004": 393, "005": 393, "006": 393, "007": 393, "008": 393, "009": 393, "010": 393, "011": 393, "012": 393, "013": 393, "015": 393, "016": 393, "017": 393, "018": 393, "020": 393, "021": 393, "022": 393, "028": 393, "029": 393, "030": 393, "031": 393, "032": 393, "033": 393, "035": 393, "036": 393, "037": 393, "053": 393, "066": 393, "067": 393, "094": 393, "repeatedli": 393, "enable_program_cach": [393, 394, 399], "torch_a": 393, "torch_b": 393, "longer": 393, "signific": 393, "aslo": 393, "why": 393, "conver": 393, "todo": 393, "75000": 393, "25000": 393, "50000": 393, "62500": 393, "effeci": 393, "enjoi": 393, "massiv": 393, "eth": [394, 395], "54": [394, 396], "821": 394, "912": 394, "939": 394, "976": 394, "55": [394, 396], "014": 394, "fashion": 394, "multi_head_attent": 394, "query_weight": 394, "query_bia": 394, "key_weight": 394, "key_bia": 394, "value_weight": 394, "value_bia": 394, "output_weight": 394, "output_bia": 394, "fallback_reshap": 394, "get_fallback_funct": [394, 399], "attention_scor": 394, "attention_prob": 394, "context_lay": 394, "self_output": 394, "torch_attention_mask": [394, 395], "torch_query_weight": 394, "torch_query_bia": 394, "torch_key_weight": 394, "torch_key_bia": 394, "torch_value_weight": 394, "torch_value_bia": 394, "torch_output_weight": 394, "torch_output_bia": 394, "00607705116272": 394, "250946044921875": 394, "ahead": 394, "optimized_multi_head_attent": 394, "fused_qkv_weight": 394, "fused_qkv_bia": 394, "self_output_weight": 394, "self_output_bia": 394, "fused_qkv_output": 394, "context_layer_after_concatenate_head": 394, "qkv": 394, "torch_qkv_weight": 394, "torch_qkv_bia": 394, "qkv_weight": 394, "qkv_bia": 394, "optimized_output": 394, "474989175796509": 394, "020017147064208984": 394, "torch_optimized_output": 394, "allclos": 394, "19": [394, 396, 398], "ttnn_config_overrid": [395, 397, 399], "47": [395, 396], "183": 395, "133": [395, 396], "overrid": [395, 396, 399], "184": 395, "354": 395, "355": 395, "356": 395, "357": 395, "358": 395, "359": 395, "360": [395, 398], "362": 395, "366": 395, "367": 395, "368": 395, "369": 395, "370": 395, "371": 395, "372": 395, "373": [395, 396], "374": 395, "378": 395, "379": 395, "380": [395, 396], "381": 395, "383": 395, "385": 395, "390": 395, "391": 395, "392": 395, "393": 395, "394": 395, "395": 395, "396": 395, "397": 395, "398": 395, "399": 395, "set_verbosity_error": 395, "100": [395, 396], "412": 395, "442": 395, "447": 395, "googl": [395, 398], "bert_uncased_l": 395, "4_h": 395, "256_a": 395, "bertselfoutput": 395, "site": [395, 396, 398], "huggingface_hub": [395, 396], "file_download": 395, "1132": 395, "futurewarn": 395, "resume_download": 395, "resum": 395, "force_download": 395, "874": 395, "num_hidden_lay": 395, "bertforquestionansw": 395, "input_id": 395, "vocab_s": 395, "torch_token_type_id": 395, "torch_position_id": 395, "ttnn_bert_input": 395, "preprocess_input": 395, "bert_for_question_answ": 395, "50": 395, "339": 395, "manage_config": [395, 397, 399], "144": 395, "340": 395, "341": 395, "555": 395, "_paramet": [395, 397], "env": [395, 396, 397, 398], "34": [395, 396, 397], "343": 395, "634": 395, "636": 395, "147": [395, 396], "restor": [395, 397], "02": [395, 396], "947": 395, "unset": 396, "silent": 396, "nuke": 396, "jobserv": 396, "unavail": 396, "j1": 396, "parent": 396, "rule": 396, "artifact": 396, "conf": 396, "backend": 396, "pypi": [396, 398], "org": [396, 398], "satisfi": [396, 398], "setuptool": 396, "44": 396, "py3": 396, "kb": 396, "edit": 396, "obtain": 396, "statu": 396, "metadata": [396, 398], "click": 396, "loguru": 396, "58": 396, "ipywidget": 396, "139": 396, "90": [396, 397], "db": 396, "290ab3a34f2ef0b5a0f89235dc2d40fea83e77de84ed2dc05c": 396, "pyyaml": [396, 398], "cp38": 396, "linux_x86_64": 396, "jupyterlab": 396, "mb": 396, "pyelftool": 396, "py2": 396, "174": 396, "4f": 396, "ed": 396, "863cf4386fe6db3c09333712009ec1c5146a36f3904b469d13": 396, "curtsi": 396, "91": 396, "b7": 396, "0c117d73912c6c2beb1eb0d7d6884f4e79e6e5b5e91eeb34f5": 396, "torchtrail": 396, "manylinux_2_12_x86_64": 396, "manylinux2010_x86_64": 396, "matplotlib": 396, "toolz": 396, "pillow": [396, 398], "manylinux_2_17_x86_64": 396, "manylinux2014_x86_64": 396, "panda": 396, "2bcpu": 396, "199": 396, "dash": 396, "rich": 396, "238": 396, "seaborn": 396, "293": 396, "plotli": 396, "traitlet": 396, "85": 396, "widgetsnbextens": 396, "ipython": [396, 397, 398], "798": 396, "widget": 396, "jupyterlab_widget": 396, "215": 396, "comm": 396, "async": 396, "lru": 396, "async_lru": 396, "tomli": 396, "python_vers": 396, "server": 396, "jupyter_serv": 396, "jinja2": [396, 398], "ipykernel": 396, "116": 396, "shim": 396, "notebook_shim": 396, "jupyterlab_serv": 396, "lsp": 396, "jupyter_lsp": 396, "68": 396, "23": 396, "53": 396, "importlib": [396, 398], "importlib_resourc": 396, "importlib_metadata": 396, "jupyter_cor": 396, "tornado": 396, "abi3": 396, "manylinux_2_5_x86_64": 396, "manylinux1_x86_64": 396, "435": 396, "bless": 396, "cwcwidth": 396, "92": 396, "pyrsist": 396, "121": 396, "graphviz": 396, "networkx": [396, 398], "pypars": 396, "103": 396, "kiwisolv": 396, "contourpi": 396, "301": 396, "fonttool": 396, "dateutil": 396, "python_dateutil": 396, "247": [396, 397], "cycler": 396, "pytz": 396, "2020": 396, "505": 396, "extens": [396, 398], "typing_extens": 396, "html": 396, "compon": 396, "dash_html_compon": 396, "dash_tabl": 396, "flask": 396, "101": 396, "dash_core_compon": 396, "pygment": 396, "markdown": 396, "markdown_it_pi": 396, "84": 396, "tenac": 396, "pickleshar": 396, "prompt": 396, "toolkit": 396, "37": 396, "prompt_toolkit": 396, "43": 396, "386": 396, "stack": 396, "stack_data": 396, "backcal": 396, "jedi": 396, "pexpect": 396, "sys_platform": 396, "win32": 396, "inlin": 396, "matplotlib_inlin": 396, "send2trash": 396, "anyio": 396, "termin": 396, "jupyter_server_termin": 396, "client": 396, "jupyter_cli": 396, "105": 396, "nbformat": 396, "77": 396, "nbconvert": 396, "257": [396, 397], "event": 396, "jupyter_ev": 396, "websocket": 396, "websocket_cli": 396, "pyzmq": 396, "prometheu": 396, "prometheus_cli": 396, "argon2": 396, "cffi": 396, "argon2_cffi": 396, "terminado": 396, "markupsaf": [396, 398], "26": 396, "nest": 396, "asyncio": 396, "nest_asyncio": 396, "psutil": 396, "cp36": 396, "288": 396, "debugpi": 396, "babel": 396, "62": 396, "jsonschema": 396, "json5": 396, "zipp": [396, 398], "platformdir": 396, "six": 396, "wcwidth": 396, "itsdanger": 396, "blinker": 396, "werkzeug": 396, "226": 396, "mdurl": 396, "pure": 396, "pure_ev": 396, "asttoken": 396, "27": [396, 398], "parso": 396, "ptyprocess": 396, "exceptiongroup": 396, "idna": [396, 398], "61": 396, "sniffio": 396, "fastjsonschema": 396, "defusedxml": 396, "beautifulsoup4": 396, "jupyterlab_pyg": 396, "pandocfilt": 396, "mistun": 396, "tinycss2": 396, "bleach": 396, "162": 396, "nbclient": 396, "rfc3986": 396, "rfc3986_valid": 396, "json": [396, 399], "logger": 396, "python_json_logg": 396, "rfc3339": 396, "rfc3339_valid": 396, "argon2_cffi_bind": 396, "86": 396, "urllib3": [396, 398], "charset": [396, 398], "charset_norm": 396, "141": 396, "certifi": [396, 398], "163": 396, "03": [396, 397], "jsonschema_specif": 396, "pkgutil": 396, "resolv": 396, "pkgutil_resolve_nam": 396, "attr": 396, "rpd": 396, "rpds_py": 396, "soupsiev": 396, "36": 396, "webencod": 396, "444": 396, "pycpars": 396, "118": 396, "pre_commit": 396, "202": 396, "black": 396, "twine": 396, "yamllint": 396, "docutil": 396, "570": 396, "sphinx": 396, "rtd": 396, "theme": 396, "sphinx_rtd_them": 396, "sphinxcontrib": 396, "email": 396, "sphinxcontrib_email": 396, "lxml": 396, "manylinux_2_24_x86_64": 396, "breath": 396, "35": 396, "nbsphinx": 396, "jqueri": 396, "sphinxcontrib_jqueri": 396, "3a": 396, "a8": 396, "3237a93e3a6261bd24edabf3277ca59f64c1710b3d8c7c72a0": 396, "317": 396, "timeout": 396, "pytest_timeout": 396, "6c": 396, "5706d21e6b4dff52e7af12bff9ca126a3f15beb4dff386aa29": 396, "jsbeautifi": 396, "462": 396, "xlsxwriter": 396, "152": 396, "tiktoken": 396, "tqdm": [396, 398], "sentencepiec": 396, "numba": 396, "56": [396, 397], "librosa": 396, "252": [396, 397], "timm": [396, 398], "549": 396, "opencv": 396, "headless": 396, "74": 396, "opencv_python_headless": 396, "cp37": 396, "diffus": [396, 398], "604": 396, "219": 396, "ftfy": 396, "gitpython": 396, "188": 396, "einop": 396, "multiprocess": 396, "70": 396, "py38": 396, "132": 396, "81": 396, "bert_scor": 396, "fsspec": [396, 398], "173": 396, "nodeenv": 396, "cfgv": 396, "98": 396, "virtualenv": 396, "pathspec": 396, "mypi": 396, "mypy_extens": 396, "pyproject_hook": 396, "render": 396, "readme_render": 396, "pkginfo": 396, "toolbelt": 396, "requests_toolbelt": 396, "keyr": 396, "images": 396, "serializinghtml": 396, "sphinxcontrib_serializinghtml": 396, "94": 396, "jsmath": 396, "sphinxcontrib_jsmath": 396, "snowballstemm": 396, "93": [396, 397], "htmlhelp": 396, "sphinxcontrib_htmlhelp": 396, "99": 396, "alabast": 396, "applehelp": 396, "sphinxcontrib_applehelp": 396, "devhelp": 396, "sphinxcontrib_devhelp": 396, "qthelp": 396, "sphinxcontrib_qthelp": 396, "ply": 396, "plumbum": 396, "iniconfig": 396, "pluggi": 396, "0rc8": 396, "editorconfig": 396, "pyarrow": 396, "xxhash": 396, "194": 396, "huggingfac": [396, 398], "hub": [396, 398], "330": 396, "aiohttp": 396, "dill": 396, "110": 396, "regex": [396, 398], "2019": [396, 398], "777": 396, "filelock": [396, 398], "llvmlite": 396, "0dev0": 396, "soxr": 396, "soundfil": 396, "pooch": 396, "lazi": 396, "loader": 396, "lazy_load": 396, "scipi": 396, "joblib": 396, "302": 396, "audioread": 396, "scikit": 396, "scikit_learn": 396, "msgpack": 396, "534": 396, "gitdb": 396, "distlib": 396, "468": 396, "nh3": 396, "secretstorag": 396, "jeepnei": 396, "jaraco": 396, "frozenlist": 396, "240": [396, 397], "async_timeout": 396, "aiosign": 396, "yarl": 396, "308": 396, "multidict": 396, "129": 396, "threadpoolctl": 396, "smmap": 396, "cryptographi": 396, "itertool": 396, "more_itertool": 396, "57": 396, "pyproject": 396, "uninstal": 396, "msg": 396, "t5": 396, "integration_test": 396, "test_perform": 396, "test_t5_for_conditional_gener": 396, "functional_t5": 396, "ttnn_functional_t5": 396, "09": [396, 397], "ops_devic": 396, "session": 396, "cachedir": 396, "pytest_cach": 396, "rootdir": 396, "configfil": 396, "ini": 396, "plugin": 396, "600": 396, "func_onli": 396, "670": 396, "681": 396, "08": 396, "684": [396, 397], "1202": 396, "llruntim": 396, "watcher": 396, "watch": 396, "109": 396, "465": 396, "ttnn_t5": 396, "6ba823894": 396, "149": 396, "484": 396, "487": 396, "216": 396, "489": 396, "721": 396, "359902381896973": 396, "07123565673828": 396, "722": 396, "102": 396, "44269247283137575": 396, "detach": 396, "summari": 396, "627": 396, "638": 396, "639": 396, "458": 396, "224": 396, "460": 396, "292": 396, "164": 396, "22393798828125": 396, "165": 396, "322504758834839": 396, "407821983919596": 396, "pd": 396, "glob": 396, "getenv": 396, "get_latest_report": 396, "base_path": 396, "latest_dir": 396, "listdir": 396, "isdir": 396, "getmtim": 396, "valueerror": [396, 397], "latest_profile_report": 396, "df": 396, "read_csv": 396, "2024_02_09_01_38_37": 396, "ops_perf_results_resnet_2024_02_09_01_38_37": 396, "output_0_w": 396, "output_0_z": 396, "output_0_i": 396, "output_0_x": 396, "output_0_layout": 396, "output_0_data": 396, "output_0_memori": 396, "depth": 396, "compileprogram": 396, "load_tensor_ttnn": 396, "137428381893955": 396, "137428382188762": 396, "294807": 396, "137428382500949": 396, "137428399402163": 396, "16901214": 396, "137428399802068": 396, "137428399873758": 396, "71690": 396, "137428400102635": 396, "137428400351033": 396, "248398": 396, "137428400548071": 396, "137428400792528": 396, "244457": 396, "4391": 396, "reshape_ttnn": 396, "4392": 396, "137450414555424": 396, "137450414599894": 396, "44470": 396, "4393": 396, "137450414740752": 396, "137450414782422": 396, "41670": 396, "4394": 396, "bcast_batch": 396, "tt_me": 396, "108": 396, "matmulparallelizationstrategi": 396, "multi_cor": 396, "137450414881851": 396, "137450414983440": 396, "101589": 396, "32128": 396, "dev_0_dram_interleav": 396, "4395": 396, "137450415113099": 396, "137450415158748": 396, "45649": 396, "from_device_ttnn": 396, "4396": 396, "137450415235897": 396, "137450453493048": 396, "38257151": 396, "fold_batch_norm2d_into_conv2d": 397, "168": 397, "82": 397, "768": 397, "242": 397, "246": 397, "248": 397, "249": 397, "250": [397, 398], "251": 397, "253": 397, "254": 397, "255": 397, "258": 397, "262": 397, "avg_pool2d": 397, "266": 397, "268": 397, "269": 397, "device_param": 397, "24576": 397, "310": 397, "324": 397, "325": 397, "363": 397, "conv3x3": 397, "in_plan": 397, "out_plan": 397, "3x3": 397, "torchbasicblock": 397, "expans": 397, "inplan": 397, "base_width": 397, "norm_lay": 397, "basicblock": 397, "notimplementederror": 397, "conv1": 397, "bn1": 397, "conv2": 397, "bn2": 397, "torch_model": 397, "state_dict": [397, 398], "create_custom_preprocessor": 397, "conv_weight_1": 397, "conv_bias_1": 397, "conv_weight_2": 397, "conv_bias_2": 397, "682": 397, "683": 397, "499": 397, "_initialize_model_and_preprocess_paramet": 397, "449": 397, "717": 397, "718": 397, "model_resnet_block_graph": 397, "conv_param": 397, "act_block_h": 397, "__call__": 397, "fp32_dest_acc_en": 397, "packer_l1_accum_en": 397, "_out_height": 397, "_out_width": 397, "return_output_s": 397, "return_prepared_device_weight": 397, "ttnnbasicblock": 397, "get_memory_config": 397, "ttnn_model": 397, "12638": 397, "walk": 398, "colab": 398, "research": 398, "run_dit": 398, "ipynb": 398, "tab": 398, "ov": 398, "assumpt": 398, "chdir": 398, "content": 398, "upgrad": 398, "save_imag": 398, "create_diffus": 398, "autoencoderkl": 398, "find_model": 398, "collis": 398, "pil": 398, "set_grad_en": 398, "cuda": 398, "is_avail": 398, "gpu": 398, "322": 398, "fatal": 398, "destin": 398, "date": 398, "safetensor": 398, "sympi": 398, "mpmath": 398, "image_s": 398, "512": 398, "vae_model": 398, "stabilityai": 398, "sd": 398, "vae": 398, "ft": 398, "ema": 398, "mse": 398, "latent_s": 398, "input_s": 398, "pt": 398, "load_state_dict": 398, "num_sampling_step": 398, "slider": 398, "cfg_scale": 398, "class_label": 398, "207": 398, "387": 398, "974": 398, "88": 398, "979": 398, "417": 398, "279": 398, "samples_per_row": 398, "nois": 398, "len": 398, "classifi": 398, "free": 398, "guidanc": 398, "y_null": 398, "model_kwarg": 398, "p_sample_loop": 398, "forward_with_cfg": 398, "clip_denois": 398, "null": 398, "18215": 398, "dit_model_graph": 398, "png": 398, "nrow": 398, "value_rang": 398, "06": 398, "987": 398, "210": 398, "show_svg": 398, "snippet": 399, "matmul_output_tensor": 399, "torch_matmul_output_tensor": 399, "unlik": 399, "start_tim": 399, "end_tim": 399, "stdout": 399, "6391518115997314": 399, "0007393360137939453": 399, "9998": 399, "exp_trac": 399, "substitut": 399, "disk": 399, "implementaiton": 399, "addition": 399, "ttnn_config_path": 399, "app": 399, "pre_hook_to_print_args_and_kwarg": 399, "post_hook_to_print_output": 399, "query_registered_oper": 399, "begin_graph_captur": 399, "runmod": 399, "no_dispatch": 399, "captured_graph": 399, "end_graph_captur": 399, "pretty_print": 399}, "objects": {"tt_lib.fallback_ops": [[378, 0, 1, "", "AdaptiveAvgPool2d"], [378, 0, 1, "", "BatchNorm2d"], [378, 0, 1, "", "Conv2d"], [378, 0, 1, "", "GroupNorm"], [378, 0, 1, "", "LayerNorm"], [378, 0, 1, "", "MaxPool2d"], [378, 0, 1, "", "binary_bitwise_and"], [378, 0, 1, "", "binary_bitwise_left_shift"], [378, 0, 1, "", "binary_bitwise_or"], [378, 0, 1, "", "binary_bitwise_right_shift"], [378, 0, 1, "", "binary_bitwise_xor"], [378, 0, 1, "", "binary_fmod"], [378, 0, 1, "", "bitwise_not"], [378, 0, 1, "", "ceil"], [378, 1, 1, "", "chunk"], [378, 1, 1, "", "concat"], [378, 1, 1, "", "conv2d"], [378, 0, 1, "", "floor"], [378, 1, 1, "", "full"], [378, 1, 1, "", "group_norm"], [378, 1, 1, "", "interpolate"], [378, 1, 1, "", "layer_norm"], [378, 1, 1, "", "pad"], [378, 1, 1, "", "repeat"], [378, 1, 1, "", "repeat_interleave"], [378, 1, 1, "", "reshape"], [378, 1, 1, "", "silu"], [378, 1, 1, "", "softmax"], [378, 1, 1, "", "tensor_slice"], [378, 0, 1, "", "torch_argmax"], [378, 0, 1, "", "torch_argmin"], [378, 0, 1, "", "trunc"], [378, 0, 1, "", "unary_bitwise_and"], [378, 0, 1, "", "unary_bitwise_left_shift"], [378, 0, 1, "", "unary_bitwise_or"], [378, 0, 1, "", "unary_bitwise_right_shift"], [378, 0, 1, "", "unary_bitwise_xor"], [378, 0, 1, "", "unary_fmod"]], "tt_lib.fused_ops.add_and_norm": [[378, 1, 1, "", "AddAndNorm"]], "tt_lib.fused_ops.layernorm": [[378, 1, 1, "", "Layernorm"]], "tt_lib.fused_ops.linear": [[378, 1, 1, "", "Linear"]], "ttnn": [[378, 0, 1, "", "BcastOpDim"], [378, 0, 1, "", "BcastOpMath"], [8, 0, 1, "", "Conv2dConfig"], [9, 0, 1, "", "Conv2dSliceConfig"], [10, 1, 1, "", "GetDefaultDevice"], [377, 0, 1, "", "MemoryConfig"], [11, 1, 1, "", "SetDefaultDevice"], [383, 0, 1, "", "Shape"], [377, 0, 1, "", "Tensor"], [12, 5, 1, "", "abs"], [13, 5, 1, "", "abs_bw"], [14, 5, 1, "", "acos"], [15, 5, 1, "", "acos_bw"], [16, 5, 1, "", "acosh"], [17, 5, 1, "", "acosh_bw"], [18, 5, 1, "", "add"], [19, 5, 1, "", "add_bw"], [20, 5, 1, "", "addalpha"], [21, 5, 1, "", "addalpha_bw"], [22, 5, 1, "", "addcdiv"], [23, 5, 1, "", "addcdiv_bw"], [24, 5, 1, "", "addcmul"], [25, 5, 1, "", "addcmul_bw"], [26, 5, 1, "", "all_gather"], [27, 5, 1, "", "angle"], [28, 5, 1, "", "angle_bw"], [29, 5, 1, "", "arange"], [30, 5, 1, "", "argmax"], [31, 5, 1, "", "as_tensor"], [32, 5, 1, "", "asin"], [33, 5, 1, "", "asin_bw"], [34, 5, 1, "", "asinh"], [35, 5, 1, "", "asinh_bw"], [36, 5, 1, "", "assign_bw"], [37, 5, 1, "", "atan"], [38, 5, 1, "", "atan2"], [39, 5, 1, "", "atan2_bw"], [40, 5, 1, "", "atan_bw"], [41, 5, 1, "", "atanh"], [42, 5, 1, "", "atanh_bw"], [43, 5, 1, "", "batch_norm"], [44, 5, 1, "", "bias_gelu_bw"], [45, 5, 1, "", "bitwise_and"], [46, 5, 1, "", "bitwise_left_shift"], [47, 5, 1, "", "bitwise_not"], [48, 5, 1, "", "bitwise_or"], [49, 5, 1, "", "bitwise_right_shift"], [50, 5, 1, "", "bitwise_xor"], [51, 5, 1, "", "cbrt"], [52, 5, 1, "", "ceil"], [53, 5, 1, "", "ceil_bw"], [54, 5, 1, "", "celu"], [55, 5, 1, "", "celu_bw"], [56, 5, 1, "", "clamp"], [57, 5, 1, "", "clamp_bw"], [58, 5, 1, "", "clip"], [59, 5, 1, "", "clip_bw"], [60, 5, 1, "", "clone"], [61, 1, 1, "", "close_device"], [62, 5, 1, "", "concat"], [63, 5, 1, "", "concat_bw"], [64, 5, 1, "", "conj"], [65, 5, 1, "", "conj_bw"], [66, 5, 1, "", "conv1d"], [67, 5, 1, "", "conv2d"], [68, 5, 1, "", "conv_transpose2d"], [69, 5, 1, "", "cos"], [70, 5, 1, "", "cos_bw"], [71, 5, 1, "", "cosh"], [72, 5, 1, "", "cosh_bw"], [73, 1, 1, "", "create_sharded_memory_config"], [74, 5, 1, "", "deallocate"], [75, 5, 1, "", "deg2rad"], [76, 5, 1, "", "deg2rad_bw"], [77, 5, 1, "", "digamma"], [78, 5, 1, "", "digamma_bw"], [79, 5, 1, "", "div"], [80, 5, 1, "", "div_bw"], [81, 5, 1, "", "div_no_nan"], [82, 5, 1, "", "div_no_nan_bw"], [83, 5, 1, "", "downsample"], [84, 5, 1, "", "dump_tensor"], [85, 5, 1, "", "elu"], [86, 5, 1, "", "elu_bw"], [87, 5, 1, "", "embedding"], [88, 5, 1, "", "embedding_bw"], [89, 5, 1, "", "empty"], [90, 5, 1, "", "empty_like"], [91, 5, 1, "", "eq"], [92, 5, 1, "", "eq_"], [93, 5, 1, "", "eqz"], [94, 5, 1, "", "erf"], [95, 5, 1, "", "erf_bw"], [96, 5, 1, "", "erfc"], [97, 5, 1, "", "erfc_bw"], [98, 5, 1, "", "erfinv"], [99, 5, 1, "", "erfinv_bw"], [100, 5, 1, "", "exp"], [101, 5, 1, "", "exp2"], [102, 5, 1, "", "exp2_bw"], [103, 5, 1, "", "exp_bw"], [112, 5, 1, "", "expm1"], [113, 5, 1, "", "expm1_bw"], [114, 5, 1, "", "fill"], [115, 5, 1, "", "fill_bw"], [116, 5, 1, "", "fill_ones_rm"], [117, 5, 1, "", "fill_rm"], [118, 5, 1, "", "fill_zero_bw"], [119, 5, 1, "", "floor"], [120, 5, 1, "", "floor_bw"], [121, 5, 1, "", "floor_div"], [122, 5, 1, "", "fmod"], [123, 5, 1, "", "fmod_bw"], [124, 1, 1, "", "format_input_tensor"], [125, 1, 1, "", "format_output_tensor"], [126, 5, 1, "", "frac"], [127, 5, 1, "", "frac_bw"], [128, 5, 1, "", "from_device"], [129, 5, 1, "", "from_torch"], [130, 5, 1, "", "full"], [131, 5, 1, "", "full_like"], [132, 5, 1, "", "gcd"], [133, 5, 1, "", "ge"], [134, 5, 1, "", "ge_"], [135, 5, 1, "", "geglu"], [136, 5, 1, "", "gelu"], [137, 5, 1, "", "gelu_bw"], [138, 5, 1, "", "gez"], [139, 5, 1, "", "global_avg_pool2d"], [140, 5, 1, "", "glu"], [141, 5, 1, "", "group_norm"], [142, 5, 1, "", "gt"], [143, 5, 1, "", "gt_"], [144, 5, 1, "", "gtz"], [145, 5, 1, "", "hardshrink"], [146, 5, 1, "", "hardshrink_bw"], [147, 5, 1, "", "hardsigmoid"], [148, 5, 1, "", "hardsigmoid_bw"], [149, 5, 1, "", "hardswish"], [150, 5, 1, "", "hardswish_bw"], [151, 5, 1, "", "hardtanh"], [152, 5, 1, "", "hardtanh_bw"], [153, 5, 1, "", "heaviside"], [154, 5, 1, "", "hypot"], [155, 5, 1, "", "hypot_bw"], [156, 5, 1, "", "i0"], [157, 5, 1, "", "i0_bw"], [158, 5, 1, "", "identity"], [159, 5, 1, "", "imag"], [160, 5, 1, "", "imag_bw"], [161, 5, 1, "", "indexed_fill"], [162, 5, 1, "", "is_imag"], [163, 5, 1, "", "is_real"], [164, 5, 1, "", "isclose"], [165, 5, 1, "", "isfinite"], [166, 5, 1, "", "isinf"], [167, 5, 1, "", "isnan"], [168, 5, 1, "", "isneginf"], [169, 5, 1, "", "isposinf"], [172, 5, 1, "", "l1_loss"], [173, 5, 1, "", "layer_norm"], [174, 5, 1, "", "lcm"], [175, 5, 1, "", "ldexp"], [176, 5, 1, "", "ldexp_bw"], [177, 5, 1, "", "le"], [178, 5, 1, "", "le_"], [179, 5, 1, "", "leaky_relu"], [180, 5, 1, "", "leaky_relu_bw"], [181, 5, 1, "", "lerp"], [182, 5, 1, "", "lerp_bw"], [183, 5, 1, "", "lez"], [184, 5, 1, "", "lgamma"], [185, 5, 1, "", "lgamma_bw"], [186, 5, 1, "", "linear"], [187, 5, 1, "", "load_tensor"], [188, 5, 1, "", "log"], [189, 5, 1, "", "log10"], [190, 5, 1, "", "log10_bw"], [191, 5, 1, "", "log1p"], [192, 5, 1, "", "log1p_bw"], [193, 5, 1, "", "log2"], [194, 5, 1, "", "log2_bw"], [195, 5, 1, "", "log_bw"], [196, 5, 1, "", "log_sigmoid"], [197, 5, 1, "", "log_sigmoid_bw"], [198, 5, 1, "", "logaddexp"], [199, 5, 1, "", "logaddexp2"], [200, 5, 1, "", "logaddexp2_bw"], [201, 5, 1, "", "logaddexp_bw"], [202, 5, 1, "", "logical_and"], [203, 5, 1, "", "logical_and_"], [204, 5, 1, "", "logical_not"], [205, 5, 1, "", "logical_not_"], [206, 5, 1, "", "logical_or"], [207, 5, 1, "", "logical_or_"], [208, 5, 1, "", "logical_xor"], [209, 5, 1, "", "logical_xor_"], [210, 5, 1, "", "logit"], [211, 5, 1, "", "logit_bw"], [212, 5, 1, "", "logiteps_bw"], [213, 5, 1, "", "lt"], [214, 5, 1, "", "lt_"], [215, 5, 1, "", "ltz"], [216, 5, 1, "", "mac"], [217, 1, 1, "", "manage_device"], [218, 5, 1, "", "matmul"], [219, 5, 1, "", "max"], [220, 5, 1, "", "max_bw"], [221, 5, 1, "", "max_pool2d"], [222, 5, 1, "", "maximum"], [223, 5, 1, "", "mean"], [224, 5, 1, "", "min"], [225, 5, 1, "", "min_bw"], [226, 5, 1, "", "minimum"], [227, 5, 1, "", "mish"], [230, 5, 1, "", "moreh_sum"], [231, 5, 1, "", "mse_loss"], [232, 5, 1, "", "mul_bw"], [233, 5, 1, "", "multigammaln"], [234, 5, 1, "", "multigammaln_bw"], [235, 5, 1, "", "multiply"], [236, 5, 1, "", "ne"], [237, 5, 1, "", "ne_"], [238, 5, 1, "", "neg"], [239, 5, 1, "", "neg_bw"], [240, 5, 1, "", "nextafter"], [241, 5, 1, "", "nez"], [242, 5, 1, "", "nonzero"], [243, 5, 1, "", "normalize_global"], [244, 5, 1, "", "normalize_hw"], [245, 5, 1, "", "ones"], [246, 5, 1, "", "ones_like"], [247, 1, 1, "", "open_device"], [248, 5, 1, "", "outer"], [249, 5, 1, "", "pad"], [250, 1, 1, "", "pad_to_tile_shape"], [251, 5, 1, "", "permute"], [252, 5, 1, "", "polar"], [253, 5, 1, "", "polar_bw"], [254, 5, 1, "", "polygamma"], [255, 5, 1, "", "polygamma_bw"], [256, 5, 1, "", "polyval"], [257, 5, 1, "", "pow"], [258, 5, 1, "", "pow_bw"], [259, 5, 1, "", "prelu"], [260, 1, 1, "", "prepare_conv_bias"], [261, 1, 1, "", "prepare_conv_weights"], [262, 5, 1, "", "prod"], [263, 5, 1, "", "prod_bw"], [264, 5, 1, "", "rad2deg"], [265, 5, 1, "", "rad2deg_bw"], [266, 5, 1, "", "rdiv"], [267, 5, 1, "", "rdiv_bw"], [268, 5, 1, "", "real"], [269, 5, 1, "", "real_bw"], [270, 5, 1, "", "reallocate"], [271, 5, 1, "", "reciprocal"], [272, 5, 1, "", "reciprocal_bw"], [273, 5, 1, "", "reduce_scatter"], [274, 1, 1, "", "register_post_operation_hook"], [275, 1, 1, "", "register_pre_operation_hook"], [276, 5, 1, "", "reglu"], [277, 5, 1, "", "relu"], [278, 5, 1, "", "relu6"], [279, 5, 1, "", "relu6_bw"], [280, 5, 1, "", "relu_bw"], [281, 5, 1, "", "relu_max"], [282, 5, 1, "", "relu_min"], [283, 5, 1, "", "remainder"], [284, 5, 1, "", "remainder_bw"], [285, 5, 1, "", "repeat"], [286, 5, 1, "", "repeat_bw"], [287, 5, 1, "", "repeat_interleave"], [288, 5, 1, "", "reshape"], [289, 5, 1, "", "rms_norm"], [290, 5, 1, "", "round"], [291, 5, 1, "", "round_bw"], [292, 5, 1, "", "rpow"], [293, 5, 1, "", "rpow_bw"], [294, 5, 1, "", "rsqrt"], [295, 5, 1, "", "rsqrt_bw"], [296, 5, 1, "", "rsub"], [297, 5, 1, "", "rsub_bw"], [298, 5, 1, "", "scatter"], [299, 5, 1, "", "selu"], [300, 5, 1, "", "selu_bw"], [301, 1, 1, "", "set_printoptions"], [302, 5, 1, "", "sigmoid"], [303, 5, 1, "", "sigmoid_accurate"], [304, 5, 1, "", "sigmoid_bw"], [305, 5, 1, "", "sign"], [306, 5, 1, "", "sign_bw"], [307, 5, 1, "", "signbit"], [308, 5, 1, "", "silu"], [309, 5, 1, "", "silu_bw"], [310, 5, 1, "", "sin"], [311, 5, 1, "", "sin_bw"], [312, 5, 1, "", "sinh"], [313, 5, 1, "", "sinh_bw"], [314, 5, 1, "", "slice"], [315, 5, 1, "", "softmax"], [316, 5, 1, "", "softplus"], [317, 5, 1, "", "softplus_bw"], [318, 5, 1, "", "softshrink"], [319, 5, 1, "", "softshrink_bw"], [320, 5, 1, "", "softsign"], [321, 5, 1, "", "softsign_bw"], [322, 5, 1, "", "sqrt"], [323, 5, 1, "", "sqrt_bw"], [324, 5, 1, "", "square"], [325, 5, 1, "", "square_bw"], [326, 5, 1, "", "squared_difference"], [327, 5, 1, "", "squared_difference_bw"], [328, 5, 1, "", "std"], [329, 5, 1, "", "sub_bw"], [330, 5, 1, "", "subalpha"], [331, 5, 1, "", "subalpha_bw"], [332, 5, 1, "", "subtract"], [333, 5, 1, "", "sum"], [334, 5, 1, "", "swiglu"], [335, 5, 1, "", "swish"], [336, 1, 1, "", "synchronize_device"], [337, 5, 1, "", "tan"], [338, 5, 1, "", "tan_bw"], [339, 5, 1, "", "tanh"], [340, 5, 1, "", "tanh_bw"], [341, 5, 1, "", "tanhshrink"], [342, 5, 1, "", "tanhshrink_bw"], [343, 5, 1, "", "threshold"], [344, 5, 1, "", "threshold_bw"], [345, 5, 1, "", "tilize"], [346, 5, 1, "", "tilize_with_val_padding"], [347, 5, 1, "", "to_device"], [348, 5, 1, "", "to_layout"], [349, 5, 1, "", "to_memory_config"], [350, 5, 1, "", "to_torch"], [351, 5, 1, "", "topk"], [358, 5, 1, "", "tril"], [359, 5, 1, "", "triu"], [360, 5, 1, "", "trunc"], [361, 5, 1, "", "trunc_bw"], [362, 5, 1, "", "unary_chain"], [363, 5, 1, "", "untilize"], [364, 5, 1, "", "untilize_with_unpadding"], [365, 5, 1, "", "upsample"], [366, 5, 1, "", "var"], [367, 5, 1, "", "where"], [368, 5, 1, "", "where_bw"], [369, 5, 1, "", "xlogy"], [370, 5, 1, "", "xlogy_bw"], [371, 5, 1, "", "zeros"], [372, 5, 1, "", "zeros_like"]], "ttnn.Conv2dConfig": [[8, 2, 1, "", "act_block_h_override"], [8, 2, 1, "", "act_block_w_div"], [8, 2, 1, "", "activation"], [8, 2, 1, "", "always_preprocess_weights"], [8, 2, 1, "", "core_grid"], [8, 2, 1, "", "deallocate_activation"], [8, 2, 1, "", "dtype"], [8, 2, 1, "", "enable_act_double_buffer"], [8, 2, 1, "", "enable_split_reader"], [8, 2, 1, "", "enable_subblock_padding"], [8, 2, 1, "", "enable_weights_double_buffer"], [8, 2, 1, "", "in_place"], [8, 2, 1, "", "input_channels_alignment"], [8, 2, 1, "", "output_layout"], [8, 2, 1, "", "override_sharding_config"], [8, 2, 1, "", "preprocess_weights_on_device"], [8, 2, 1, "", "reallocate_halo_output"], [8, 2, 1, "", "reshard_if_not_optimal"], [8, 2, 1, "", "shard_layout"], [8, 2, 1, "", "transpose_shards"], [8, 2, 1, "", "weights_dtype"]], "ttnn.Conv2dSliceConfig": [[9, 0, 1, "", "SliceTypeEnum"], [9, 2, 1, "", "num_slices"], [9, 2, 1, "", "slice_type"]], "ttnn.Conv2dSliceConfig.SliceTypeEnum": [[9, 3, 1, "", "SliceHeight"], [9, 3, 1, "", "SliceWidth"], [9, 2, 1, "", "name"], [9, 2, 1, "", "value"]], "ttnn.MemoryConfig": [[377, 4, 1, "", "__init__"]], "ttnn.Shape": [[383, 2, 1, "", "rank"], [383, 4, 1, "", "to_rank"]], "ttnn.Tensor": [[377, 4, 1, "", "__init__"], [377, 4, 1, "", "buffer"], [378, 1, 1, "", "cpu"], [377, 4, 1, "", "device"], [377, 4, 1, "", "get_dtype"], [377, 4, 1, "", "get_layout"], [377, 4, 1, "", "pad"], [377, 4, 1, "", "pad_to_tile"], [377, 4, 1, "", "storage_type"], [377, 4, 1, "", "to"], [377, 4, 1, "", "unpad"], [377, 4, 1, "", "unpad_from_tile"]], "ttnn.experimental": [[104, 5, 1, "", "all_reduce"], [105, 5, 1, "", "conv3d"], [106, 5, 1, "", "cumprod"], [107, 5, 1, "", "cumsum"], [108, 5, 1, "", "dropout"], [109, 5, 1, "", "gelu_bw"], [110, 5, 1, "", "rotary_embedding"], [111, 5, 1, "", "sort"]], "ttnn.kv_cache": [[170, 5, 1, "", "fill_cache_for_user_"], [171, 5, 1, "", "update_cache_for_token_"]], "ttnn.model_preprocessing": [[228, 1, 1, "", "preprocess_model"], [229, 1, 1, "", "preprocess_model_parameters"]], "ttnn.operations.moreh": [[378, 1, 1, "", "group_norm"], [378, 1, 1, "", "group_norm_backward"], [378, 1, 1, "", "logsoftmax"], [378, 1, 1, "", "logsoftmax_backward"], [378, 1, 1, "", "mean"], [378, 1, 1, "", "mean_backward"], [378, 1, 1, "", "norm"], [378, 1, 1, "", "norm_backward"], [378, 1, 1, "", "softmax"], [378, 1, 1, "", "softmax_backward"], [378, 1, 1, "", "softmin"], [378, 1, 1, "", "softmin_backward"]], "ttnn.transformer": [[352, 5, 1, "", "attention_softmax"], [353, 5, 1, "", "attention_softmax_"], [354, 5, 1, "", "concatenate_heads"], [355, 5, 1, "", "scaled_dot_product_attention"], [356, 5, 1, "", "scaled_dot_product_attention_decode"], [357, 5, 1, "", "split_query_key_value_and_split_heads"]]}, "objtypes": {"0": "py:class", "1": "py:function", "2": "py:property", "3": "py:attribute", "4": "py:method", "5": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "function", "Python function"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"]}, "titleterms": {"welcom": 0, "tt": [0, 5, 6, 373, 375, 377, 378, 379, 380, 382, 399], "nn": [0, 5, 6, 373, 379, 380, 382, 399], "document": 0, "ttnn": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 385, 388, 391, 392, 394, 395, 396, 397], "model": [0, 4, 7, 373, 379, 380, 394, 395, 398], "resourc": 0, "indic": 0, "tabl": 0, "contribut": [1, 380], "develop": 1, "support": [2, 399], "report": [2, 7, 382], "bug": 2, "featur": 2, "propos": 2, "request": 2, "troubleshoot": 2, "debug": [2, 399], "tip": 2, "commun": 2, "perform": [3, 393], "prerequisit": [3, 4, 380], "run": [3, 4, 375, 394, 397, 399], "perf": [3, 382], "file": 3, "all": [3, 380, 399], "get": [4, 379, 397], "start": [4, 379], "an": [4, 399], "exampl": [4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 358, 359, 360, 361, 362, 366, 367, 368, 369, 370, 371, 372, 373, 375, 377, 380, 399], "next": 4, "step": [4, 6, 373, 380], "what": [5, 6], "i": [5, 6], "ad": 6, "new": [6, 378, 381], "oper": [6, 7, 373, 378, 382, 386, 390, 392, 395, 396, 399], "faq": 6, "ar": [6, 380], "need": 6, "add": [6, 18, 390, 392], "c": [6, 399], "python": [6, 399], "devic": [6, 7, 375, 378, 380, 392, 393, 394, 399], "implement": [6, 394, 397], "1": [6, 373, 379, 380, 399], "2": [6, 373, 378, 379, 380, 398, 399], "bind": 6, "option": [6, 378, 380], "golden": 6, "function": [6, 381, 395, 399], "api": [7, 377, 378, 383], "memori": [7, 383], "config": [7, 383, 393], "core": 7, "tensor": [7, 375, 377, 378, 383, 390, 392, 393, 399], "creation": 7, "matrix": [7, 393], "multipl": [7, 383, 393], "pointwis": 7, "unari": 7, "binari": 7, "ternari": 7, "loss": 7, "reduct": 7, "data": [7, 383, 392], "movement": 7, "normal": 7, "moreh": 7, "transform": [7, 352, 353, 354, 355, 356, 357], "ccl": 7, "embed": [7, 87], "convolut": 7, "pool": 7, "vision": 7, "kv": 7, "cach": [7, 378, 393, 394, 399], "convers": 7, "hook": [7, 399], "conv2dconfig": 8, "conv2dsliceconfig": 9, "getdefaultdevic": 10, "setdefaultdevic": 11, "ab": 12, "abs_bw": 13, "aco": 14, "acos_bw": 15, "acosh": 16, "acosh_bw": 17, "add_bw": 19, "addalpha": 20, "addalpha_bw": 21, "addcdiv": 22, "addcdiv_bw": 23, "addcmul": 24, "addcmul_bw": 25, "all_gath": 26, "angl": 27, "angle_bw": 28, "arang": 29, "argmax": 30, "as_tensor": 31, "asin": 32, "asin_bw": 33, "asinh": 34, "asinh_bw": 35, "assign_bw": 36, "atan": 37, "atan2": 38, "atan2_bw": 39, "atan_bw": 40, "atanh": 41, "atanh_bw": 42, "batch_norm": 43, "bias_gelu_bw": 44, "bitwise_and": 45, "bitwise_left_shift": 46, "bitwise_not": 47, "bitwise_or": 48, "bitwise_right_shift": 49, "bitwise_xor": 50, "cbrt": 51, "ceil": 52, "ceil_bw": 53, "celu": 54, "celu_bw": 55, "clamp": 56, "clamp_bw": 57, "clip": 58, "clip_bw": 59, "clone": [60, 380, 398], "close_devic": 61, "concat": 62, "concat_bw": 63, "conj": 64, "conj_bw": 65, "conv1d": 66, "conv2d": 67, "conv_transpose2d": 68, "co": 69, "cos_bw": 70, "cosh": 71, "cosh_bw": 72, "create_sharded_memory_config": 73, "dealloc": 74, "deg2rad": 75, "deg2rad_bw": 76, "digamma": 77, "digamma_bw": 78, "div": 79, "div_bw": 80, "div_no_nan": 81, "div_no_nan_bw": 82, "downsampl": 83, "dump_tensor": 84, "elu": 85, "elu_bw": 86, "embedding_bw": 88, "empti": 89, "empty_lik": 90, "eq": 91, "eq_": 92, "eqz": 93, "erf": 94, "erf_bw": 95, "erfc": 96, "erfc_bw": 97, "erfinv": 98, "erfinv_bw": 99, "exp": 100, "exp2": 101, "exp2_bw": 102, "exp_bw": 103, "experiment": [104, 105, 106, 107, 108, 109, 110, 111, 378], "all_reduc": 104, "conv3d": 105, "cumprod": 106, "cumsum": 107, "dropout": 108, "gelu_bw": [109, 137], "rotary_embed": 110, "sort": 111, "expm1": 112, "expm1_bw": 113, "fill": 114, "fill_bw": 115, "fill_ones_rm": 116, "fill_rm": 117, "fill_zero_bw": 118, "floor": 119, "floor_bw": 120, "floor_div": 121, "fmod": 122, "fmod_bw": 123, "format_input_tensor": 124, "format_output_tensor": 125, "frac": 126, "frac_bw": 127, "from_devic": 128, "from_torch": 129, "full": 130, "full_lik": 131, "gcd": 132, "ge": 133, "ge_": 134, "geglu": 135, "gelu": 136, "gez": 138, "global_avg_pool2d": 139, "glu": 140, "group_norm": 141, "gt": 142, "gt_": 143, "gtz": 144, "hardshrink": 145, "hardshrink_bw": 146, "hardsigmoid": 147, "hardsigmoid_bw": 148, "hardswish": 149, "hardswish_bw": 150, "hardtanh": 151, "hardtanh_bw": 152, "heavisid": 153, "hypot": 154, "hypot_bw": 155, "i0": 156, "i0_bw": 157, "ident": 158, "imag": [159, 380], "imag_bw": 160, "indexed_fil": 161, "is_imag": 162, "is_real": 163, "isclos": 164, "isfinit": 165, "isinf": 166, "isnan": 167, "isneginf": 168, "isposinf": 169, "kv_cach": [170, 171], "fill_cache_for_user_": 170, "update_cache_for_token_": 171, "l1_loss": 172, "layer_norm": 173, "lcm": 174, "ldexp": 175, "ldexp_bw": 176, "le": 177, "le_": 178, "leaky_relu": 179, "leaky_relu_bw": 180, "lerp": 181, "lerp_bw": 182, "lez": 183, "lgamma": 184, "lgamma_bw": 185, "linear": 186, "load_tensor": 187, "log": [188, 378, 399], "log10": 189, "log10_bw": 190, "log1p": 191, "log1p_bw": 192, "log2": 193, "log2_bw": 194, "log_bw": 195, "log_sigmoid": 196, "log_sigmoid_bw": 197, "logaddexp": 198, "logaddexp2": 199, "logaddexp2_bw": 200, "logaddexp_bw": 201, "logical_and": 202, "logical_and_": 203, "logical_not": 204, "logical_not_": 205, "logical_or": 206, "logical_or_": 207, "logical_xor": 208, "logical_xor_": 209, "logit": 210, "logit_bw": 211, "logiteps_bw": 212, "lt": 213, "lt_": 214, "ltz": 215, "mac": 216, "manage_devic": 217, "matmul": [218, 386], "max": 219, "max_bw": 220, "max_pool2d": 221, "maximum": 222, "mean": 223, "min": 224, "min_bw": 225, "minimum": 226, "mish": 227, "model_preprocess": [228, 229], "preprocess_model": 228, "preprocess_model_paramet": 229, "moreh_sum": 230, "mse_loss": 231, "mul_bw": 232, "multigammaln": 233, "multigammaln_bw": 234, "multipli": [235, 393], "ne": 236, "ne_": 237, "neg": 238, "neg_bw": 239, "nextaft": 240, "nez": 241, "nonzero": 242, "normalize_glob": 243, "normalize_hw": 244, "ones": 245, "ones_lik": 246, "open_devic": 247, "outer": 248, "pad": 249, "pad_to_tile_shap": 250, "permut": 251, "polar": 252, "polar_bw": 253, "polygamma": 254, "polygamma_bw": 255, "polyv": 256, "pow": 257, "pow_bw": 258, "prelu": 259, "prepare_conv_bia": 260, "prepare_conv_weight": 261, "prod": 262, "prod_bw": 263, "rad2deg": 264, "rad2deg_bw": 265, "rdiv": 266, "rdiv_bw": 267, "real": 268, "real_bw": 269, "realloc": 270, "reciproc": 271, "reciprocal_bw": 272, "reduce_scatt": 273, "register_post_operation_hook": 274, "register_pre_operation_hook": 275, "reglu": 276, "relu": 277, "relu6": 278, "relu6_bw": 279, "relu_bw": 280, "relu_max": 281, "relu_min": 282, "remaind": 283, "remainder_bw": 284, "repeat": 285, "repeat_bw": 286, "repeat_interleav": 287, "reshap": 288, "rms_norm": 289, "round": 290, "round_bw": 291, "rpow": 292, "rpow_bw": 293, "rsqrt": 294, "rsqrt_bw": 295, "rsub": 296, "rsub_bw": 297, "scatter": 298, "selu": 299, "selu_bw": 300, "set_printopt": 301, "sigmoid": 302, "sigmoid_accur": 303, "sigmoid_bw": 304, "sign": 305, "sign_bw": 306, "signbit": 307, "silu": 308, "silu_bw": 309, "sin": 310, "sin_bw": 311, "sinh": 312, "sinh_bw": 313, "slice": [314, 399], "softmax": 315, "softplu": 316, "softplus_bw": 317, "softshrink": 318, "softshrink_bw": 319, "softsign": 320, "softsign_bw": 321, "sqrt": 322, "sqrt_bw": 323, "squar": 324, "square_bw": 325, "squared_differ": 326, "squared_difference_bw": 327, "std": 328, "sub_bw": 329, "subalpha": 330, "subalpha_bw": 331, "subtract": 332, "sum": 333, "swiglu": 334, "swish": 335, "synchronize_devic": 336, "tan": 337, "tan_bw": 338, "tanh": 339, "tanh_bw": 340, "tanhshrink": 341, "tanhshrink_bw": 342, "threshold": 343, "threshold_bw": 344, "tiliz": 345, "tilize_with_val_pad": 346, "to_devic": 347, "to_layout": 348, "to_memory_config": 349, "to_torch": 350, "topk": 351, "attention_softmax": 352, "attention_softmax_": 353, "concatenate_head": 354, "scaled_dot_product_attent": 355, "scaled_dot_product_attention_decod": 356, "split_query_key_value_and_split_head": 357, "tril": 358, "triu": 359, "trunc": 360, "trunc_bw": 361, "unary_chain": 362, "until": 363, "untilize_with_unpad": 364, "upsampl": 365, "var": 366, "where": [367, 379], "where_bw": 368, "xlogi": 369, "xlogy_bw": 370, "zero": 371, "zeros_lik": 372, "convert": [373, 377, 392, 394, 399], "pytorch": [373, 375, 377, 398], "rewrit": 373, "switch": 373, "3": [373, 379, 380, 399], "optim": [373, 379, 394], "more": [373, 393], "build": [374, 379, 380, 398], "uplift": 374, "demo": [374, 379], "lib": [375, 378], "us": [375, 392, 393, 394, 395, 399], "one": 375, "op": 375, "from": [375, 378, 379, 380, 397, 398, 399], "acceler": 375, "odd": 375, "size": 375, "last": 375, "dim": 375, "depend": [376, 380], "overview": [377, 378], "storag": [377, 383, 392], "memoryconfig": 377, "between": 377, "infrastructur": 378, "member": 378, "input": 378, "output": [378, 392, 393, 394], "profil": [378, 382, 388, 396], "fast": 378, "dispatch": 378, "program": [378, 380, 393, 394, 399], "through": 378, "tt_lib": [378, 399], "primari": 378, "enum": 378, "fallback": 378, "fuse": 378, "mini": 378, "graph": [378, 385, 397, 398, 399], "librari": [378, 398], "complex": 378, "type": [378, 383, 392], "instal": [379, 380], "explor": 379, "our": [379, 380], "tutori": [379, 384], "multi": [379, 380, 387, 394], "head": [379, 387, 394], "attent": [379, 387, 394], "simpl": 379, "4": [379, 399], "To": [379, 380], "go": 379, "here": 379, "set": 380, "up": 380, "hardwar": 380, "driver": 380, "firmwar": 380, "system": 380, "level": 380, "kmd": 380, "updat": 380, "flash": 380, "manag": 380, "interfac": 380, "smi": 380, "card": 380, "configur": [380, 393, 394], "topologi": 380, "metalium": 380, "There": 380, "three": 380, "sourc": 380, "repositori": 380, "invok": 380, "script": 380, "docker": 380, "releas": 380, "wheel": 380, "download": [380, 398], "latest": 380, "For": 380, "user": 380, "onli": 380, "environ": 380, "you": 380, "verifi": 380, "your": 380, "try": 380, "execut": 380, "interest": 380, "onboard": 381, "header": 382, "profile_thi": 382, "descript": 382, "shape": 383, "layout": [383, 392, 393], "requir": 383, "width": 383, "limit": 383, "bfloat8_b": 383, "shard": 383, "torch": [385, 392, 393, 394, 395, 397, 399], "dit_xl_2": 385, "With": 385, "resnet": [389, 397], "basic": [389, 399], "block": [389, 397], "tracer": 391, "creat": [392, 397], "host": 392, "borrow": 392, "v": 392, "own": 392, "open": 392, "initi": [392, 393, 394], "b": [392, 393], "random": [392, 393], "valu": [392, 393], "inspect": [392, 393], "attribut": 392, "close": [392, 393, 394], "enabl": [393, 394, 399], "result": 393, "write": 394, "activ": 394, "weight": 394, "first": 394, "iter": 394, "subsequ": 394, "version": [394, 397], "pre": [394, 398, 399], "process": 394, "paramet": [394, 397], "check": 394, "match": 394, "origin": 394, "trace": [395, 397, 399], "modul": [395, 397], "written": 395, "torchvis": 397, "preprocess": 397, "displai": [397, 398], "pass": 397, "constructor": 397, "base": 398, "http": 398, "github": 398, "com": 398, "facebookresearch": 398, "dit": 398, "git": 398, "xl": 398, "sampl": 398, "train": 398, "__getitem__": 399, "5": 399, "intermedi": 399, "6": 399, "7": 399, "8": 399, "9": 399, "10": 399, "chang": 399, "string": 399, "represent": 399, "11": 399, "visual": 399, "web": 399, "browser": 399, "12": 399, "regist": 399, "post": 399, "13": 399, "queri": 399, "14": 399, "fall": 399, "back": 399, "15": 399, "captur": 399, "buffer": 399, "alloc": 399, "etc": 399}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Welcome to TT-NN documentation!": [[0, "welcome-to-tt-nn-documentation"]], "TTNN": [[0, null]], "Models": [[0, null]], "Resources": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Contributing as a developer": [[1, "contributing-as-a-developer"]], "Support": [[2, "support"]], "Reporting bugs, feature proposals, or support requests": [[2, "reporting-bugs-feature-proposals-or-support-requests"]], "Troubleshooting and debugging tips": [[2, "troubleshooting-and-debugging-tips"]], "Community": [[2, "community"]], "Performance": [[3, "performance"]], "Prerequisites": [[3, "prerequisites"], [4, "prerequisites"]], "Running a perf file": [[3, "running-a-perf-file"]], "Running all the perf files": [[3, "running-all-the-perf-files"]], "Getting Started": [[4, "getting-started"], [379, "getting-started"]], "Running an example model": [[4, "running-an-example-model"]], "Next steps": [[4, "next-steps"]], "What is TT-NN?": [[5, "what-is-tt-nn"]], "Adding New TT-NN Operation": [[6, "adding-new-tt-nn-operation"]], "FAQ": [[6, "faq"]], "What is a TT-NN operation?": [[6, "what-is-a-tt-nn-operation"]], "What steps are needed to add TT-NN operation in C++?": [[6, "what-steps-are-needed-to-add-tt-nn-operation-in-c"]], "What steps are needed to add TT-NN operation in Python?": [[6, "what-steps-are-needed-to-add-tt-nn-operation-in-python"]], "Example of Adding a new Device Operation": [[6, "example-of-adding-a-new-device-operation"]], "C++ Implementation": [[6, "c-implementation"]], "Step 1: Implement device operation": [[6, "step-1-implement-device-operation"]], "Step 2: Implement the operation in C++": [[6, "step-2-implement-the-operation-in-c"]], "Python Implementation": [[6, "python-implementation"]], "Step 1: Add Python binding": [[6, "step-1-add-python-binding"]], "Step 2: (Optional) Add golden function for the operation in Python": [[6, "step-2-optional-add-golden-function-for-the-operation-in-python"]], "APIs": [[7, "apis"], [383, "apis"]], "Device": [[7, "device"]], "Memory Config": [[7, "memory-config"], [383, "memory-config"]], "Operations": [[7, "operations"]], "Core": [[7, "core"]], "Tensor Creation": [[7, "tensor-creation"]], "Matrix Multiplication": [[7, "matrix-multiplication"], [393, "Matrix-Multiplication"]], "Pointwise Unary": [[7, "pointwise-unary"]], "Pointwise Binary": [[7, "pointwise-binary"]], "Pointwise Ternary": [[7, "pointwise-ternary"]], "Losses": [[7, "losses"]], "Reduction": [[7, "reduction"]], "Data Movement": [[7, "data-movement"]], "Normalization": [[7, "normalization"]], "Moreh Operations": [[7, "moreh-operations"]], "Transformer": [[7, "transformer"]], "CCL": [[7, "ccl"]], "Embedding": [[7, "embedding"]], "Convolution": [[7, "convolution"]], "Pooling": [[7, "pooling"]], "Vision": [[7, "vision"]], "KV Cache": [[7, "kv-cache"]], "Model Conversion": [[7, "model-conversion"]], "Reports": [[7, "reports"]], "Operation Hooks": [[7, "operation-hooks"]], "ttnn.Conv2dConfig": [[8, "ttnn-conv2dconfig"]], "ttnn.Conv2dSliceConfig": [[9, "ttnn-conv2dsliceconfig"]], "ttnn.GetDefaultDevice": [[10, "ttnn-getdefaultdevice"]], "Example": [[10, null], [11, null], [12, null], [13, null], [14, null], [15, null], [16, null], [17, null], [18, null], [19, null], [20, null], [21, null], [22, null], [23, null], [24, null], [25, null], [26, null], [27, null], [28, null], [29, null], [32, null], [33, null], [34, null], [35, null], [36, null], [37, null], [38, null], [39, null], [40, null], [41, null], [42, null], [43, null], [44, null], [45, null], [46, null], [47, null], [48, null], [49, null], [50, null], [51, null], [52, null], [53, null], [54, null], [55, null], [56, null], [57, null], [58, null], [59, null], [61, null], [62, null], [63, null], [64, null], [65, null], [69, null], [70, null], [71, null], [72, null], [73, null], [74, null], [75, null], [76, null], [77, null], [78, null], [79, null], [80, null], [81, null], [82, null], [84, null], [85, null], [86, null], [87, null], [88, null], [89, null], [90, null], [91, null], [92, null], [93, null], [94, null], [95, null], [96, null], [97, null], [98, null], [99, null], [100, null], [101, null], [102, null], [103, null], [104, null], [106, null], [108, null], [109, null], [112, null], [113, null], [114, null], [115, null], [118, null], [119, null], [120, null], [121, null], [122, null], [123, null], [124, null], [125, null], [126, null], [127, null], [129, null], [130, null], [131, null], [132, null], [133, null], [134, null], [135, null], [136, null], [137, null], [138, null], [139, null], [140, null], [142, null], [143, null], [144, null], [145, null], [146, null], [147, null], [148, null], [149, null], [150, null], [151, null], [152, null], [153, null], [154, null], [155, null], [156, null], [157, null], [158, null], [159, null], [160, null], [161, null], [162, null], [163, null], [164, null], [165, null], [166, null], [167, null], [168, null], [169, null], [172, null], [174, null], [175, null], [176, null], [177, null], [178, null], [179, null], [180, null], [181, null], [182, null], [183, null], [184, null], [185, null], [186, null], [187, null], [188, null], [189, null], [190, null], [191, null], [192, null], [193, null], [194, null], [195, null], [196, null], [197, null], [198, null], [199, null], [200, null], [201, null], [202, null], [203, null], [204, null], [205, null], [206, null], [207, null], [208, null], [209, null], [210, null], [211, null], [212, null], [213, null], [214, null], [215, null], [216, null], [217, null], [218, null], [219, null], [220, null], [221, null], [222, null], [223, null], [224, null], [225, null], [226, null], [227, null], [231, null], [232, null], [233, null], [234, null], [235, null], [236, null], [237, null], [238, null], [239, null], [240, null], [241, null], [242, null], [243, null], [244, null], [245, null], [246, null], [247, null], [248, null], [249, null], [250, null], [252, null], [253, null], [254, null], [255, null], [256, null], [257, null], [258, null], [259, null], [263, null], [264, null], [265, null], [266, null], [267, null], [268, null], [269, null], [270, null], [271, null], [272, null], [273, null], [276, null], [277, null], [278, null], [279, null], [280, null], [281, null], [282, null], [283, null], [284, null], [285, null], [286, null], [288, null], [290, null], [291, null], [292, null], [293, null], [294, null], [295, null], [296, null], [297, null], [298, null], [299, null], [300, null], [302, null], [303, null], [304, null], [305, null], [306, null], [307, null], [308, null], [309, null], [310, null], [311, null], [312, null], [313, null], [314, null], [315, null], [316, null], [317, null], [318, null], [319, null], [320, null], [321, null], [322, null], [323, null], [324, null], [325, null], [326, null], [327, null], [328, null], [329, null], [330, null], [331, null], [332, null], [333, null], [334, null], [335, null], [337, null], [338, null], [339, null], [340, null], [341, null], [342, null], [343, null], [344, null], [348, null], [349, null], [350, null], [358, null], [359, null], [360, null], [361, null], [362, null], [366, null], [367, null], [368, null], [369, null], [370, null], [371, null], [372, null]], "ttnn.SetDefaultDevice": [[11, "ttnn-setdefaultdevice"]], "ttnn.abs": [[12, "ttnn-abs"]], "ttnn.abs_bw": [[13, "ttnn-abs-bw"]], "ttnn.acos": [[14, "ttnn-acos"]], "ttnn.acos_bw": [[15, "ttnn-acos-bw"]], "ttnn.acosh": [[16, "ttnn-acosh"]], "ttnn.acosh_bw": [[17, "ttnn-acosh-bw"]], "ttnn.add": [[18, "ttnn-add"]], "ttnn.add_bw": [[19, "ttnn-add-bw"]], "ttnn.addalpha": [[20, "ttnn-addalpha"]], "ttnn.addalpha_bw": [[21, "ttnn-addalpha-bw"]], "ttnn.addcdiv": [[22, "ttnn-addcdiv"]], "ttnn.addcdiv_bw": [[23, "ttnn-addcdiv-bw"]], "ttnn.addcmul": [[24, "ttnn-addcmul"]], "ttnn.addcmul_bw": [[25, "ttnn-addcmul-bw"]], "ttnn.all_gather": [[26, "ttnn-all-gather"]], "ttnn.angle": [[27, "ttnn-angle"]], "ttnn.angle_bw": [[28, "ttnn-angle-bw"]], "ttnn.arange": [[29, "ttnn-arange"]], "ttnn.argmax": [[30, "ttnn-argmax"]], "ttnn.as_tensor": [[31, "ttnn-as-tensor"]], "Examples": [[31, null], [301, null]], "ttnn.asin": [[32, "ttnn-asin"]], "ttnn.asin_bw": [[33, "ttnn-asin-bw"]], "ttnn.asinh": [[34, "ttnn-asinh"]], "ttnn.asinh_bw": [[35, "ttnn-asinh-bw"]], "ttnn.assign_bw": [[36, "ttnn-assign-bw"]], "ttnn.atan": [[37, "ttnn-atan"]], "ttnn.atan2": [[38, "ttnn-atan2"]], "ttnn.atan2_bw": [[39, "ttnn-atan2-bw"]], "ttnn.atan_bw": [[40, "ttnn-atan-bw"]], "ttnn.atanh": [[41, "ttnn-atanh"]], "ttnn.atanh_bw": [[42, "ttnn-atanh-bw"]], "ttnn.batch_norm": [[43, "ttnn-batch-norm"]], "ttnn.bias_gelu_bw": [[44, "ttnn-bias-gelu-bw"]], "ttnn.bitwise_and": [[45, "ttnn-bitwise-and"]], "ttnn.bitwise_left_shift": [[46, "ttnn-bitwise-left-shift"]], "ttnn.bitwise_not": [[47, "ttnn-bitwise-not"]], "ttnn.bitwise_or": [[48, "ttnn-bitwise-or"]], "ttnn.bitwise_right_shift": [[49, "ttnn-bitwise-right-shift"]], "ttnn.bitwise_xor": [[50, "ttnn-bitwise-xor"]], "ttnn.cbrt": [[51, "ttnn-cbrt"]], "ttnn.ceil": [[52, "ttnn-ceil"]], "ttnn.ceil_bw": [[53, "ttnn-ceil-bw"]], "ttnn.celu": [[54, "ttnn-celu"]], "ttnn.celu_bw": [[55, "ttnn-celu-bw"]], "ttnn.clamp": [[56, "ttnn-clamp"]], "ttnn.clamp_bw": [[57, "ttnn-clamp-bw"]], "ttnn.clip": [[58, "ttnn-clip"]], "ttnn.clip_bw": [[59, "ttnn-clip-bw"]], "ttnn.clone": [[60, "ttnn-clone"]], "ttnn.close_device": [[61, "ttnn-close-device"]], "ttnn.concat": [[62, "ttnn-concat"]], "ttnn.concat_bw": [[63, "ttnn-concat-bw"]], "ttnn.conj": [[64, "ttnn-conj"]], "ttnn.conj_bw": [[65, "ttnn-conj-bw"]], "ttnn.conv1d": [[66, "ttnn-conv1d"]], "ttnn.conv2d": [[67, "ttnn-conv2d"]], "ttnn.conv_transpose2d": [[68, "ttnn-conv-transpose2d"]], "ttnn.cos": [[69, "ttnn-cos"]], "ttnn.cos_bw": [[70, "ttnn-cos-bw"]], "ttnn.cosh": [[71, "ttnn-cosh"]], "ttnn.cosh_bw": [[72, "ttnn-cosh-bw"]], "ttnn.create_sharded_memory_config": [[73, "ttnn-create-sharded-memory-config"]], "ttnn.deallocate": [[74, "ttnn-deallocate"]], "ttnn.deg2rad": [[75, "ttnn-deg2rad"]], "ttnn.deg2rad_bw": [[76, "ttnn-deg2rad-bw"]], "ttnn.digamma": [[77, "ttnn-digamma"]], "ttnn.digamma_bw": [[78, "ttnn-digamma-bw"]], "ttnn.div": [[79, "ttnn-div"]], "ttnn.div_bw": [[80, "ttnn-div-bw"]], "ttnn.div_no_nan": [[81, "ttnn-div-no-nan"]], "ttnn.div_no_nan_bw": [[82, "ttnn-div-no-nan-bw"]], "ttnn.downsample": [[83, "ttnn-downsample"]], "ttnn.dump_tensor": [[84, "ttnn-dump-tensor"]], "ttnn.elu": [[85, "ttnn-elu"]], "ttnn.elu_bw": [[86, "ttnn-elu-bw"]], "ttnn.embedding": [[87, "ttnn-embedding"]], "ttnn.embedding_bw": [[88, "ttnn-embedding-bw"]], "ttnn.empty": [[89, "ttnn-empty"]], "ttnn.empty_like": [[90, "ttnn-empty-like"]], "ttnn.eq": [[91, "ttnn-eq"]], "ttnn.eq_": [[92, "ttnn-eq"]], "ttnn.eqz": [[93, "ttnn-eqz"]], "ttnn.erf": [[94, "ttnn-erf"]], "ttnn.erf_bw": [[95, "ttnn-erf-bw"]], "ttnn.erfc": [[96, "ttnn-erfc"]], "ttnn.erfc_bw": [[97, "ttnn-erfc-bw"]], "ttnn.erfinv": [[98, "ttnn-erfinv"]], "ttnn.erfinv_bw": [[99, "ttnn-erfinv-bw"]], "ttnn.exp": [[100, "ttnn-exp"]], "ttnn.exp2": [[101, "ttnn-exp2"]], "ttnn.exp2_bw": [[102, "ttnn-exp2-bw"]], "ttnn.exp_bw": [[103, "ttnn-exp-bw"]], "ttnn.experimental.all_reduce": [[104, "ttnn-experimental-all-reduce"]], "ttnn.experimental.conv3d": [[105, "ttnn-experimental-conv3d"]], "ttnn.experimental.cumprod": [[106, "ttnn-experimental-cumprod"]], "ttnn.experimental.cumsum": [[107, "ttnn-experimental-cumsum"]], "ttnn.experimental.dropout": [[108, "ttnn-experimental-dropout"]], "ttnn.experimental.gelu_bw": [[109, "ttnn-experimental-gelu-bw"]], "ttnn.experimental.rotary_embedding": [[110, "ttnn-experimental-rotary-embedding"]], "ttnn.experimental.sort": [[111, "ttnn-experimental-sort"]], "ttnn.expm1": [[112, "ttnn-expm1"]], "ttnn.expm1_bw": [[113, "ttnn-expm1-bw"]], "ttnn.fill": [[114, "ttnn-fill"]], "ttnn.fill_bw": [[115, "ttnn-fill-bw"]], "ttnn.fill_ones_rm": [[116, "ttnn-fill-ones-rm"]], "ttnn.fill_rm": [[117, "ttnn-fill-rm"]], "ttnn.fill_zero_bw": [[118, "ttnn-fill-zero-bw"]], "ttnn.floor": [[119, "ttnn-floor"]], "ttnn.floor_bw": [[120, "ttnn-floor-bw"]], "ttnn.floor_div": [[121, "ttnn-floor-div"]], "ttnn.fmod": [[122, "ttnn-fmod"]], "ttnn.fmod_bw": [[123, "ttnn-fmod-bw"]], "ttnn.format_input_tensor": [[124, "ttnn-format-input-tensor"]], "ttnn.format_output_tensor": [[125, "ttnn-format-output-tensor"]], "ttnn.frac": [[126, "ttnn-frac"]], "ttnn.frac_bw": [[127, "ttnn-frac-bw"]], "ttnn.from_device": [[128, "ttnn-from-device"]], "ttnn.from_torch": [[129, "ttnn-from-torch"]], "ttnn.full": [[130, "ttnn-full"]], "ttnn.full_like": [[131, "ttnn-full-like"]], "ttnn.gcd": [[132, "ttnn-gcd"]], "ttnn.ge": [[133, "ttnn-ge"]], "ttnn.ge_": [[134, "ttnn-ge"]], "ttnn.geglu": [[135, "ttnn-geglu"]], "ttnn.gelu": [[136, "ttnn-gelu"]], "ttnn.gelu_bw": [[137, "ttnn-gelu-bw"]], "ttnn.gez": [[138, "ttnn-gez"]], "ttnn.global_avg_pool2d": [[139, "ttnn-global-avg-pool2d"]], "ttnn.glu": [[140, "ttnn-glu"]], "ttnn.group_norm": [[141, "ttnn-group-norm"]], "ttnn.gt": [[142, "ttnn-gt"]], "ttnn.gt_": [[143, "ttnn-gt"]], "ttnn.gtz": [[144, "ttnn-gtz"]], "ttnn.hardshrink": [[145, "ttnn-hardshrink"]], "ttnn.hardshrink_bw": [[146, "ttnn-hardshrink-bw"]], "ttnn.hardsigmoid": [[147, "ttnn-hardsigmoid"]], "ttnn.hardsigmoid_bw": [[148, "ttnn-hardsigmoid-bw"]], "ttnn.hardswish": [[149, "ttnn-hardswish"]], "ttnn.hardswish_bw": [[150, "ttnn-hardswish-bw"]], "ttnn.hardtanh": [[151, "ttnn-hardtanh"]], "ttnn.hardtanh_bw": [[152, "ttnn-hardtanh-bw"]], "ttnn.heaviside": [[153, "ttnn-heaviside"]], "ttnn.hypot": [[154, "ttnn-hypot"]], "ttnn.hypot_bw": [[155, "ttnn-hypot-bw"]], "ttnn.i0": [[156, "ttnn-i0"]], "ttnn.i0_bw": [[157, "ttnn-i0-bw"]], "ttnn.identity": [[158, "ttnn-identity"]], "ttnn.imag": [[159, "ttnn-imag"]], "ttnn.imag_bw": [[160, "ttnn-imag-bw"]], "ttnn.indexed_fill": [[161, "ttnn-indexed-fill"]], "ttnn.is_imag": [[162, "ttnn-is-imag"]], "ttnn.is_real": [[163, "ttnn-is-real"]], "ttnn.isclose": [[164, "ttnn-isclose"]], "ttnn.isfinite": [[165, "ttnn-isfinite"]], "ttnn.isinf": [[166, "ttnn-isinf"]], "ttnn.isnan": [[167, "ttnn-isnan"]], "ttnn.isneginf": [[168, "ttnn-isneginf"]], "ttnn.isposinf": [[169, "ttnn-isposinf"]], "ttnn.kv_cache.fill_cache_for_user_": [[170, "ttnn-kv-cache-fill-cache-for-user"]], "ttnn.kv_cache.update_cache_for_token_": [[171, "ttnn-kv-cache-update-cache-for-token"]], "ttnn.l1_loss": [[172, "ttnn-l1-loss"]], "ttnn.layer_norm": [[173, "ttnn-layer-norm"]], "ttnn.lcm": [[174, "ttnn-lcm"]], "ttnn.ldexp": [[175, "ttnn-ldexp"]], "ttnn.ldexp_bw": [[176, "ttnn-ldexp-bw"]], "ttnn.le": [[177, "ttnn-le"]], "ttnn.le_": [[178, "ttnn-le"]], "ttnn.leaky_relu": [[179, "ttnn-leaky-relu"]], "ttnn.leaky_relu_bw": [[180, "ttnn-leaky-relu-bw"]], "ttnn.lerp": [[181, "ttnn-lerp"]], "ttnn.lerp_bw": [[182, "ttnn-lerp-bw"]], "ttnn.lez": [[183, "ttnn-lez"]], "ttnn.lgamma": [[184, "ttnn-lgamma"]], "ttnn.lgamma_bw": [[185, "ttnn-lgamma-bw"]], "ttnn.linear": [[186, "ttnn-linear"]], "ttnn.load_tensor": [[187, "ttnn-load-tensor"]], "ttnn.log": [[188, "ttnn-log"]], "ttnn.log10": [[189, "ttnn-log10"]], "ttnn.log10_bw": [[190, "ttnn-log10-bw"]], "ttnn.log1p": [[191, "ttnn-log1p"]], "ttnn.log1p_bw": [[192, "ttnn-log1p-bw"]], "ttnn.log2": [[193, "ttnn-log2"]], "ttnn.log2_bw": [[194, "ttnn-log2-bw"]], "ttnn.log_bw": [[195, "ttnn-log-bw"]], "ttnn.log_sigmoid": [[196, "ttnn-log-sigmoid"]], "ttnn.log_sigmoid_bw": [[197, "ttnn-log-sigmoid-bw"]], "ttnn.logaddexp": [[198, "ttnn-logaddexp"]], "ttnn.logaddexp2": [[199, "ttnn-logaddexp2"]], "ttnn.logaddexp2_bw": [[200, "ttnn-logaddexp2-bw"]], "ttnn.logaddexp_bw": [[201, "ttnn-logaddexp-bw"]], "ttnn.logical_and": [[202, "ttnn-logical-and"]], "ttnn.logical_and_": [[203, "ttnn-logical-and"]], "ttnn.logical_not": [[204, "ttnn-logical-not"]], "ttnn.logical_not_": [[205, "ttnn-logical-not"]], "ttnn.logical_or": [[206, "ttnn-logical-or"]], "ttnn.logical_or_": [[207, "ttnn-logical-or"]], "ttnn.logical_xor": [[208, "ttnn-logical-xor"]], "ttnn.logical_xor_": [[209, "ttnn-logical-xor"]], "ttnn.logit": [[210, "ttnn-logit"]], "ttnn.logit_bw": [[211, "ttnn-logit-bw"]], "ttnn.logiteps_bw": [[212, "ttnn-logiteps-bw"]], "ttnn.lt": [[213, "ttnn-lt"]], "ttnn.lt_": [[214, "ttnn-lt"]], "ttnn.ltz": [[215, "ttnn-ltz"]], "ttnn.mac": [[216, "ttnn-mac"]], "ttnn.manage_device": [[217, "ttnn-manage-device"]], "ttnn.matmul": [[218, "ttnn-matmul"]], "ttnn.max": [[219, "ttnn-max"]], "ttnn.max_bw": [[220, "ttnn-max-bw"]], "ttnn.max_pool2d": [[221, "ttnn-max-pool2d"]], "ttnn.maximum": [[222, "ttnn-maximum"]], "ttnn.mean": [[223, "ttnn-mean"]], "ttnn.min": [[224, "ttnn-min"]], "ttnn.min_bw": [[225, "ttnn-min-bw"]], "ttnn.minimum": [[226, "ttnn-minimum"]], "ttnn.mish": [[227, "ttnn-mish"]], "ttnn.model_preprocessing.preprocess_model": [[228, "ttnn-model-preprocessing-preprocess-model"]], "ttnn.model_preprocessing.preprocess_model_parameters": [[229, "ttnn-model-preprocessing-preprocess-model-parameters"]], "ttnn.moreh_sum": [[230, "ttnn-moreh-sum"]], "ttnn.mse_loss": [[231, "ttnn-mse-loss"]], "ttnn.mul_bw": [[232, "ttnn-mul-bw"]], "ttnn.multigammaln": [[233, "ttnn-multigammaln"]], "ttnn.multigammaln_bw": [[234, "ttnn-multigammaln-bw"]], "ttnn.multiply": [[235, "ttnn-multiply"]], "ttnn.ne": [[236, "ttnn-ne"]], "ttnn.ne_": [[237, "ttnn-ne"]], "ttnn.neg": [[238, "ttnn-neg"]], "ttnn.neg_bw": [[239, "ttnn-neg-bw"]], "ttnn.nextafter": [[240, "ttnn-nextafter"]], "ttnn.nez": [[241, "ttnn-nez"]], "ttnn.nonzero": [[242, "ttnn-nonzero"]], "ttnn.normalize_global": [[243, "ttnn-normalize-global"]], "ttnn.normalize_hw": [[244, "ttnn-normalize-hw"]], "ttnn.ones": [[245, "ttnn-ones"]], "ttnn.ones_like": [[246, "ttnn-ones-like"]], "ttnn.open_device": [[247, "ttnn-open-device"]], "ttnn.outer": [[248, "ttnn-outer"]], "ttnn.pad": [[249, "ttnn-pad"]], "ttnn.pad_to_tile_shape": [[250, "ttnn-pad-to-tile-shape"]], "ttnn.permute": [[251, "ttnn-permute"]], "ttnn.polar": [[252, "ttnn-polar"]], "ttnn.polar_bw": [[253, "ttnn-polar-bw"]], "ttnn.polygamma": [[254, "ttnn-polygamma"]], "ttnn.polygamma_bw": [[255, "ttnn-polygamma-bw"]], "ttnn.polyval": [[256, "ttnn-polyval"]], "ttnn.pow": [[257, "ttnn-pow"]], "ttnn.pow_bw": [[258, "ttnn-pow-bw"]], "ttnn.prelu": [[259, "ttnn-prelu"]], "ttnn.prepare_conv_bias": [[260, "ttnn-prepare-conv-bias"]], "ttnn.prepare_conv_weights": [[261, "ttnn-prepare-conv-weights"]], "ttnn.prod": [[262, "ttnn-prod"]], "ttnn.prod_bw": [[263, "ttnn-prod-bw"]], "ttnn.rad2deg": [[264, "ttnn-rad2deg"]], "ttnn.rad2deg_bw": [[265, "ttnn-rad2deg-bw"]], "ttnn.rdiv": [[266, "ttnn-rdiv"]], "ttnn.rdiv_bw": [[267, "ttnn-rdiv-bw"]], "ttnn.real": [[268, "ttnn-real"]], "ttnn.real_bw": [[269, "ttnn-real-bw"]], "ttnn.reallocate": [[270, "ttnn-reallocate"]], "ttnn.reciprocal": [[271, "ttnn-reciprocal"]], "ttnn.reciprocal_bw": [[272, "ttnn-reciprocal-bw"]], "ttnn.reduce_scatter": [[273, "ttnn-reduce-scatter"]], "ttnn.register_post_operation_hook": [[274, "ttnn-register-post-operation-hook"]], "ttnn.register_pre_operation_hook": [[275, "ttnn-register-pre-operation-hook"]], "ttnn.reglu": [[276, "ttnn-reglu"]], "ttnn.relu": [[277, "ttnn-relu"]], "ttnn.relu6": [[278, "ttnn-relu6"]], "ttnn.relu6_bw": [[279, "ttnn-relu6-bw"]], "ttnn.relu_bw": [[280, "ttnn-relu-bw"]], "ttnn.relu_max": [[281, "ttnn-relu-max"]], "ttnn.relu_min": [[282, "ttnn-relu-min"]], "ttnn.remainder": [[283, "ttnn-remainder"]], "ttnn.remainder_bw": [[284, "ttnn-remainder-bw"]], "ttnn.repeat": [[285, "ttnn-repeat"]], "ttnn.repeat_bw": [[286, "ttnn-repeat-bw"]], "ttnn.repeat_interleave": [[287, "ttnn-repeat-interleave"]], "ttnn.reshape": [[288, "ttnn-reshape"]], "ttnn.rms_norm": [[289, "ttnn-rms-norm"]], "ttnn.round": [[290, "ttnn-round"]], "ttnn.round_bw": [[291, "ttnn-round-bw"]], "ttnn.rpow": [[292, "ttnn-rpow"]], "ttnn.rpow_bw": [[293, "ttnn-rpow-bw"]], "ttnn.rsqrt": [[294, "ttnn-rsqrt"]], "ttnn.rsqrt_bw": [[295, "ttnn-rsqrt-bw"]], "ttnn.rsub": [[296, "ttnn-rsub"]], "ttnn.rsub_bw": [[297, "ttnn-rsub-bw"]], "ttnn.scatter": [[298, "ttnn-scatter"]], "ttnn.selu": [[299, "ttnn-selu"]], "ttnn.selu_bw": [[300, "ttnn-selu-bw"]], "ttnn.set_printoptions": [[301, "ttnn-set-printoptions"]], "ttnn.sigmoid": [[302, "ttnn-sigmoid"]], "ttnn.sigmoid_accurate": [[303, "ttnn-sigmoid-accurate"]], "ttnn.sigmoid_bw": [[304, "ttnn-sigmoid-bw"]], "ttnn.sign": [[305, "ttnn-sign"]], "ttnn.sign_bw": [[306, "ttnn-sign-bw"]], "ttnn.signbit": [[307, "ttnn-signbit"]], "ttnn.silu": [[308, "ttnn-silu"]], "ttnn.silu_bw": [[309, "ttnn-silu-bw"]], "ttnn.sin": [[310, "ttnn-sin"]], "ttnn.sin_bw": [[311, "ttnn-sin-bw"]], "ttnn.sinh": [[312, "ttnn-sinh"]], "ttnn.sinh_bw": [[313, "ttnn-sinh-bw"]], "ttnn.slice": [[314, "ttnn-slice"]], "ttnn.softmax": [[315, "ttnn-softmax"]], "ttnn.softplus": [[316, "ttnn-softplus"]], "ttnn.softplus_bw": [[317, "ttnn-softplus-bw"]], "ttnn.softshrink": [[318, "ttnn-softshrink"]], "ttnn.softshrink_bw": [[319, "ttnn-softshrink-bw"]], "ttnn.softsign": [[320, "ttnn-softsign"]], "ttnn.softsign_bw": [[321, "ttnn-softsign-bw"]], "ttnn.sqrt": [[322, "ttnn-sqrt"]], "ttnn.sqrt_bw": [[323, "ttnn-sqrt-bw"]], "ttnn.square": [[324, "ttnn-square"]], "ttnn.square_bw": [[325, "ttnn-square-bw"]], "ttnn.squared_difference": [[326, "ttnn-squared-difference"]], "ttnn.squared_difference_bw": [[327, "ttnn-squared-difference-bw"]], "ttnn.std": [[328, "ttnn-std"]], "ttnn.sub_bw": [[329, "ttnn-sub-bw"]], "ttnn.subalpha": [[330, "ttnn-subalpha"]], "ttnn.subalpha_bw": [[331, "ttnn-subalpha-bw"]], "ttnn.subtract": [[332, "ttnn-subtract"]], "ttnn.sum": [[333, "ttnn-sum"]], "ttnn.swiglu": [[334, "ttnn-swiglu"]], "ttnn.swish": [[335, "ttnn-swish"]], "ttnn.synchronize_device": [[336, "ttnn-synchronize-device"]], "ttnn.tan": [[337, "ttnn-tan"]], "ttnn.tan_bw": [[338, "ttnn-tan-bw"]], "ttnn.tanh": [[339, "ttnn-tanh"]], "ttnn.tanh_bw": [[340, "ttnn-tanh-bw"]], "ttnn.tanhshrink": [[341, "ttnn-tanhshrink"]], "ttnn.tanhshrink_bw": [[342, "ttnn-tanhshrink-bw"]], "ttnn.threshold": [[343, "ttnn-threshold"]], "ttnn.threshold_bw": [[344, "ttnn-threshold-bw"]], "ttnn.tilize": [[345, "ttnn-tilize"]], "ttnn.tilize_with_val_padding": [[346, "ttnn-tilize-with-val-padding"]], "ttnn.to_device": [[347, "ttnn-to-device"]], "ttnn.to_layout": [[348, "ttnn-to-layout"]], "ttnn.to_memory_config": [[349, "ttnn-to-memory-config"]], "ttnn.to_torch": [[350, "ttnn-to-torch"]], "ttnn.topk": [[351, "ttnn-topk"]], "ttnn.transformer.attention_softmax": [[352, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.attention_softmax_": [[353, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.concatenate_heads": [[354, "ttnn-transformer-concatenate-heads"]], "ttnn.transformer.scaled_dot_product_attention": [[355, "ttnn-transformer-scaled-dot-product-attention"]], "ttnn.transformer.scaled_dot_product_attention_decode": [[356, "ttnn-transformer-scaled-dot-product-attention-decode"]], "ttnn.transformer.split_query_key_value_and_split_heads": [[357, "ttnn-transformer-split-query-key-value-and-split-heads"]], "ttnn.tril": [[358, "ttnn-tril"]], "ttnn.triu": [[359, "ttnn-triu"]], "ttnn.trunc": [[360, "ttnn-trunc"]], "ttnn.trunc_bw": [[361, "ttnn-trunc-bw"]], "ttnn.unary_chain": [[362, "ttnn-unary-chain"]], "ttnn.untilize": [[363, "ttnn-untilize"]], "ttnn.untilize_with_unpadding": [[364, "ttnn-untilize-with-unpadding"]], "ttnn.upsample": [[365, "ttnn-upsample"]], "ttnn.var": [[366, "ttnn-var"]], "ttnn.where": [[367, "ttnn-where"]], "ttnn.where_bw": [[368, "ttnn-where-bw"]], "ttnn.xlogy": [[369, "ttnn-xlogy"]], "ttnn.xlogy_bw": [[370, "ttnn-xlogy-bw"]], "ttnn.zeros": [[371, "ttnn-zeros"]], "ttnn.zeros_like": [[372, "ttnn-zeros-like"]], "Converting PyTorch Model to TT-NN": [[373, "converting-pytorch-model-to-tt-nn"]], "Step 1 - Rewriting the Model": [[373, "step-1-rewriting-the-model"]], "Step 2 - Switching to ttnn Operations": [[373, "step-2-switching-to-ttnn-operations"]], "Step 3 - Optimizing the Model": [[373, "step-3-optimizing-the-model"]], "More examples": [[373, "more-examples"]], "Building and Uplifting Demos": [[374, "building-and-uplifting-demos"]], "Examples of Tensor and TT-LIB Use": [[375, "examples-of-tensor-and-tt-lib-use"]], "Run one OP from TT-LIB on TT Accelerator device": [[375, "run-one-op-from-tt-lib-on-tt-accelerator-device"]], "Run TT-LIB and PyTorch OPs": [[375, "run-tt-lib-and-pytorch-ops"]], "Tensors with odd size of last dim": [[375, "tensors-with-odd-size-of-last-dim"]], "Dependencies": [[376, "dependencies"]], "Tensor": [[377, "tensor"], [383, "tensor"]], "Overview": [[377, "overview"], [378, "overview"]], "Tensor Storage": [[377, "tensor-storage"]], "Tensor API": [[377, "tensor-api"]], "MemoryConfig": [[377, "memoryconfig"]], "Examples of converting between PyTorch Tensor and TT Tensor": [[377, "examples-of-converting-between-pytorch-tensor-and-tt-tensor"]], "Converting a PyTorch Tensor to a TT Tensor": [[377, "converting-a-pytorch-tensor-to-a-tt-tensor"]], "Converting a TT Tensor to a PyTorch Tensor": [[377, "converting-a-tt-tensor-to-a-pytorch-tensor"]], "TT-LIB": [[378, "tt-lib"]], "Operation Infrastructure": [[378, "operation-infrastructure"]], "New Device Operation": [[378, "new-device-operation"]], "New Device Operation with a member": [[378, "new-device-operation-with-a-member"]], "New Device Operation with Optional Input Tensors": [[378, "new-device-operation-with-optional-input-tensors"]], "New Device Operation with Optional Output Tensors": [[378, "new-device-operation-with-optional-output-tensors"]], "Profiler": [[378, "profiler"]], "Fast Dispatch": [[378, "fast-dispatch"]], "Program Caching": [[378, "program-caching"]], "Logs": [[378, "logs"]], "TT-LIB API through tt_lib": [[378, "tt-lib-api-through-tt-lib"]], "Primary Operations": [[378, "primary-operations"]], "Enums": [[378, "enums"]], "Fallback Operations": [[378, "fallback-operations"]], "Experimental Operations": [[378, "experimental-operations"]], "Fused Operations from tt_lib Mini-Graph Library": [[378, "fused-operations-from-tt-lib-mini-graph-library"]], "Complex Operations (Type 2)": [[378, "complex-operations-type-2"]], "1. Install and Build": [[379, "install-and-build"]], "2. Explore Our Model Demos": [[379, "explore-our-model-demos"]], "3. TT-NN Tutorial: Multi-Head Attention (Simple)": [[379, "tt-nn-tutorial-multi-head-attention-simple"]], "4. TT-NN Tutorial: Multi-Head Attention (Optimized)": [[379, "tt-nn-tutorial-multi-head-attention-optimized"]], "Where To Go From Here": [[379, "where-to-go-from-here"]], "Install": [[380, "install"]], "Prerequisites:": [[380, "prerequisites"]], "1: Set Up the Hardware": [[380, "set-up-the-hardware"]], "2: Install Driver & Firmware": [[380, "install-driver-firmware"]], "Install System-level Dependencies": [[380, "install-system-level-dependencies"]], "Install the Driver (TT-KMD)": [[380, "install-the-driver-tt-kmd"]], "Update Device TT-Firmware with TT-Flash": [[380, "update-device-tt-firmware-with-tt-flash"]], "Install System Management Interface (TT-SMI)": [[380, "install-system-management-interface-tt-smi"]], "(Optional) Multi-Card Configuration (TT-Topology)": [[380, "optional-multi-card-configuration-tt-topology"]], "TT-NN / TT-Metalium Installation": [[380, "tt-nn-tt-metalium-installation"]], "There are three options for installing TT-Metalium:": [[380, "there-are-three-options-for-installing-tt-metalium"]], "Option 1: From Source": [[380, "option-1-from-source"]], "Step 1. Clone the Repository:": [[380, "step-1-clone-the-repository"]], "Step 2. Invoke our Build Scripts:": [[380, "step-2-invoke-our-build-scripts"]], "Option 2: From Docker Release Image": [[380, "option-2-from-docker-release-image"]], "Option 3: From Wheel": [[380, "option-3-from-wheel"]], "Step 1. Download and Install the Latest Wheel:": [[380, "step-1-download-and-install-the-latest-wheel"]], "Step 2. (For models users only) Set Up Environment for Models:": [[380, "step-2-for-models-users-only-set-up-environment-for-models"]], "You are All Set!": [[380, "you-are-all-set"]], "To verify your installation, try executing a programming example:": [[380, "to-verify-your-installation-try-executing-a-programming-example"]], "Interested in Contributing?": [[380, "interested-in-contributing"]], "Onboarding New Functionality": [[381, "onboarding-new-functionality"]], "Profiling TT-NN Operations": [[382, "profiling-tt-nn-operations"]], "Perf Report Headers": [[382, "perf-report-headers"]], "profile_this description": [[382, "profile-this-description"]], "Shape": [[383, "shape"]], "Layout": [[383, "layout"], [392, "Layout"]], "Data Type": [[383, "data-type"], [392, "Data-Type"]], "Required Width Multiples for Data Types": [[383, "id4"]], "Limitation of BFLOAT8_B": [[383, "limitation-of-bfloat8-b"]], "Storage": [[383, "storage"]], "Tensor Sharding": [[383, "tensor-sharding"]], "Tutorials": [[384, "id1"]], "Graphing Torch DiT_XL_2 With TTNN": [[385, "graphing-torch-dit-xl-2-with-ttnn"]], "Matmul Operation": [[386, "matmul-operation"]], "Multi-Head Attention": [[387, "multi-head-attention"], [394, "Multi-Head-Attention"]], "ttnn Profiling": [[388, "ttnn-profiling"]], "Resnet Basic Block": [[389, "resnet-basic-block"]], "Tensor and Add Operation": [[390, "tensor-and-add-operation"], [392, "Tensor-and-Add-Operation"]], "ttnn Tracer": [[391, "ttnn-tracer"]], "Creating a tensor": [[392, "Creating-a-tensor"]], "Host Storage: Borrowed vs Owned": [[392, "Host-Storage:-Borrowed-vs-Owned"]], "Device storage": [[392, "Device-storage"]], "Open the device": [[392, "Open-the-device"]], "Initialize tensors a and b with random values using torch": [[392, "Initialize-tensors-a-and-b-with-random-values-using-torch"], [393, "Initialize-tensors-a-and-b-with-random-values-using-torch"]], "Add tensor a and b": [[392, "Add-tensor-a-and-b"]], "Inspect the output tensor of the add in ttnn": [[392, "Inspect-the-output-tensor-of-the-add-in-ttnn"]], "Convert to torch and inspect the attributes of the torch tensor": [[392, "Convert-to-torch-and-inspect-the-attributes-of-the-torch-tensor"]], "Close the device": [[392, "Close-the-device"], [393, "Close-the-device"], [394, "Close-the-device"]], "Enable program cache": [[393, "Enable-program-cache"], [394, "Enable-program-cache"]], "Configuration": [[393, "Configuration"], [394, "Configuration"]], "Matrix multiply tensor a and b": [[393, "Matrix-multiply-tensor-a-and-b"]], "Inspect the layout of matrix multiplication output": [[393, "Inspect-the-layout-of-matrix-multiplication-output"]], "Inspect the result of the matrix multiplication": [[393, "Inspect-the-result-of-the-matrix-multiplication"]], "Matrix multiply tensor a and b by using more performant config": [[393, "Matrix-multiply-tensor-a-and-b-by-using-more-performant-config"]], "Write Multi-Head Attention using ttnn": [[394, "Write-Multi-Head-Attention-using-ttnn"]], "Initialize activations and weights using torch": [[394, "Initialize-activations-and-weights-using-torch"]], "Convert activations and weights to ttnn": [[394, "Convert-activations-and-weights-to-ttnn"]], "Run the first iteration of Multi-Head Attention": [[394, "Run-the-first-iteration-of-Multi-Head-Attention"]], "Run a subsequent iteration of Multi-Head Attention": [[394, "Run-a-subsequent-iteration-of-Multi-Head-Attention"]], "Write optimized version of Multi-Head Attention": [[394, "Write-optimized-version-of-Multi-Head-Attention"]], "Pre-process the parameters of the optimized model": [[394, "Pre-process-the-parameters-of-the-optimized-model"]], "Run the first iteration of the optimized Multi-Head Attention": [[394, "Run-the-first-iteration-of-the-optimized-Multi-Head-Attention"]], "Run a subsequent iteration of the optimized Multi-Head Attention": [[394, "Run-a-subsequent-iteration-of-the-optimized-Multi-Head-Attention"]], "Check that the output of the optimized version matches the output of the original implementation": [[394, "Check-that-the-output-of-the-optimized-version-matches-the-output-of-the-original-implementation"]], "Tracing ttnn operations and torch modules/functions": [[395, "Tracing-ttnn-operations-and-torch-modules/functions"]], "Trace torch functions": [[395, "Trace-torch-functions"]], "Trace torch functions and ttnn operations": [[395, "Trace-torch-functions-and-ttnn-operations"]], "Trace torch functions, torch modules and ttnn operations": [[395, "Trace-torch-functions,-torch-modules-and-ttnn-operations"]], "Trace models written using ttnn": [[395, "Trace-models-written-using-ttnn"]], "Profiling ttnn operations": [[396, "Profiling-ttnn-operations"]], "Resnet Block": [[397, "Resnet-Block"]], "Torch Module (from torchvision)": [[397, "Torch-Module-(from-torchvision)"]], "Create torch module and preprocess it to get ttnn parameters": [[397, "Create-torch-module-and-preprocess-it-to-get-ttnn-parameters"]], "Display the parameters of the module": [[397, "Display-the-parameters-of-the-module"]], "Display the traced torch graph": [[397, "Display-the-traced-torch-graph"]], "Implement ttnn version of the module. Pass in the parameters into the constructor.": [[397, "Implement-ttnn-version-of-the-module.-Pass-in-the-parameters-into-the-constructor."]], "Run ttnn module and display the traced graph": [[397, "Run-ttnn-module-and-display-the-traced-graph"]], "Build a graph of a pytorch based model": [[398, "Build-a-graph-of-a-pytorch-based-model"]], "Clone the library from https://github.com/facebookresearch/DiT.git": [[398, "Clone-the-library-from-https://github.com/facebookresearch/DiT.git"]], "Download DiT-XL/2 Models": [[398, "Download-DiT-XL/2-Models"]], "Sample from Pre-trained DiT Models and build the graph": [[398, "Sample-from-Pre-trained-DiT-Models-and-build-the-graph"]], "Display the graph": [[398, "Display-the-graph"]], "Using TT-NN": [[399, "using-tt-nn"]], "Basic Examples": [[399, "basic-examples"]], "1. Converting from and to torch tensor": [[399, "converting-from-and-to-torch-tensor"]], "2. Running an operation on the device": [[399, "running-an-operation-on-the-device"]], "3. Using __getitem__ to slice the tensor": [[399, "using-getitem-to-slice-the-tensor"]], "4. Enabling program cache": [[399, "enabling-program-cache"]], "5. Debugging intermediate tensors": [[399, "debugging-intermediate-tensors"]], "6. Tracing the graph of operations": [[399, "tracing-the-graph-of-operations"]], "7. Using tt_lib operation in TT-NN": [[399, "using-tt-lib-operation-in-tt-nn"]], "8. Enabling Logging": [[399, "enabling-logging"]], "9. Supported Python Operators": [[399, "supported-python-operators"]], "10. Changing the string representation of the tensor": [[399, "changing-the-string-representation-of-the-tensor"]], "11. Visualize using Web Browser": [[399, "visualize-using-web-browser"]], "12. Register pre- and/or post-operation hooks": [[399, "register-pre-and-or-post-operation-hooks"]], "13. Query all operations": [[399, "query-all-operations"]], "14. Falling back to torch": [[399, "falling-back-to-torch"]], "15. Capturing graph of C++ functions, buffer allocations, etc": [[399, "capturing-graph-of-c-functions-buffer-allocations-etc"]]}, "indexentries": {"conv2dconfig (class in ttnn)": [[8, "ttnn.Conv2dConfig"]], "act_block_h_override (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.act_block_h_override"]], "act_block_w_div (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.act_block_w_div"]], "activation (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.activation"]], "always_preprocess_weights (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.always_preprocess_weights"]], "core_grid (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.core_grid"]], "deallocate_activation (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.deallocate_activation"]], "dtype (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.dtype"]], "enable_act_double_buffer (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.enable_act_double_buffer"]], "enable_split_reader (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.enable_split_reader"]], "enable_subblock_padding (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.enable_subblock_padding"]], "enable_weights_double_buffer (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.enable_weights_double_buffer"]], "in_place (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.in_place"]], "input_channels_alignment (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.input_channels_alignment"]], "output_layout (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.output_layout"]], "override_sharding_config (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.override_sharding_config"]], "preprocess_weights_on_device (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.preprocess_weights_on_device"]], "reallocate_halo_output (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.reallocate_halo_output"]], "reshard_if_not_optimal (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.reshard_if_not_optimal"]], "shard_layout (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.shard_layout"]], "transpose_shards (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.transpose_shards"]], "weights_dtype (ttnn.conv2dconfig property)": [[8, "ttnn.Conv2dConfig.weights_dtype"]], "conv2dsliceconfig (class in ttnn)": [[9, "ttnn.Conv2dSliceConfig"]], "conv2dsliceconfig.slicetypeenum (class in ttnn)": [[9, "ttnn.Conv2dSliceConfig.SliceTypeEnum"]], "sliceheight (ttnn.conv2dsliceconfig.slicetypeenum attribute)": [[9, "ttnn.Conv2dSliceConfig.SliceTypeEnum.SliceHeight"]], "slicewidth (ttnn.conv2dsliceconfig.slicetypeenum attribute)": [[9, "ttnn.Conv2dSliceConfig.SliceTypeEnum.SliceWidth"]], "name (ttnn.conv2dsliceconfig.slicetypeenum property)": [[9, "ttnn.Conv2dSliceConfig.SliceTypeEnum.name"]], "num_slices (ttnn.conv2dsliceconfig property)": [[9, "ttnn.Conv2dSliceConfig.num_slices"]], "slice_type (ttnn.conv2dsliceconfig property)": [[9, "ttnn.Conv2dSliceConfig.slice_type"]], "value (ttnn.conv2dsliceconfig.slicetypeenum property)": [[9, "ttnn.Conv2dSliceConfig.SliceTypeEnum.value"]], "getdefaultdevice() (in module ttnn)": [[10, "ttnn.GetDefaultDevice"]], "setdefaultdevice() (in module ttnn)": [[11, "ttnn.SetDefaultDevice"]], "abs (in module ttnn)": [[12, "ttnn.abs"]], "abs_bw (in module ttnn)": [[13, "ttnn.abs_bw"]], "acos (in module ttnn)": [[14, "ttnn.acos"]], "acos_bw (in module ttnn)": [[15, "ttnn.acos_bw"]], "acosh (in module ttnn)": [[16, "ttnn.acosh"]], "acosh_bw (in module ttnn)": [[17, "ttnn.acosh_bw"]], "add (in module ttnn)": [[18, "ttnn.add"]], "add_bw (in module ttnn)": [[19, "ttnn.add_bw"]], "addalpha (in module ttnn)": [[20, "ttnn.addalpha"]], "addalpha_bw (in module ttnn)": [[21, "ttnn.addalpha_bw"]], "addcdiv (in module ttnn)": [[22, "ttnn.addcdiv"]], "addcdiv_bw (in module ttnn)": [[23, "ttnn.addcdiv_bw"]], "addcmul (in module ttnn)": [[24, "ttnn.addcmul"]], "addcmul_bw (in module ttnn)": [[25, "ttnn.addcmul_bw"]], "all_gather (in module ttnn)": [[26, "ttnn.all_gather"]], "angle (in module ttnn)": [[27, "ttnn.angle"]], "angle_bw (in module ttnn)": [[28, "ttnn.angle_bw"]], "arange (in module ttnn)": [[29, "ttnn.arange"]], "argmax (in module ttnn)": [[30, "ttnn.argmax"]], "as_tensor (in module ttnn)": [[31, "ttnn.as_tensor"]], "asin (in module ttnn)": [[32, "ttnn.asin"]], "asin_bw (in module ttnn)": [[33, "ttnn.asin_bw"]], "asinh (in module ttnn)": [[34, "ttnn.asinh"]], "asinh_bw (in module ttnn)": [[35, "ttnn.asinh_bw"]], "assign_bw (in module ttnn)": [[36, "ttnn.assign_bw"]], "atan (in module ttnn)": [[37, "ttnn.atan"]], "atan2 (in module ttnn)": [[38, "ttnn.atan2"]], "atan2_bw (in module ttnn)": [[39, "ttnn.atan2_bw"]], "atan_bw (in module ttnn)": [[40, "ttnn.atan_bw"]], "atanh (in module ttnn)": [[41, "ttnn.atanh"]], "atanh_bw (in module ttnn)": [[42, "ttnn.atanh_bw"]], "batch_norm (in module ttnn)": [[43, "ttnn.batch_norm"]], "bias_gelu_bw (in module ttnn)": [[44, "ttnn.bias_gelu_bw"]], "bitwise_and (in module ttnn)": [[45, "ttnn.bitwise_and"]], "bitwise_left_shift (in module ttnn)": [[46, "ttnn.bitwise_left_shift"]], "bitwise_not (in module ttnn)": [[47, "ttnn.bitwise_not"]], "bitwise_or (in module ttnn)": [[48, "ttnn.bitwise_or"]], "bitwise_right_shift (in module ttnn)": [[49, "ttnn.bitwise_right_shift"]], "bitwise_xor (in module ttnn)": [[50, "ttnn.bitwise_xor"]], "cbrt (in module ttnn)": [[51, "ttnn.cbrt"]], "ceil (in module ttnn)": [[52, "ttnn.ceil"]], "ceil_bw (in module ttnn)": [[53, "ttnn.ceil_bw"]], "celu (in module ttnn)": [[54, "ttnn.celu"]], "celu_bw (in module ttnn)": [[55, "ttnn.celu_bw"]], "clamp (in module ttnn)": [[56, "ttnn.clamp"]], "clamp_bw (in module ttnn)": [[57, "ttnn.clamp_bw"]], "clip (in module ttnn)": [[58, "ttnn.clip"]], "clip_bw (in module ttnn)": [[59, "ttnn.clip_bw"]], "clone (in module ttnn)": [[60, "ttnn.clone"]], "close_device() (in module ttnn)": [[61, "ttnn.close_device"]], "concat (in module ttnn)": [[62, "ttnn.concat"]], "concat_bw (in module ttnn)": [[63, "ttnn.concat_bw"]], "conj (in module ttnn)": [[64, "ttnn.conj"]], "conj_bw (in module ttnn)": [[65, "ttnn.conj_bw"]], "conv1d (in module ttnn)": [[66, "ttnn.conv1d"]], "conv2d (in module ttnn)": [[67, "ttnn.conv2d"]], "conv_transpose2d (in module ttnn)": [[68, "ttnn.conv_transpose2d"]], "cos (in module ttnn)": [[69, "ttnn.cos"]], "cos_bw (in module ttnn)": [[70, "ttnn.cos_bw"]], "cosh (in module ttnn)": [[71, "ttnn.cosh"]], "cosh_bw (in module ttnn)": [[72, "ttnn.cosh_bw"]], "create_sharded_memory_config() (in module ttnn)": [[73, "ttnn.create_sharded_memory_config"]], "deallocate (in module ttnn)": [[74, "ttnn.deallocate"]], "deg2rad (in module ttnn)": [[75, "ttnn.deg2rad"]], "deg2rad_bw (in module ttnn)": [[76, "ttnn.deg2rad_bw"]], "digamma (in module ttnn)": [[77, "ttnn.digamma"]], "digamma_bw (in module ttnn)": [[78, "ttnn.digamma_bw"]], "div (in module ttnn)": [[79, "ttnn.div"]], "div_bw (in module ttnn)": [[80, "ttnn.div_bw"]], "div_no_nan (in module ttnn)": [[81, "ttnn.div_no_nan"]], "div_no_nan_bw (in module ttnn)": [[82, "ttnn.div_no_nan_bw"]], "downsample (in module ttnn)": [[83, "ttnn.downsample"]], "dump_tensor (in module ttnn)": [[84, "ttnn.dump_tensor"]], "elu (in module ttnn)": [[85, "ttnn.elu"]], "elu_bw (in module ttnn)": [[86, "ttnn.elu_bw"]], "embedding (in module ttnn)": [[87, "ttnn.embedding"]], "embedding_bw (in module ttnn)": [[88, "ttnn.embedding_bw"]], "empty (in module ttnn)": [[89, "ttnn.empty"]], "empty_like (in module ttnn)": [[90, "ttnn.empty_like"]], "eq (in module ttnn)": [[91, "ttnn.eq"]], "eq_ (in module ttnn)": [[92, "ttnn.eq_"]], "eqz (in module ttnn)": [[93, "ttnn.eqz"]], "erf (in module ttnn)": [[94, "ttnn.erf"]], "erf_bw (in module ttnn)": [[95, "ttnn.erf_bw"]], "erfc (in module ttnn)": [[96, "ttnn.erfc"]], "erfc_bw (in module ttnn)": [[97, "ttnn.erfc_bw"]], "erfinv (in module ttnn)": [[98, "ttnn.erfinv"]], "erfinv_bw (in module ttnn)": [[99, "ttnn.erfinv_bw"]], "exp (in module ttnn)": [[100, "ttnn.exp"]], "exp2 (in module ttnn)": [[101, "ttnn.exp2"]], "exp2_bw (in module ttnn)": [[102, "ttnn.exp2_bw"]], "exp_bw (in module ttnn)": [[103, "ttnn.exp_bw"]], "all_reduce (in module ttnn.experimental)": [[104, "ttnn.experimental.all_reduce"]], "conv3d (in module ttnn.experimental)": [[105, "ttnn.experimental.conv3d"]], "cumprod (in module ttnn.experimental)": [[106, "ttnn.experimental.cumprod"]], "cumsum (in module ttnn.experimental)": [[107, "ttnn.experimental.cumsum"]], "dropout (in module ttnn.experimental)": [[108, "ttnn.experimental.dropout"]], "gelu_bw (in module ttnn.experimental)": [[109, "ttnn.experimental.gelu_bw"]], "rotary_embedding (in module ttnn.experimental)": [[110, "ttnn.experimental.rotary_embedding"]], "sort (in module ttnn.experimental)": [[111, "ttnn.experimental.sort"]], "expm1 (in module ttnn)": [[112, "ttnn.expm1"]], "expm1_bw (in module ttnn)": [[113, "ttnn.expm1_bw"]], "fill (in module ttnn)": [[114, "ttnn.fill"]], "fill_bw (in module ttnn)": [[115, "ttnn.fill_bw"]], "fill_ones_rm (in module ttnn)": [[116, "ttnn.fill_ones_rm"]], "fill_rm (in module ttnn)": [[117, "ttnn.fill_rm"]], "fill_zero_bw (in module ttnn)": [[118, "ttnn.fill_zero_bw"]], "floor (in module ttnn)": [[119, "ttnn.floor"]], "floor_bw (in module ttnn)": [[120, "ttnn.floor_bw"]], "floor_div (in module ttnn)": [[121, "ttnn.floor_div"]], "fmod (in module ttnn)": [[122, "ttnn.fmod"]], "fmod_bw (in module ttnn)": [[123, "ttnn.fmod_bw"]], "format_input_tensor() (in module ttnn)": [[124, "ttnn.format_input_tensor"]], "format_output_tensor() (in module ttnn)": [[125, "ttnn.format_output_tensor"]], "frac (in module ttnn)": [[126, "ttnn.frac"]], "frac_bw (in module ttnn)": [[127, "ttnn.frac_bw"]], "from_device (in module ttnn)": [[128, "ttnn.from_device"]], "from_torch (in module ttnn)": [[129, "ttnn.from_torch"]], "full (in module ttnn)": [[130, "ttnn.full"]], "full_like (in module ttnn)": [[131, "ttnn.full_like"]], "gcd (in module ttnn)": [[132, "ttnn.gcd"]], "ge (in module ttnn)": [[133, "ttnn.ge"]], "ge_ (in module ttnn)": [[134, "ttnn.ge_"]], "geglu (in module ttnn)": [[135, "ttnn.geglu"]], "gelu (in module ttnn)": [[136, "ttnn.gelu"]], "gelu_bw (in module ttnn)": [[137, "ttnn.gelu_bw"]], "gez (in module ttnn)": [[138, "ttnn.gez"]], "global_avg_pool2d (in module ttnn)": [[139, "ttnn.global_avg_pool2d"]], "glu (in module ttnn)": [[140, "ttnn.glu"]], "group_norm (in module ttnn)": [[141, "ttnn.group_norm"]], "gt (in module ttnn)": [[142, "ttnn.gt"]], "gt_ (in module ttnn)": [[143, "ttnn.gt_"]], "gtz (in module ttnn)": [[144, "ttnn.gtz"]], "hardshrink (in module ttnn)": [[145, "ttnn.hardshrink"]], "hardshrink_bw (in module ttnn)": [[146, "ttnn.hardshrink_bw"]], "hardsigmoid (in module ttnn)": [[147, "ttnn.hardsigmoid"]], "hardsigmoid_bw (in module ttnn)": [[148, "ttnn.hardsigmoid_bw"]], "hardswish (in module ttnn)": [[149, "ttnn.hardswish"]], "hardswish_bw (in module ttnn)": [[150, "ttnn.hardswish_bw"]], "hardtanh (in module ttnn)": [[151, "ttnn.hardtanh"]], "hardtanh_bw (in module ttnn)": [[152, "ttnn.hardtanh_bw"]], "heaviside (in module ttnn)": [[153, "ttnn.heaviside"]], "hypot (in module ttnn)": [[154, "ttnn.hypot"]], "hypot_bw (in module ttnn)": [[155, "ttnn.hypot_bw"]], "i0 (in module ttnn)": [[156, "ttnn.i0"]], "i0_bw (in module ttnn)": [[157, "ttnn.i0_bw"]], "identity (in module ttnn)": [[158, "ttnn.identity"]], "imag (in module ttnn)": [[159, "ttnn.imag"]], "imag_bw (in module ttnn)": [[160, "ttnn.imag_bw"]], "indexed_fill (in module ttnn)": [[161, "ttnn.indexed_fill"]], "is_imag (in module ttnn)": [[162, "ttnn.is_imag"]], "is_real (in module ttnn)": [[163, "ttnn.is_real"]], "isclose (in module ttnn)": [[164, "ttnn.isclose"]], "isfinite (in module ttnn)": [[165, "ttnn.isfinite"]], "isinf (in module ttnn)": [[166, "ttnn.isinf"]], "isnan (in module ttnn)": [[167, "ttnn.isnan"]], "isneginf (in module ttnn)": [[168, "ttnn.isneginf"]], "isposinf (in module ttnn)": [[169, "ttnn.isposinf"]], "fill_cache_for_user_ (in module ttnn.kv_cache)": [[170, "ttnn.kv_cache.fill_cache_for_user_"]], "update_cache_for_token_ (in module ttnn.kv_cache)": [[171, "ttnn.kv_cache.update_cache_for_token_"]], "l1_loss (in module ttnn)": [[172, "ttnn.l1_loss"]], "layer_norm (in module ttnn)": [[173, "ttnn.layer_norm"]], "lcm (in module ttnn)": [[174, "ttnn.lcm"]], "ldexp (in module ttnn)": [[175, "ttnn.ldexp"]], "ldexp_bw (in module ttnn)": [[176, "ttnn.ldexp_bw"]], "le (in module ttnn)": [[177, "ttnn.le"]], "le_ (in module ttnn)": [[178, "ttnn.le_"]], "leaky_relu (in module ttnn)": [[179, "ttnn.leaky_relu"]], "leaky_relu_bw (in module ttnn)": [[180, "ttnn.leaky_relu_bw"]], "lerp (in module ttnn)": [[181, "ttnn.lerp"]], "lerp_bw (in module ttnn)": [[182, "ttnn.lerp_bw"]], "lez (in module ttnn)": [[183, "ttnn.lez"]], "lgamma (in module ttnn)": [[184, "ttnn.lgamma"]], "lgamma_bw (in module ttnn)": [[185, "ttnn.lgamma_bw"]], "linear (in module ttnn)": [[186, "ttnn.linear"]], "load_tensor (in module ttnn)": [[187, "ttnn.load_tensor"]], "log (in module ttnn)": [[188, "ttnn.log"]], "log10 (in module ttnn)": [[189, "ttnn.log10"]], "log10_bw (in module ttnn)": [[190, "ttnn.log10_bw"]], "log1p (in module ttnn)": [[191, "ttnn.log1p"]], "log1p_bw (in module ttnn)": [[192, "ttnn.log1p_bw"]], "log2 (in module ttnn)": [[193, "ttnn.log2"]], "log2_bw (in module ttnn)": [[194, "ttnn.log2_bw"]], "log_bw (in module ttnn)": [[195, "ttnn.log_bw"]], "log_sigmoid (in module ttnn)": [[196, "ttnn.log_sigmoid"]], "log_sigmoid_bw (in module ttnn)": [[197, "ttnn.log_sigmoid_bw"]], "logaddexp (in module ttnn)": [[198, "ttnn.logaddexp"]], "logaddexp2 (in module ttnn)": [[199, "ttnn.logaddexp2"]], "logaddexp2_bw (in module ttnn)": [[200, "ttnn.logaddexp2_bw"]], "logaddexp_bw (in module ttnn)": [[201, "ttnn.logaddexp_bw"]], "logical_and (in module ttnn)": [[202, "ttnn.logical_and"]], "logical_and_ (in module ttnn)": [[203, "ttnn.logical_and_"]], "logical_not (in module ttnn)": [[204, "ttnn.logical_not"]], "logical_not_ (in module ttnn)": [[205, "ttnn.logical_not_"]], "logical_or (in module ttnn)": [[206, "ttnn.logical_or"]], "logical_or_ (in module ttnn)": [[207, "ttnn.logical_or_"]], "logical_xor (in module ttnn)": [[208, "ttnn.logical_xor"]], "logical_xor_ (in module ttnn)": [[209, "ttnn.logical_xor_"]], "logit (in module ttnn)": [[210, "ttnn.logit"]], "logit_bw (in module ttnn)": [[211, "ttnn.logit_bw"]], "logiteps_bw (in module ttnn)": [[212, "ttnn.logiteps_bw"]], "lt (in module ttnn)": [[213, "ttnn.lt"]], "lt_ (in module ttnn)": [[214, "ttnn.lt_"]], "ltz (in module ttnn)": [[215, "ttnn.ltz"]], "mac (in module ttnn)": [[216, "ttnn.mac"]], "manage_device() (in module ttnn)": [[217, "ttnn.manage_device"]], "matmul (in module ttnn)": [[218, "ttnn.matmul"]], "max (in module ttnn)": [[219, "ttnn.max"]], "max_bw (in module ttnn)": [[220, "ttnn.max_bw"]], "max_pool2d (in module ttnn)": [[221, "ttnn.max_pool2d"]], "maximum (in module ttnn)": [[222, "ttnn.maximum"]], "mean (in module ttnn)": [[223, "ttnn.mean"]], "min (in module ttnn)": [[224, "ttnn.min"]], "min_bw (in module ttnn)": [[225, "ttnn.min_bw"]], "minimum (in module ttnn)": [[226, "ttnn.minimum"]], "mish (in module ttnn)": [[227, "ttnn.mish"]], "preprocess_model() (in module ttnn.model_preprocessing)": [[228, "ttnn.model_preprocessing.preprocess_model"]], "preprocess_model_parameters() (in module ttnn.model_preprocessing)": [[229, "ttnn.model_preprocessing.preprocess_model_parameters"]], "moreh_sum (in module ttnn)": [[230, "ttnn.moreh_sum"]], "mse_loss (in module ttnn)": [[231, "ttnn.mse_loss"]], "mul_bw (in module ttnn)": [[232, "ttnn.mul_bw"]], "multigammaln (in module ttnn)": [[233, "ttnn.multigammaln"]], "multigammaln_bw (in module ttnn)": [[234, "ttnn.multigammaln_bw"]], "multiply (in module ttnn)": [[235, "ttnn.multiply"]], "ne (in module ttnn)": [[236, "ttnn.ne"]], "ne_ (in module ttnn)": [[237, "ttnn.ne_"]], "neg (in module ttnn)": [[238, "ttnn.neg"]], "neg_bw (in module ttnn)": [[239, "ttnn.neg_bw"]], "nextafter (in module ttnn)": [[240, "ttnn.nextafter"]], "nez (in module ttnn)": [[241, "ttnn.nez"]], "nonzero (in module ttnn)": [[242, "ttnn.nonzero"]], "normalize_global (in module ttnn)": [[243, "ttnn.normalize_global"]], "normalize_hw (in module ttnn)": [[244, "ttnn.normalize_hw"]], "ones (in module ttnn)": [[245, "ttnn.ones"]], "ones_like (in module ttnn)": [[246, "ttnn.ones_like"]], "open_device() (in module ttnn)": [[247, "ttnn.open_device"]], "outer (in module ttnn)": [[248, "ttnn.outer"]], "pad (in module ttnn)": [[249, "ttnn.pad"]], "pad_to_tile_shape() (in module ttnn)": [[250, "ttnn.pad_to_tile_shape"]], "permute (in module ttnn)": [[251, "ttnn.permute"]], "polar (in module ttnn)": [[252, "ttnn.polar"]], "polar_bw (in module ttnn)": [[253, "ttnn.polar_bw"]], "polygamma (in module ttnn)": [[254, "ttnn.polygamma"]], "polygamma_bw (in module ttnn)": [[255, "ttnn.polygamma_bw"]], "polyval (in module ttnn)": [[256, "ttnn.polyval"]], "pow (in module ttnn)": [[257, "ttnn.pow"]], "pow_bw (in module ttnn)": [[258, "ttnn.pow_bw"]], "prelu (in module ttnn)": [[259, "ttnn.prelu"]], "prepare_conv_bias() (in module ttnn)": [[260, "ttnn.prepare_conv_bias"]], "prepare_conv_weights() (in module ttnn)": [[261, "ttnn.prepare_conv_weights"]], "prod (in module ttnn)": [[262, "ttnn.prod"]], "prod_bw (in module ttnn)": [[263, "ttnn.prod_bw"]], "rad2deg (in module ttnn)": [[264, "ttnn.rad2deg"]], "rad2deg_bw (in module ttnn)": [[265, "ttnn.rad2deg_bw"]], "rdiv (in module ttnn)": [[266, "ttnn.rdiv"]], "rdiv_bw (in module ttnn)": [[267, "ttnn.rdiv_bw"]], "real (in module ttnn)": [[268, "ttnn.real"]], "real_bw (in module ttnn)": [[269, "ttnn.real_bw"]], "reallocate (in module ttnn)": [[270, "ttnn.reallocate"]], "reciprocal (in module ttnn)": [[271, "ttnn.reciprocal"]], "reciprocal_bw (in module ttnn)": [[272, "ttnn.reciprocal_bw"]], "reduce_scatter (in module ttnn)": [[273, "ttnn.reduce_scatter"]], "register_post_operation_hook() (in module ttnn)": [[274, "ttnn.register_post_operation_hook"]], "register_pre_operation_hook() (in module ttnn)": [[275, "ttnn.register_pre_operation_hook"]], "reglu (in module ttnn)": [[276, "ttnn.reglu"]], "relu (in module ttnn)": [[277, "ttnn.relu"]], "relu6 (in module ttnn)": [[278, "ttnn.relu6"]], "relu6_bw (in module ttnn)": [[279, "ttnn.relu6_bw"]], "relu_bw (in module ttnn)": [[280, "ttnn.relu_bw"]], "relu_max (in module ttnn)": [[281, "ttnn.relu_max"]], "relu_min (in module ttnn)": [[282, "ttnn.relu_min"]], "remainder (in module ttnn)": [[283, "ttnn.remainder"]], "remainder_bw (in module ttnn)": [[284, "ttnn.remainder_bw"]], "repeat (in module ttnn)": [[285, "ttnn.repeat"]], "repeat_bw (in module ttnn)": [[286, "ttnn.repeat_bw"]], "repeat_interleave (in module ttnn)": [[287, "ttnn.repeat_interleave"]], "reshape (in module ttnn)": [[288, "ttnn.reshape"]], "rms_norm (in module ttnn)": [[289, "ttnn.rms_norm"]], "round (in module ttnn)": [[290, "ttnn.round"]], "round_bw (in module ttnn)": [[291, "ttnn.round_bw"]], "rpow (in module ttnn)": [[292, "ttnn.rpow"]], "rpow_bw (in module ttnn)": [[293, "ttnn.rpow_bw"]], "rsqrt (in module ttnn)": [[294, "ttnn.rsqrt"]], "rsqrt_bw (in module ttnn)": [[295, "ttnn.rsqrt_bw"]], "rsub (in module ttnn)": [[296, "ttnn.rsub"]], "rsub_bw (in module ttnn)": [[297, "ttnn.rsub_bw"]], "scatter (in module ttnn)": [[298, "ttnn.scatter"]], "selu (in module ttnn)": [[299, "ttnn.selu"]], "selu_bw (in module ttnn)": [[300, "ttnn.selu_bw"]], "set_printoptions() (in module ttnn)": [[301, "ttnn.set_printoptions"]], "sigmoid (in module ttnn)": [[302, "ttnn.sigmoid"]], "sigmoid_accurate (in module ttnn)": [[303, "ttnn.sigmoid_accurate"]], "sigmoid_bw (in module ttnn)": [[304, "ttnn.sigmoid_bw"]], "sign (in module ttnn)": [[305, "ttnn.sign"]], "sign_bw (in module ttnn)": [[306, "ttnn.sign_bw"]], "signbit (in module ttnn)": [[307, "ttnn.signbit"]], "silu (in module ttnn)": [[308, "ttnn.silu"]], "silu_bw (in module ttnn)": [[309, "ttnn.silu_bw"]], "sin (in module ttnn)": [[310, "ttnn.sin"]], "sin_bw (in module ttnn)": [[311, "ttnn.sin_bw"]], "sinh (in module ttnn)": [[312, "ttnn.sinh"]], "sinh_bw (in module ttnn)": [[313, "ttnn.sinh_bw"]], "slice (in module ttnn)": [[314, "ttnn.slice"]], "softmax (in module ttnn)": [[315, "ttnn.softmax"]], "softplus (in module ttnn)": [[316, "ttnn.softplus"]], "softplus_bw (in module ttnn)": [[317, "ttnn.softplus_bw"]], "softshrink (in module ttnn)": [[318, "ttnn.softshrink"]], "softshrink_bw (in module ttnn)": [[319, "ttnn.softshrink_bw"]], "softsign (in module ttnn)": [[320, "ttnn.softsign"]], "softsign_bw (in module ttnn)": [[321, "ttnn.softsign_bw"]], "sqrt (in module ttnn)": [[322, "ttnn.sqrt"]], "sqrt_bw (in module ttnn)": [[323, "ttnn.sqrt_bw"]], "square (in module ttnn)": [[324, "ttnn.square"]], "square_bw (in module ttnn)": [[325, "ttnn.square_bw"]], "squared_difference (in module ttnn)": [[326, "ttnn.squared_difference"]], "squared_difference_bw (in module ttnn)": [[327, "ttnn.squared_difference_bw"]], "std (in module ttnn)": [[328, "ttnn.std"]], "sub_bw (in module ttnn)": [[329, "ttnn.sub_bw"]], "subalpha (in module ttnn)": [[330, "ttnn.subalpha"]], "subalpha_bw (in module ttnn)": [[331, "ttnn.subalpha_bw"]], "subtract (in module ttnn)": [[332, "ttnn.subtract"]], "sum (in module ttnn)": [[333, "ttnn.sum"]], "swiglu (in module ttnn)": [[334, "ttnn.swiglu"]], "swish (in module ttnn)": [[335, "ttnn.swish"]], "synchronize_device() (in module ttnn)": [[336, "ttnn.synchronize_device"]], "tan (in module ttnn)": [[337, "ttnn.tan"]], "tan_bw (in module ttnn)": [[338, "ttnn.tan_bw"]], "tanh (in module ttnn)": [[339, "ttnn.tanh"]], "tanh_bw (in module ttnn)": [[340, "ttnn.tanh_bw"]], "tanhshrink (in module ttnn)": [[341, "ttnn.tanhshrink"]], "tanhshrink_bw (in module ttnn)": [[342, "ttnn.tanhshrink_bw"]], "threshold (in module ttnn)": [[343, "ttnn.threshold"]], "threshold_bw (in module ttnn)": [[344, "ttnn.threshold_bw"]], "tilize (in module ttnn)": [[345, "ttnn.tilize"]], "tilize_with_val_padding (in module ttnn)": [[346, "ttnn.tilize_with_val_padding"]], "to_device (in module ttnn)": [[347, "ttnn.to_device"]], "to_layout (in module ttnn)": [[348, "ttnn.to_layout"]], "to_memory_config (in module ttnn)": [[349, "ttnn.to_memory_config"]], "to_torch (in module ttnn)": [[350, "ttnn.to_torch"]], "topk (in module ttnn)": [[351, "ttnn.topk"]], "attention_softmax (in module ttnn.transformer)": [[352, "ttnn.transformer.attention_softmax"]], "attention_softmax_ (in module ttnn.transformer)": [[353, "ttnn.transformer.attention_softmax_"]], "concatenate_heads (in module ttnn.transformer)": [[354, "ttnn.transformer.concatenate_heads"]], "scaled_dot_product_attention (in module ttnn.transformer)": [[355, "ttnn.transformer.scaled_dot_product_attention"]], "scaled_dot_product_attention_decode (in module ttnn.transformer)": [[356, "ttnn.transformer.scaled_dot_product_attention_decode"]], "split_query_key_value_and_split_heads (in module ttnn.transformer)": [[357, "ttnn.transformer.split_query_key_value_and_split_heads"]], "tril (in module ttnn)": [[358, "ttnn.tril"]], "triu (in module ttnn)": [[359, "ttnn.triu"]], "trunc (in module ttnn)": [[360, "ttnn.trunc"]], "trunc_bw (in module ttnn)": [[361, "ttnn.trunc_bw"]], "unary_chain (in module ttnn)": [[362, "ttnn.unary_chain"]], "untilize (in module ttnn)": [[363, "ttnn.untilize"]], "untilize_with_unpadding (in module ttnn)": [[364, "ttnn.untilize_with_unpadding"]], "upsample (in module ttnn)": [[365, "ttnn.upsample"]], "var (in module ttnn)": [[366, "ttnn.var"]], "where (in module ttnn)": [[367, "ttnn.where"]], "where_bw (in module ttnn)": [[368, "ttnn.where_bw"]], "xlogy (in module ttnn)": [[369, "ttnn.xlogy"]], "xlogy_bw (in module ttnn)": [[370, "ttnn.xlogy_bw"]], "zeros (in module ttnn)": [[371, "ttnn.zeros"]], "zeros_like (in module ttnn)": [[372, "ttnn.zeros_like"]], "memoryconfig (class in ttnn)": [[377, "ttnn.MemoryConfig"]], "tensor (class in ttnn)": [[377, "ttnn.Tensor"]], "__init__() (ttnn.memoryconfig method)": [[377, "ttnn.MemoryConfig.__init__"]], "__init__() (ttnn.tensor method)": [[377, "ttnn.Tensor.__init__"]], "buffer() (ttnn.tensor method)": [[377, "ttnn.Tensor.buffer"]], "device() (ttnn.tensor method)": [[377, "ttnn.Tensor.device"]], "get_dtype() (ttnn.tensor method)": [[377, "ttnn.Tensor.get_dtype"]], "get_layout() (ttnn.tensor method)": [[377, "ttnn.Tensor.get_layout"]], "pad() (ttnn.tensor method)": [[377, "ttnn.Tensor.pad"]], "pad_to_tile() (ttnn.tensor method)": [[377, "ttnn.Tensor.pad_to_tile"]], "storage_type() (ttnn.tensor method)": [[377, "ttnn.Tensor.storage_type"]], "to() (ttnn.tensor method)": [[377, "ttnn.Tensor.to"]], "unpad() (ttnn.tensor method)": [[377, "ttnn.Tensor.unpad"]], "unpad_from_tile() (ttnn.tensor method)": [[377, "ttnn.Tensor.unpad_from_tile"]], "adaptiveavgpool2d (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.AdaptiveAvgPool2d"]], "addandnorm() (in module tt_lib.fused_ops.add_and_norm)": [[378, "tt_lib.fused_ops.add_and_norm.AddAndNorm"]], "batchnorm2d (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.BatchNorm2d"]], "bcastopdim (class in ttnn)": [[378, "ttnn.BcastOpDim"]], "bcastopmath (class in ttnn)": [[378, "ttnn.BcastOpMath"]], "conv2d (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.Conv2d"]], "groupnorm (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.GroupNorm"]], "layernorm (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.LayerNorm"]], "layernorm() (in module tt_lib.fused_ops.layernorm)": [[378, "tt_lib.fused_ops.layernorm.Layernorm"]], "linear() (in module tt_lib.fused_ops.linear)": [[378, "tt_lib.fused_ops.linear.Linear"]], "maxpool2d (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.MaxPool2d"]], "binary_bitwise_and (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.binary_bitwise_and"]], "binary_bitwise_left_shift (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.binary_bitwise_left_shift"]], "binary_bitwise_or (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.binary_bitwise_or"]], "binary_bitwise_right_shift (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.binary_bitwise_right_shift"]], "binary_bitwise_xor (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.binary_bitwise_xor"]], "binary_fmod (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.binary_fmod"]], "bitwise_not (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.bitwise_not"]], "ceil (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.ceil"]], "chunk() (in module tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.chunk"]], "concat() (in module tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.concat"]], "conv2d() (in module tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.conv2d"]], "cpu() (in module ttnn.tensor)": [[378, "ttnn.Tensor.cpu"]], "floor (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.floor"]], "full() (in module tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.full"]], "group_norm() (in module tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.group_norm"]], "group_norm() (in module ttnn.operations.moreh)": [[378, "ttnn.operations.moreh.group_norm"]], "group_norm_backward() (in module ttnn.operations.moreh)": [[378, "ttnn.operations.moreh.group_norm_backward"]], "interpolate() (in module tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.interpolate"]], "layer_norm() (in module tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.layer_norm"]], "logsoftmax() (in module ttnn.operations.moreh)": [[378, "ttnn.operations.moreh.logsoftmax"]], "logsoftmax_backward() (in module ttnn.operations.moreh)": [[378, "ttnn.operations.moreh.logsoftmax_backward"]], "mean() (in module ttnn.operations.moreh)": [[378, "ttnn.operations.moreh.mean"]], "mean_backward() (in module ttnn.operations.moreh)": [[378, "ttnn.operations.moreh.mean_backward"]], "norm() (in module ttnn.operations.moreh)": [[378, "ttnn.operations.moreh.norm"]], "norm_backward() (in module ttnn.operations.moreh)": [[378, "ttnn.operations.moreh.norm_backward"]], "pad() (in module tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.pad"]], "repeat() (in module tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.repeat"]], "repeat_interleave() (in module tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.repeat_interleave"]], "reshape() (in module tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.reshape"]], "silu() (in module tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.silu"]], "softmax() (in module tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.softmax"]], "softmax() (in module ttnn.operations.moreh)": [[378, "ttnn.operations.moreh.softmax"]], "softmax_backward() (in module ttnn.operations.moreh)": [[378, "ttnn.operations.moreh.softmax_backward"]], "softmin() (in module ttnn.operations.moreh)": [[378, "ttnn.operations.moreh.softmin"]], "softmin_backward() (in module ttnn.operations.moreh)": [[378, "ttnn.operations.moreh.softmin_backward"]], "tensor_slice() (in module tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.tensor_slice"]], "torch_argmax (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.torch_argmax"]], "torch_argmin (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.torch_argmin"]], "trunc (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.trunc"]], "unary_bitwise_and (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.unary_bitwise_and"]], "unary_bitwise_left_shift (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.unary_bitwise_left_shift"]], "unary_bitwise_or (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.unary_bitwise_or"]], "unary_bitwise_right_shift (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.unary_bitwise_right_shift"]], "unary_bitwise_xor (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.unary_bitwise_xor"]], "unary_fmod (class in tt_lib.fallback_ops)": [[378, "tt_lib.fallback_ops.unary_fmod"]], "shape (class in ttnn)": [[383, "ttnn.Shape"]], "rank (ttnn.shape property)": [[383, "ttnn.Shape.rank"]], "to_rank() (ttnn.shape method)": [[383, "ttnn.Shape.to_rank"]]}})